{"version":3,"file":"static/js/14185.3cbad692.chunk.js","mappings":"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","sources":["njslab/GIS/ReactMapGL/Layer/LayerCustom.tsx","njslab/GIS/ReactMapGL/Core/index.ts","njslab/GIS/ReactMapGL/Controller/index.tsx","webpack://NJS-Lab/./src/njslab/GIS/ReactMapGL/style.module.css?4b67","njslab/GIS/ReactMapGL/App.tsx","njslab/GIS/ReactMapGL/index.tsx"],"sourcesContent":["\nimport { Layer, Source } from \"react-map-gl\";\n\nconst LayerCustom = () => {\n\n  const data: any = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {},\n        \"geometry\": {\n          \"coordinates\": [\n            [\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ]\n            ]\n          ],\n          \"type\": \"Polygon\"\n        }\n      }\n    ]\n  }\n\n  // const data: any = {\n  //   type: 'FeatureCollection',\n  //   features: [\n  //     {\n  //       type: 'Feature',\n  //       properties: {},\n  //       geometry: {\n  //         type: 'Polygon',\n  //         coordinates: [\n  //           [\n  //             [-122.4194, 37.7749],\n  //             [-122.4194, 37.8049],\n  //             [-122.3894, 37.8049],\n  //             [-122.3894, 37.7749],\n  //             [-122.4194, 37.7749],\n  //           ],\n  //         ],\n  //       },\n  //     },\n  //   ],\n  // };\n\n\n  const ayerStyle3: any = {\n    id: 'custom-layer',\n    type: 'fill',\n    paint: {\n      'fill-color': '#3366cc',\n      'fill-opacity': 0.5,\n    },\n  };\n\n  const layerID = 'my-layer';\n\n  let visible = true;\n\n  const layerStyle: any = {\n    id: layerID,\n    // source: layerID,\n    type: 'line',\n    layout: {\n      'line-join': 'round',\n      'line-cap': 'round',\n      visibility: visible ? 'visible' : 'none'\n    },\n    // 'source-layer': 'landuse',\n    paint: {\n      'line-color': '#4E3FC8',\n      'line-width': 4,\n    },\n    // filter: ['==', 'class', 'park'],\n  }\n\n  const layerStyleFill: any = {\n    ...layerStyle,\n    id: layerID + '-fill',\n    type: 'fill',\n    source: layerID,\n    layout: {\n      visibility: visible ? 'visible' : 'none'\n    },\n    paint: {\n      'fill-color': '#f00',\n      'fill-opacity': 0.1,\n    },\n  };\n\n  return (\n    <Source\n      id={layerID}\n      type='geojson'\n      data={data}\n    >\n      <Layer {...layerStyle} />\n      <Layer {...layerStyleFill} />\n    </Source>\n\n  );\n\n}\nexport default LayerCustom;","\nexport const downloadImage = (canvasMapbox, customCanvas, fileName = 'map.png') => {\n    // console.log({ canvasMapbox, customCanvas })\n    // const canvasMapbox = this.map.getCanvas(); // this.solution.deckGL.deckLayer.deck.canvas; // this.map.getCanvas(); //  document.querySelector(\".mapboxgl-canvas\") as HTMLCanvasElement;\n    const canvasOut = document.createElement('canvas')\n    canvasOut.width = canvasMapbox.width\n    canvasOut.height = canvasMapbox.height\n    const context = canvasOut.getContext('2d')\n    // console.log('context', context)\n    // context.globalAlpha = 1.0;\n    context.globalAlpha = 1.0\n    // context.drawImage(this.deckLayer.deck.canvas, 0, 0);\n    context.drawImage(canvasMapbox, 0, 0)\n    // context.drawImage(this.solution.renderer.canvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n    context.drawImage(customCanvas, 0, 0, canvasMapbox.width, canvasMapbox.height)\n    const dataURL = canvasOut.toDataURL()\n    const img = new Image()\n    img.width = canvasMapbox.width\n    img.height = canvasMapbox.height\n    img.src = dataURL\n    const link = document.createElement('a')\n    link.download = fileName\n    link.href = dataURL\n    link.click()\n    return dataURL\n}\n\nexport const takeScreenshot = (map) => {\n    return new Promise(function (resolve, reject) {\n        map.once('render', function () {\n            resolve(map.getCanvas().toDataURL())\n        })\n        /* trigger render */\n        map.setBearing(map.getBearing())\n    })\n}\n","import { Button } from 'antd';\nimport { takeScreenshot } from '../Core';\n\nconst Controller = ({ mapRef }) => {\n\n    const onCapture = (e) => {\n        const canvas = mapRef.getCanvas()\n\n        takeScreenshot(mapRef).then((dataURL) => {\n            // console.log(dataURL)\n\n            const img = new Image()\n            img.width = canvas.width\n            img.height = canvas.height\n            img.src = dataURL as string;\n            // img.onload = function () {\n            //   console.log('done')\n            //   ctx.drawImage(img, 0, 0)\n            // }\n\n\n            const link = document.createElement('a')\n            link.download = 'fileName.png'\n            link.href = dataURL as string;\n            link.click()\n\n        });\n    }\n\n    return (\n        <div>\n            <div>menu</div>\n\n            <Button type=\"text\" onClick={onCapture}>capture</Button>\n            {/* <Button type=\"text\" onClick={onCapture}>capture</Button> */}\n            {/* <Button type=\"text\" onClick={onCapture}>capture</Button> */}\n\n        </div>\n    )\n}\n\nexport default Controller","// extracted by mini-css-extract-plugin\nexport default {\"mapContainer\":\"style_mapContainer__XelPv\",\"menu\":\"style_menu__vkPn5\"};","import mapboxgl from 'mapbox-gl';\nimport Map, { Marker } from 'react-map-gl';\nimport { Suspense, useCallback, useState, useRef } from 'react';\nimport LayerCustom from './Layer/LayerCustom';\n// import { Scene } from './Scene';\n\nimport Controller from './Controller';\n\nimport { Button } from 'antd'\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport styles from './style.module.css';\n\nconst App = () => {\n\n    const mapRef = useRef();\n    const canvasRef = useRef();\n\n    const [hoverInfo, setHoverInfo] = useState(null);\n\n    // const onHover = useCallback(event => {\n    //     console.log(event.features)\n    //     if (event?.features && event.features.length > 0) {\n    //         console.log(event.features)\n    //         // setHoveredFeatures(event.features)\n    //     } else {\n    //         // setHoveredFeatures([])\n    //     }\n    // }, [])\n\n    const onHover = useCallback(event => {\n        const county = event.features && event.features[0];\n        // console.log(event.features)\n        // console.log(event.target.queryRenderedFeatures(event.point))\n\n        setHoverInfo({\n            longitude: event.lngLat.lng,\n            latitude: event.lngLat.lat,\n            countyName: county && county.properties.COUNTY\n        });\n\n    }, []);\n\n    const onClick = useCallback(event => {\n\n\n        const features = event.target.queryRenderedFeatures(event.point);\n        // Now 'features' contains information about the clicked features\n        // console.log(features);\n        //   };\n\n        //     if (event?.features?.length > 0) {\n        //         // Iterates through clicked features (in order of top-down) until it successfully\n        //         // triggers a callback that returns true.\n        //         event.features.some((clickedFeature) =>\n        //             Object.entries(mapClickHandlers).some(([label, handler]) =>\n        //                 clickedFeature?.layer?.id.includes(label) && handler(clickedFeature, event)\n        //             )\n        //         )\n        //     }\n        // }, [mapClickHandlers, drawMode])\n    }, [])\n\n    const marker = {\n        latitude: 37.7577,\n        longitude: -122.4376,\n    };\n\n    return (\n        // <div ref={mapContainer} className={styles.mapContainer}>\n        // <div>\n        <div className={styles.mapContainer}>\n            <div className={styles.menu}>\n                <Controller mapRef={mapRef.current}/>\n            </div>\n            <Suspense>\n                <Map\n                    // @ts-ignore\n                    mapLib={mapboxgl}\n                    ref={mapRef}\n                    initialViewState={{\n                        longitude: -100,\n                        latitude: 40,\n                        zoom: 3.5\n\n                        // latitude: 37.7577,\n                        // longitude: -122.4376,\n                        // zoom: 8,\n                    }}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        zIndex: 0,\n                        flex: 1,\n                    }}\n                    mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n                    mapboxAccessToken={process.env.REACT_APP_MAPBOX}\n                    dragRotate={false}\n\n                    onMouseMove={onHover}\n                    onClick={onClick}\n\n                >\n                    {/* <Marker latitude={marker.latitude} longitude={marker.longitude}>\n                    <div>Marker Content</div>\n                </Marker> */}\n\n                    <LayerCustom />\n\n                </Map>\n            </Suspense>\n        </div>\n    )\n}\nexport default App;","'use client'\r\n\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App'\r\nimport React from 'react';\r\n\r\nexport class Solution {\r\n  divHost: HTMLDivElement;\r\n  constructor(id: string) {\r\n    this.divHost = document.getElementById(id) as HTMLDivElement;\r\n    const div = document.createElement('div');\r\n    div.style.height = '100%';\r\n    div.style.width = '100%';\r\n    this.divHost.appendChild(div);\r\n\r\n    const root = ReactDOM.createRoot(div);\r\n\r\n    root.render(\r\n      // <React.StrictMode>\r\n      // <HelleApp /> syntax sugar\r\n      React.createElement(App, {})\r\n      // </React.StrictMode>\r\n    );\r\n  }\r\n  public destroy() {\r\n    try {\r\n      while (this.divHost && this.divHost.lastElementChild) {\r\n          const lastChild = this.divHost.lastElementChild as Node;\r\n          this.divHost.removeChild(lastChild);\r\n      }\r\n  } catch (error) {\r\n      console.error('Error removing child elements:', error);\r\n  }\r\n  \r\n  }\r\n}"],"names":["layerID","layerStyle","id","type","layout","visibility","paint","layerStyleFill","source","data","mapRef","onClick","e","canvas","getCanvas","map","Promise","resolve","reject","once","toDataURL","setBearing","getBearing","then","dataURL","img","Image","width","height","src","link","document","createElement","download","href","click","useRef","hoverInfo","setHoverInfo","useState","onHover","useCallback","event","county","features","longitude","lngLat","lng","latitude","lat","countyName","properties","COUNTY","target","queryRenderedFeatures","point","className","styles","current","Suspense","mapLib","mapboxgl","ref","initialViewState","zoom","style","position","top","left","right","bottom","zIndex","flex","mapStyle","mapboxAccessToken","process","dragRotate","onMouseMove","Solution","constructor","divHost","this","getElementById","div","appendChild","ReactDOM","render","React","App","destroy","lastElementChild","lastChild","removeChild","error","console"],"sourceRoot":""}
{"version":3,"file":"static/js/1439.06427925.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-curve/renderer/index.ts","njslab/Workshop/workshop-curve/renderer/util.ts","njslab/Workshop/workshop-curve/NURBS/Curve.ts","njslab/Workshop/workshop-curve/workshop-03-curve.ts"],"sourcesContent":["export class Canvas3DWireframe {\n  public div: HTMLElement;\n  public renderer: RendererCanvas3DWireframe;\n  public pts = [];\n  public lns = [];\n  public t = 0.0;\n  constructor(id: string) {\n    this.div = document.getElementById(id);\n    this.renderer = new RendererCanvas3DWireframe(id);\n    this.renderer.pts = this.pts;\n\n    this.init();\n    this.update();\n    this.render();\n  }\n  public init() {\n    // TODO\n  }\n  public update() {\n    // TODO\n  }\n  public render() {\n    requestAnimationFrame(() => {\n      this.render();\n    });\n    this.update();\n    this.renderer.render();\n  }\n  public destroy() {\n    // this.renderer.destroy();\n    try {\n      while (this.div && this.div.lastElementChild) {\n        const lastChild = this.div.lastElementChild as Node;\n        this.div.removeChild(lastChild);\n      }\n    } catch (error) {\n      console.error(\"Error removing child elements:\", error);\n    }\n  }\n}\n\nexport class RendererCanvas3DWireframe {\n  public render: () => void;\n\n  public vecs = [];\n  public pts = [];\n  public cps = [];\n  public circle = [];\n  public polylines = [];\n\n  public showFrame = false;\n  public showPoint = true;\n  \n  constructor(id) {\n    const div = document.getElementById(id);\n    const bounding = div.getBoundingClientRect();\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = bounding.width;\n    canvas.height = bounding.height;\n    div.appendChild(canvas);\n\n    const ctx = canvas.getContext(\"2d\");\n\n    let angleX = -Math.PI / 2;\n    let angleY = 0;\n    let dragging = false;\n    let panning = false;\n    let zoom = 1;\n    let lastMouseX = 0;\n    let lastMouseY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n    let panStartX = 0;\n    let panStartY = 0;\n    let fov = 500;\n\n\n    const rotate = (point, angleX, angleY) => {\n      const cosX = Math.cos(angleX);\n      const sinX = Math.sin(angleX);\n      const cosY = Math.cos(angleY);\n      const sinY = Math.sin(angleY);\n\n      // (swap Y and Z for Z-up)\n      let x = point.x * cosY - point.y * sinY;\n      let y = point.x * sinY + point.y * cosY;\n\n      let z = point.z * cosX - y * sinX;\n      y = point.z * sinX + y * cosX;\n\n      return { x, y, z };\n    };\n\n    const project = (point) => {\n      const scale = (fov / (fov + point.y)) * zoom; // Z-axis is now vertical\n      return {\n        x: point.x * scale + canvas.width / 2 + offsetX,\n        y: -point.z * scale + canvas.height / 2 + offsetY, // Invert Z for canvas Y-axis\n      };\n    };\n\n    const projectionToView = (p) => {\n      let rotated = rotate(p, angleX, angleY);\n      return project(rotated);\n    }\n\n    const rendering = () => {\n      // requestAnimationFrame(() => {\n      //   rendering();\n      // });\n      // console.log('rendering...', this.pts)\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\n      for(let i = 0; i < this.polylines.length; ++i) {\n        let col = \"red\";\n        if (i % 3 === 1) {\n          col = \"green\";\n        } else if (i % 3 === 2) {\n          col = \"blue\";\n        }\n        ctx.strokeStyle = col;\n        ctx.beginPath();\n        for(let j = 0; j < this.polylines[i].length; ++j) {\n          let projectPt = projectionToView(this.polylines[i][j])\n          if (j === 0 ) {\n            ctx.moveTo(projectPt.x, projectPt.y)\n          } else {\n            ctx.lineTo(projectPt.x, projectPt.y)\n          }\n        }\n        ctx.stroke();\n      }\n\n\n      const vsForLine = [];\n\n      if (this.showPoint) {\n        this.pts.forEach((point) => {\n          const rotated = rotate(point, angleX, angleY);\n          const projected = project(rotated);\n  \n          const depthScale = (fov / (fov + rotated.y)) * zoom;\n          let radius = point.size * depthScale;\n          radius = radius < 0.1 ? 0.1 : radius;\n  \n          ctx.beginPath();\n          ctx.arc(projected.x, projected.y, radius, 0, Math.PI * 2);\n          ctx.fillStyle = point.color ? point.color : \"#f00\";\n          ctx.fill();\n        });\n      }\n\n      let count = 0;\n\n      // console.log(this.vecs.length)\n\n      if (this.showFrame) {\n        this.vecs.forEach((vs) => {\n          // console.log(vs)\n\n          const rotated = rotate(vs[0], angleX, angleY);\n          const projected = project(rotated);\n\n          vsForLine.push(projected);\n\n          const rotated2 = rotate(vs[1], angleX, angleY);\n          const projected2 = project(rotated2);\n\n          let col = \"red\";\n          if (count % 3 === 1) {\n            col = \"green\";\n          } else if (count % 3 === 2) {\n            col = \"blue\";\n          }\n\n          drawVector(ctx, projected, projected2, col);\n          // console.log(count)\n          count++;\n        });\n      }\n      // drawCurve(ctx, vsForLine);\n\n\n\n\n\n      this.cps.forEach((point) => {\n        const rotated = rotate(point, angleX, angleY);\n        const projected = project(rotated);\n\n        const depthScale = (fov / (fov + rotated.y)) * zoom;\n        let radius = 3 * depthScale;\n        radius = radius < 0.1 ? 0.1 : radius;\n\n        ctx.beginPath();\n        ctx.arc(projected.x, projected.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = \"#000\";\n        ctx.fill();\n      });\n\n      ctx.beginPath();\n      for (let i = 0; i < this.cps.length; ++i) {\n        const rotated = rotate(this.cps[i], angleX, angleY);\n        const projected = project(rotated);\n\n        if (i === 0) {\n          ctx.moveTo(projected.x, projected.y);\n        } else {\n          ctx.lineTo(projected.x, projected.y);\n        }\n      }\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = \"rgba(0,0,0, 0.75)\";\n      ctx.stroke();\n\n      if (this.circle[0]) {\n\n        drawCircle(ctx, this.circle[0], this.circle[1], projectionToView)\n       \n      }\n    };\n    this.render = () => rendering();\n\n    canvas.addEventListener(\"mousedown\", (e) => {\n      if (e.button === 2) {\n        dragging = true;\n      } else if (e.button === 0) {\n        if (e.altKey) {\n          dragging = true;\n        } else {\n          panning = true;\n          panStartX = e.clientX - offsetX;\n          panStartY = e.clientY - offsetY;\n        }\n      }\n      lastMouseX = e.clientX;\n      lastMouseY = e.clientY;\n    });\n\n    canvas.addEventListener(\"mousemove\", (e) => {\n      if (dragging) {\n        const dx = e.clientX - lastMouseX;\n        const dy = e.clientY - lastMouseY;\n        angleX -= dy * 0.01;\n        angleY += dx * 0.01;\n        lastMouseX = e.clientX;\n        lastMouseY = e.clientY;\n        //   rendering();\n      } else if (panning) {\n        offsetX = e.clientX - panStartX;\n        offsetY = e.clientY - panStartY;\n        //   rendering();\n      }\n    });\n\n    canvas.addEventListener(\"mouseup\", () => {\n      dragging = false;\n      panning = false;\n    });\n\n    canvas.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n\n    canvas.addEventListener(\"wheel\", (e) => {\n      const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n      const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n      const prevZoom = zoom;\n      const zoomSpeed = Math.max(0.001, zoom * 0.02); // zoom speed based on zoom level\n\n      zoom += e.deltaY * -zoomSpeed;\n      zoom = Math.min(Math.max(zoom, 0.1), 50);\n\n      const scaleChange = zoom / prevZoom;\n\n      offsetX -= (mouseX - canvas.width / 2 - offsetX) * (scaleChange - 1);\n      offsetY -= (mouseY - canvas.height / 2 - offsetY) * (scaleChange - 1);\n\n      // rendering();\n    });\n\n    rendering();\n  }\n}\n\nconst drawVector = (ctx, origin, vector, color = \"black\") => {\n  const start = origin;\n  const end = vector;\n  // console.log(color)\n  ctx.beginPath();  \n  ctx.moveTo(start.x, start.y);\n  ctx.lineTo(end.x, end.y);\n  ctx.closePath();\n  \n  ctx.strokeStyle = color;\n  ctx.lineWidth = 2;\n  ctx.stroke();\n};\n\nconst drawCurve = (ctx, vs) => {\n  ctx.beginPath();\n  ctx.strokeStyle = \"blue\";\n  ctx.lineWidth = 2;\n\n  // const steps = 100;\n  for (let i = 0; i < vs.length; i++) {\n    if (i === 0) {\n      ctx.moveTo(vs[i].x, vs[i].y);\n    } else {\n      ctx.lineTo(vs[i].x, vs[i].y);\n    }\n  }\n  ctx.stroke();\n};\n\nconst drawCircle = (ctx, cp, radius, projectionToView ) => {\n\n  ctx.beginPath();\n  for (let angle = 0; angle <= 360; angle++) {\n\n    const radians = (angle * Math.PI) / 180;\n\n    const x = cp.x + radius * Math.cos(radians);\n    const y = cp.y + radius * Math.sin(radians);\n    const z = cp.z\n\n    let projected = projectionToView({x,y,z})\n    if (angle === 0) {\n      ctx.moveTo(projected.x, projected.y);\n    } else {\n      ctx.lineTo(projected.x, projected.y);\n    }\n  }\n  ctx.closePath();\n  ctx.stroke();\n};\n","\nexport const getSlider = (title: string, min: number, max: number) => {\n    const div = document.createElement(\"div\");\n    div.style.display = \"flex\";\n  \n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n  \n    const text = document.createElement(\"div\");\n    text.textContent = title;\n    text.style.color = \"#aaa\";\n    div.appendChild(slider);\n    div.appendChild(text);\n  \n    return {\n      div,\n      slider,\n    };\n  };\n  \n  export const getCheckBox = (title: string) => {\n    const div = document.createElement(\"div\");\n    div.style.display = \"flex\";\n  \n    const checkBox = document.createElement(\"input\");\n    checkBox.type = \"checkbox\";\n    checkBox.defaultChecked = false;\n    const text = document.createElement(\"div\");\n    text.textContent = title;\n    text.style.color = \"#aaa\";\n    div.appendChild(checkBox);\n    div.appendChild(text);\n  \n    return {\n      div,\n      checkBox,\n    };\n  };\n  ","\n\nexport class Vector3 {\n    color = \"blue\";\n    size = 1;\n    constructor(public x: number, public y: number, public z: number) {}\n  \n    static add(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(a.x + b.x, a.y + b.y, a.z + b.z);\n    }\n  \n    static subtract(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(a.x - b.x, a.y - b.y, a.z - b.z);\n    }\n  \n    static scale(v: Vector3, scalar: number): Vector3 {\n      return new Vector3(v.x * scalar, v.y * scalar, v.z * scalar);\n    }\n  \n    static cross(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x\n      );\n    }\n  \n    magnitude(): number {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n  \n    normalize(): Vector3 {\n      const mag = this.magnitude();\n      if (mag < 1e-10) return new Vector3(0, 0, 0); // 매우 작은 벡터는 0으로 처리\n      return new Vector3(this.x / mag, this.y / mag, this.z / mag);\n    }\n  \n    isZero(): boolean {\n      return (\n        Math.abs(this.x) < 1e-10 &&\n        Math.abs(this.y) < 1e-10 &&\n        Math.abs(this.z) < 1e-10\n      );\n    }\n  }\n  \nexport class NURBSCurve {\n    private controlPoints: Vector3[];\n    private knots: number[];\n    private weights: number[];\n    private degree: number;\n    private periodic: boolean;\n    private wrappedPoints: Vector3[]; // 주기적 곡선을 위한 확장된 제어점\n  \n    constructor(\n      controlPoints: Vector3[],\n      degree: number = 3,\n      periodic: boolean = false\n    ) {\n      this.degree = degree;\n      this.periodic = periodic;\n  \n      if (periodic) {\n        // 주기적 곡선을 위해 제어점을 확장\n        this.wrappedPoints = this.wrapControlPoints(controlPoints, degree);\n        this.controlPoints = controlPoints;\n        this.knots = this.generatePeriodicKnots(\n          this.wrappedPoints.length,\n          degree\n        );\n      } else {\n        this.controlPoints = controlPoints;\n        this.wrappedPoints = controlPoints;\n        this.knots = this.generateKnots(controlPoints.length, degree);\n      }\n  \n      this.weights = Array(this.wrappedPoints.length).fill(1);\n    }\n  \n    private basisFunction(i: number, k: number, t: number): number {\n      if (k === 0) return this.knots[i] <= t && t < this.knots[i + 1] ? 1 : 0;\n      const denom1 = this.knots[i + k] - this.knots[i];\n      const denom2 = this.knots[i + k + 1] - this.knots[i + 1];\n      const term1 = denom1\n        ? ((t - this.knots[i]) / denom1) * this.basisFunction(i, k - 1, t)\n        : 0;\n      const term2 = denom2\n        ? ((this.knots[i + k + 1] - t) / denom2) *\n          this.basisFunction(i + 1, k - 1, t)\n        : 0;\n      return term1 + term2;\n    }\n  \n    private secondDerivative(t: number): Vector3 {\n      if (t >= 1) t = 1 - 1e-10;\n      const n = this.controlPoints.length;\n      let numerator = new Vector3(0, 0, 0);\n  \n      for (let i = 0; i < n - 2; i++) {\n        const weightBasis =\n          this.weights[i] *\n          (this.basisFunction(i, this.degree - 2, t) -\n            2 * this.basisFunction(i + 1, this.degree - 2, t) +\n            this.basisFunction(i + 2, this.degree - 2, t));\n        const temp = Vector3.add(\n          this.controlPoints[i + 2],\n          Vector3.subtract(\n            Vector3.scale(this.controlPoints[i + 1], -2),\n            this.controlPoints[i]\n          )\n        );\n        numerator = Vector3.add(numerator, Vector3.scale(temp, weightBasis));\n      }\n  \n      return numerator;\n    }\n    private derivativeBasisFunction(i: number, k: number, t: number): number {\n      if (k === 0) return 0;\n      \n      const denomA = this.knots[i + k] - this.knots[i];\n      const denomB = this.knots[i + k + 1] - this.knots[i + 1];\n      \n      let termA = 0;\n      let termB = 0;\n  \n      if (Math.abs(denomA) > 1e-10) {\n          termA = (k / denomA) * this.basisFunction(i, k - 1, t);\n      }\n      \n      if (Math.abs(denomB) > 1e-10) {\n          termB = (k / denomB) * this.basisFunction(i + 1, k - 1, t);\n      }\n  \n      return termA - termB;\n  }\n  \n  public derivative(t: number): Vector3 {\n      if (this.periodic) {\n          t = t - Math.floor(t);\n      }\n      \n      if (Math.abs(t - 1) < 1e-10) {\n          t = 1 - 1e-10;\n      }\n  \n      const n = this.wrappedPoints.length;\n      let numerator = new Vector3(0, 0, 0);\n      let denominator = 0;\n      let derivNumerator = new Vector3(0, 0, 0);\n      let derivDenominator = 0;\n  \n      for (let i = 0; i < n; i++) {\n          const basis = this.basisFunction(i, this.degree, t);\n          const derivBasis = this.derivativeBasisFunction(i, this.degree, t);\n          const weight = this.weights[i];\n          \n          numerator = Vector3.add(numerator, \n              Vector3.scale(this.wrappedPoints[i], weight * basis));\n          denominator += weight * basis;\n          \n          derivNumerator = Vector3.add(derivNumerator, \n              Vector3.scale(this.wrappedPoints[i], weight * derivBasis));\n          derivDenominator += weight * derivBasis;\n      }\n  \n      if (Math.abs(denominator) < 1e-10) {\n          console.warn('Warning: denominator near zero in derivative');\n          return new Vector3(0, 0, 0);\n      }\n  \n      const quotient = Vector3.scale(numerator, 1 / denominator);\n      const derivQuotient = Vector3.subtract(\n          Vector3.scale(derivNumerator, 1 / denominator),\n          Vector3.scale(numerator, derivDenominator / (denominator * denominator))\n      );\n  \n      return derivQuotient;\n  }\n    public curvature(t: number): number {\n      const d1 = this.derivative(t);\n      const d2 = this.secondDerivative(t);\n      const crossProduct = Vector3.cross(d1, d2);\n      const d1Mag = d1.magnitude();\n      if (d1Mag < 1e-10) return 0;\n      return crossProduct.magnitude() / Math.pow(d1Mag, 3);\n    }\n  \n    public osculatingCircleRadius(t: number): number {\n      const curv = this.curvature(t);\n      return curv < 1e-10 ? Infinity : 1 / curv;\n    }\n  \n    public tangent(t: number): Vector3 {\n      const deriv = this.derivative(t);\n      const mag = deriv.magnitude();\n      \n      if (mag < 1e-10) {\n          // 미분값이 너무 작을 경우, 이전/이후 점의 방향을 사용\n          const delta = 1e-5;\n          const p1 = this.evaluate(Math.max(0, t - delta));\n          const p2 = this.evaluate(Math.min(1, t + delta));\n          const dir = Vector3.subtract(p2, p1);\n          const dirMag = dir.magnitude();\n          \n          if (dirMag < 1e-10) {\n              return new Vector3(1, 0, 0); // 기본 방향\n          }\n          \n          return Vector3.scale(dir, 1 / dirMag);\n      }\n      \n      return Vector3.scale(deriv, 1 / mag);\n  }\n  \n    public principalNormal(t: number): Vector3 {\n      const d1 = this.derivative(t);\n      const d2 = this.secondDerivative(t);\n  \n      // Frenet-Serret 공식에 따른 주법선 계산\n      const crossProduct = Vector3.cross(d1, d2);\n      if (crossProduct.isZero()) {\n        // 곡률이 0인 경우 임의의 수직 벡터 반환\n        if (Math.abs(d1.z) > 1e-10) {\n          return new Vector3(1, 0, -d1.x / d1.z).normalize();\n        } else if (Math.abs(d1.y) > 1e-10) {\n          return new Vector3(1, -d1.x / d1.y, 0).normalize();\n        } else {\n          return new Vector3(0, 1, 0);\n        }\n      }\n      return crossProduct.normalize();\n    }\n  \n    public movingFrame(t: number): {\n      tangent: Vector3;\n      normal: Vector3;\n      binormal: Vector3;\n    } {\n      const tangent = this.tangent(t);\n      const normal = this.principalNormal(t);\n  \n      // 이항벡터는 접선과 법선의 외적\n      const binormal = Vector3.cross(tangent, normal).normalize();\n  \n      // 정규직교 기저를 보장하기 위해 normal을 다시 계산\n      const finalNormal = Vector3.cross(binormal, tangent).normalize();\n  \n      return { tangent, normal: finalNormal, binormal };\n    }\n  \n    // ...................................................\n    // 곡선의 주기성 여부를 반환\n    public isPeriodic(): boolean {\n      return this.periodic;\n    }\n  \n    // 원본 제어점 배열 반환\n    public getOriginalControlPoints(): Vector3[] {\n      return this.controlPoints;\n    }\n  \n    // 확장된 제어점 배열 반환\n    public getWrappedControlPoints(): Vector3[] {\n      return this.wrappedPoints;\n    }\n  \n    // 매듭 벡터 반환\n    public getKnots(): number[] {\n      return this.knots;\n    }\n    private wrapControlPoints(points: Vector3[], degree: number): Vector3[] {\n      if (points.length < degree + 1) {\n        throw new Error(\"Not enough control points for the specified degree\");\n      }\n  \n      const wrappedPoints: Vector3[] = [...points];\n  \n      // 시작 부분에 끝점들을 추가\n      for (let i = 0; i < degree; i++) {\n        wrappedPoints.unshift(points[points.length - (degree - i)]);\n      }\n  \n      // 끝 부분에 시작점들을 추가\n      for (let i = 0; i < degree; i++) {\n        wrappedPoints.push(points[i]);\n      }\n  \n      return wrappedPoints;\n    }\n  \n    private generatePeriodicKnots(numPoints: number, degree: number): number[] {\n      const numKnots = numPoints + degree + 1;\n      const knots: number[] = [];\n  \n      // 주기적 매듭 벡터 생성\n      for (let i = 0; i < numKnots; i++) {\n        knots.push(i);\n      }\n  \n      // 매듭 벡터 정규화 (0에서 1 사이로)\n      const max = knots[knots.length - 1];\n      return knots.map((k) => k / max);\n    }\n    private generateKnots(numPoints: number, degree: number): number[] {\n      const numKnots = numPoints + degree + 1;\n      const knots: number[] = Array(degree + 1).fill(0);\n      for (let i = 1; i <= numKnots - 2 * (degree + 1); i++) {\n        knots.push(i / (numKnots - 2 * degree - 2));\n      }\n      return knots.concat(Array(degree + 1).fill(1));\n    }\n    // private generateKnots(numPoints: number, degree: number): number[] {\n    //   const numKnots = numPoints + degree + 1;\n    //   const knots: number[] = Array(degree + 1).fill(0);\n    //   for (let i = 1; i <= numKnots - 2 * (degree + 1); i++) {\n    //     knots.push(i / (numKnots - 2 * degree - 2));\n    //   }\n    //   return knots.concat(Array(degree + 1).fill(1));\n    // }\n    public evaluate(t: number): Vector3 {\n      if (this.periodic) {\n        // 주기적 매개변수 조정\n        t = t - Math.floor(t); // t를 0과 1 사이로 정규화\n      }\n  \n      // t가 1일 때의 특별한 처리\n      if (Math.abs(t - 1) < 1e-10) {\n        t = 1 - 1e-10;\n      }\n  \n      const n = this.wrappedPoints.length;\n      let numerator = new Vector3(0, 0, 0);\n      let denominator = 0;\n  \n      for (let i = 0; i < n; i++) {\n        const basis = this.basisFunction(i, this.degree, t);\n        const weightBasis = this.weights[i] * basis;\n  \n        if (weightBasis > 1e-10) {\n          denominator += weightBasis;\n          numerator = Vector3.add(\n            numerator,\n            Vector3.scale(this.wrappedPoints[i], weightBasis)\n          );\n        }\n      }\n  \n      if (denominator < 1e-10) {\n        console.warn(\"Warning: denominator near zero in evaluate\");\n        return new Vector3(0, 0, 0);\n      }\n  \n      return Vector3.scale(numerator, 1 / denominator);\n    }\n    // public evaluate(t: number): Vector3 {\n    //   if (this.periodic) {\n    //     // 주기적 매개변수 조정\n    //     t = t - Math.floor(t);  // t를 0과 1 사이로 정규화\n    //   } else {\n    //     t = Math.max(0, Math.min(1, t));  // 비주기적 곡선은 0과 1 사이로 클램핑\n    //   }\n  \n    //   const n = this.wrappedPoints.length;\n    //   let numerator = new Vector3(0, 0, 0);\n    //   let denominator = 0;\n  \n    //   for (let i = 0; i < n; i++) {\n    //     const weightBasis = this.weights[i] * this.basisFunction(i, this.degree, t);\n    //     denominator += weightBasis;\n    //     numerator = Vector3.add(numerator, Vector3.scale(this.wrappedPoints[i], weightBasis));\n    //   }\n  \n    //   return Vector3.scale(numerator, 1 / denominator);\n    // }\n    // public evaluate(t: number): Vector3 {\n    //   if (t >= 1) t = 1 - 1e-10; // Ensure t is strictly less than 1\n    //   const n = this.controlPoints.length;\n    //   let numerator = new Vector3(0, 0, 0);\n    //   let denominator = 0;\n  \n    //   for (let i = 0; i < n; i++) {\n    //     const weightBasis = this.weights[i] * this.basisFunction(i, this.degree, t);\n    //     denominator += weightBasis;\n    //     numerator = Vector3.add(numerator, Vector3.scale(this.controlPoints[i], weightBasis));\n    //   }\n  \n    //   return Vector3.scale(numerator, 1 / denominator);\n    // }\n    // 주기적 곡선의 시작과 끝점이 정확히 일치하는지 확인하는 메서드\n    public validateContinuity(tolerance: number = 1e-10): boolean {\n      if (!this.periodic) return true;\n  \n      const start = this.evaluate(0);\n      const end = this.evaluate(1);\n  \n      const diff = Vector3.subtract(start, end);\n      return diff.magnitude() < tolerance;\n    }\n  }","import { RendererCanvas3DWireframe } from \"./renderer\";\r\nimport { getSlider, getCheckBox } from './renderer/util'\r\n\r\nimport { NURBSCurve, Vector3 } from './NURBS/Curve';\r\n\r\nexport class Solution {\r\n  public div: HTMLElement;\r\n  public renderer: RendererCanvas3DWireframe;\r\n  public vecs = [];\r\n  public cps = [];\r\n  public pts = [];\r\n  public lns = [];\r\n  public circle = [];\r\n  public polylines = [];\r\n  public t = 0.0;\r\n  public tVal = 0.0;\r\n  curve;\r\n  N = 10;\r\n  degree = 3;\r\n  constructor(id: string) {\r\n    this.div = document.getElementById(id);\r\n\r\n    const divUI = document.createElement('div');\r\n    divUI.style.position = 'absolute';\r\n    this.div.appendChild(divUI);\r\n\r\n    const slider = getSlider(\"N\", 1, 100);\r\n    slider.slider.defaultValue = `${this.N}`\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      console.log(slider.slider.value);\r\n      this.N = value;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n\r\n    const slider2 = getSlider(\"Degree\", 1, 5);\r\n    slider2.slider.defaultValue = `${this.degree}`\r\n    slider2.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      console.log(slider2.slider.value);\r\n      this.degree = value;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider2.div);\r\n\r\n    let checkBox = getCheckBox('show frame')\r\n    checkBox.checkBox.defaultChecked = false\r\n    checkBox.checkBox.onchange = () => {\r\n      this.renderer.showFrame = checkBox.checkBox.checked;\r\n      console.log(checkBox.checkBox.checked)\r\n    }\r\n    divUI.appendChild(checkBox.div);\r\n    \r\n    let checkBox2 = getCheckBox('show vertex')\r\n    checkBox2.checkBox.defaultChecked = true\r\n    checkBox2.checkBox.onchange = () => {\r\n      if (checkBox2.checkBox.checked === true) {\r\n          this.renderer.showPoint = true;\r\n      } else {\r\n          this.renderer.showPoint = false;\r\n      }\r\n    }\r\n    divUI.appendChild(checkBox2.div);\r\n\r\n    const slider3 = getSlider(\"t\", 0, 100);\r\n    slider3.slider.defaultValue = `${this.N}`\r\n    slider3.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      console.log(slider3.slider.value) ;\r\n      this.tVal = value * 0.01;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider3.div);\r\n\r\n    this.renderer = new RendererCanvas3DWireframe(id);\r\n    this.renderer.pts = this.pts;\r\n    this.renderer.vecs = this.vecs;\r\n    this.renderer.cps = this.cps;\r\n    this.renderer.circle = this.circle;\r\n    this.renderer.polylines = this.polylines\r\n\r\n    this.init();\r\n    this.update();\r\n    this.render();\r\n  }\r\n  public init() {\r\n    const controlPoints = [\r\n      new Vector3(-60, 30, 0),\r\n      new Vector3(-40, -30, 0),\r\n      new Vector3(10, 80, 0),\r\n      new Vector3(160, 20, 0),\r\n      new Vector3(-30, 30, 0),\r\n      new Vector3(0, -80, 0),\r\n      new Vector3(80, -120, 0),\r\n      // new Vector3(30, 160, 0),\r\n      // new Vector3(30, 160, 0),\r\n\r\n      // new Vector3(-0, -80, -50),\r\n      // new Vector3(-30, 30, -40),\r\n      // new Vector3(30, 30, 10),\r\n      // new Vector3(-30, 30, 20),\r\n\r\n\r\n      // new Vector3(20, 20, 0),\r\n      // new Vector3(-14, 24, 10),\r\n      // new Vector3(-30, -30, -10),\r\n      // new Vector3(-30, -30, -10),\r\n\r\n      // new Vector3(-10, 20, 5),\r\n      // new Vector3(10, 20, 0),\r\n      // new Vector3(30, -20, -5),\r\n      // new Vector3(0, 0, 0),\r\n      // new Vector3(10, 10, 2),\r\n      // new Vector3(20, -10, 0),\r\n      // new Vector3(30, 0, 10),\r\n    ];\r\n\r\n    this.cps.push(...controlPoints);\r\n\r\n    // ];\r\n\r\n    const curve = new NURBSCurve(controlPoints, this.degree, false);\r\n    const interval = 1.0 / this.N;\r\n    // 여러 t 값에서 이동좌표계 테스트\r\n    for (let t = 0; t <= 1; t += interval) {\r\n      console.log(`\\nAt t = ${t.toFixed(1)}:`);\r\n      const p = curve.evaluate(t);\r\n      const frame = curve.movingFrame(t);\r\n\r\n      const cou = curve.derivative(t)\r\n\r\n      this.pts.push(p);\r\n      this.polylines.push(p);\r\n\r\n      const vNor = new Vector3(p.x + frame.normal.x, p.y + frame.normal.y, p.z + frame.normal.z)\r\n\r\n      // this.vecs.push([p, (Vector3.add(cou, p), 1)]);\r\n      // this.vecs.push([p, Vector3.add(p, Vector3.scale(cou, 5))]);\r\n      this.vecs.push([p, Vector3.add(p, Vector3.scale(frame.tangent, 5))]);\r\n      this.vecs.push([p, Vector3.add(p, Vector3.scale(frame.normal, 5))]);\r\n      this.vecs.push([p, Vector3.add(p, Vector3.scale(frame.binormal, 5))]);\r\n      // this.vecs.push([p, frame.tangent]);\r\n      // this.vecs.push([p, frame.binormal]);\r\n\r\n      console.log(\"Tangent:\", frame.tangent);\r\n      console.log(\"Normal:\", frame.normal);\r\n      console.log(\"Binormal:\", frame.binormal);\r\n\r\n      // 정규직교성 검증\r\n      const t_dot_n =\r\n        frame.tangent.x * frame.normal.x +\r\n        frame.tangent.y * frame.normal.y +\r\n        frame.tangent.z * frame.normal.z;\r\n\r\n      console.log(\"T·N should be ~0:\", t_dot_n);\r\n    }\r\n    this.curve = curve;\r\n\r\n    console.log(this.vecs);\r\n\r\n\r\n   \r\n\r\n    const tVal = this.tVal\r\n    const p = curve.evaluate(tVal);\r\n    const frame = curve.movingFrame(tVal);\r\n    const r = curve.osculatingCircleRadius(tVal);\r\n\r\n    const pp = Vector3.subtract(p, Vector3.scale(frame.binormal, r))\r\n    \r\n    // const biNor = Vector3.scale(frame.binormal, -1)\r\n    // const pp = Vector3.add(p, Vector3.scale(biNor, r))\r\n\r\n    // console.log(r, pp)\r\n\r\n    this.circle.push(pp)\r\n    this.circle.push(r)\r\n\r\n    // const pts = []\r\n    // for(let i = 0; i < 100; ++i) {\r\n    //   const tval = i * 0.01\r\n    //   const vv = curve.evaluate(tval)\r\n    //   pts.push(vv)\r\n    // }\r\n    // this.pts.push(...pts);\r\n  }\r\n  public removeAll(){\r\n    this.cps.length = 0;\r\n    this.pts.length = 0;\r\n    this.vecs.length = 0;\r\n    this.circle.length = 0;\r\n    this.polylines.length = 0;\r\n  }\r\n  public update() {\r\n    for (let i = 0; i < this.pts.length; ++i) {\r\n      // const offset = Math.cos((this.pts[i].x + this.pts[i].y) * this.t) * 2\r\n      // this.pts[i].z+= offset\r\n      // this.pts[i].z = Math.cos(i * this.t * 0.1)\r\n    }\r\n\r\n    // console.log(this.pts)\r\n\r\n    this.t += 0.01;\r\n  }\r\n  public render() {\r\n    requestAnimationFrame(() => {\r\n      this.render();\r\n    });\r\n    this.update();\r\n    this.renderer.render();\r\n  }\r\n  public destroy() {\r\n    // this.renderer.destroy();\r\n    try {\r\n      while (this.div && this.div.lastElementChild) {\r\n        const lastChild = this.div.lastElementChild as Node;\r\n        this.div.removeChild(lastChild);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing child elements:\", error);\r\n    }\r\n  }\r\n}\r\n"],"names":["RendererCanvas3DWireframe","constructor","id","render","vecs","pts","cps","circle","polylines","showFrame","showPoint","div","document","getElementById","bounding","getBoundingClientRect","canvas","createElement","width","height","appendChild","ctx","getContext","angleX","Math","PI","angleY","dragging","panning","zoom","lastMouseX","lastMouseY","offsetX","offsetY","panStartX","panStartY","fov","rotate","point","cosX","cos","sinX","sin","cosY","sinY","x","y","z","project","scale","projectionToView","p","rotated","rendering","clearRect","i","this","length","col","strokeStyle","beginPath","j","projectPt","moveTo","lineTo","stroke","vsForLine","forEach","projected","depthScale","radius","size","arc","fillStyle","color","fill","count","vs","push","rotated2","projected2","drawVector","lineWidth","drawCircle","addEventListener","e","button","altKey","clientX","clientY","dx","dy","preventDefault","mouseX","left","mouseY","top","prevZoom","zoomSpeed","max","deltaY","min","scaleChange","origin","vector","start","end","closePath","cp","angle","radians","getSlider","title","style","display","slider","type","text","textContent","getCheckBox","checkBox","defaultChecked","Vector3","static","a","b","v","scalar","magnitude","sqrt","normalize","mag","isZero","abs","NURBSCurve","controlPoints","degree","periodic","knots","weights","wrappedPoints","wrapControlPoints","generatePeriodicKnots","generateKnots","Array","basisFunction","k","t","denom1","denom2","secondDerivative","n","numerator","weightBasis","temp","add","subtract","derivativeBasisFunction","denomA","denomB","termA","termB","derivative","floor","denominator","derivNumerator","derivDenominator","basis","derivBasis","weight","console","warn","curvature","d1","d2","crossProduct","cross","d1Mag","pow","osculatingCircleRadius","curv","Infinity","tangent","deriv","delta","p1","evaluate","p2","dir","dirMag","principalNormal","movingFrame","normal","binormal","isPeriodic","getOriginalControlPoints","getWrappedControlPoints","getKnots","points","Error","unshift","numPoints","numKnots","map","concat","validateContinuity","tolerance","Solution","renderer","lns","tVal","curve","N","divUI","position","defaultValue","value","target","log","removeAll","init","slider2","onchange","checked","checkBox2","slider3","update","interval","toFixed","frame","t_dot_n","r","pp","requestAnimationFrame","destroy","lastElementChild","lastChild","removeChild","error"],"sourceRoot":""}
{"version":3,"file":"static/js/14519.052540fc.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/Geometry/Core/Base.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/Geometry/Primatives/MulitQuad.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/Utility/Matrix4.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/Utility/Vector3.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/WebGL/Model.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/WebGL/Shader.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/WebGL/Transform.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07-1/WebGL/VAO.ts"],"sourcesContent":["import { Scene } from '../../Core/Scene';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n        this.scene.add(this);\r\n    }\r\n    render() {\r\n        //\r\n    }\r\n}","import { Vector3 } from '../../Utility/Vector3';\r\n\r\nimport { VAO } from '../../WebGL/VAO';\r\nimport { Model } from '../../WebGL/Model';\r\n\r\nimport { NGL3dApp } from '../..';\r\n\r\nimport { Shader } from '../../WebGL/Shader';\r\nimport { GeometryBase } from '../Core/Base';\r\n\r\nclass ShaderQuad extends Shader {\r\n\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    pMatrix: Float32Array;\r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string, pMatrix: Float32Array) {\r\n        super(gl, vertSrc, fragSrc);\r\n        this.pMatrix = pMatrix;\r\n\r\n        // Our shader uses custom uniforms, this is the time to get its location for future use.\r\n        if (this.program) {\r\n            this.setPerspective(pMatrix);\r\n\r\n            this.uPointSize = gl.getUniformLocation(this.program, 'uPointSize');\r\n            this.uAngle = gl.getUniformLocation(this.program, 'uAngle');\r\n\r\n            // gl.useProgram(this.program);\r\n            gl.useProgram(null); // Done setting up shader\r\n        }\r\n    }\r\n    // Simple function that passes in Angle and Pointsize uniform data to the shader program.\r\n    set(size: number, angle: number) {\r\n        // this.gl.useProgram(null);\r\n        this.gl.uniform1f(this.uAngle, angle);\r\n        this.gl.uniform1f(this.uPointSize, size);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class MulitQuad extends GeometryBase {\r\n    v = `#version 300 es\r\n\r\n        in vec3 a_position;\t//Standard position data.\r\n        in vec2 a_uv;\r\n\r\n        uniform mat4 uPMatrix;\r\n        uniform mat4 uMVMatrix;\r\n        uniform mat4 uCameraMatrix;\r\n\r\n        out vec2 uv;\r\n\r\n        void main(void) {\r\n            uv = a_uv;\r\n            gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\r\n        }\r\n    `;\r\n\r\n    f = `#version 300 es\r\n\r\n    precision mediump float;\r\n    in vec2 uv;\r\n\r\n    out vec4 finalColor;\r\n\r\n    void main(void) {\r\n\r\n        //Square Border\r\n        float c = (uv.x <= 0.1 || uv.x >=0.9 || uv.y <= 0.1 || uv.y >= 0.9)? 0.0 : 1.0;\r\n\r\n        finalColor = vec4(c,c,c,1.0-c);\r\n        // finalColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n\r\n        // //Circle\r\n        // //  /*\r\n        // vec2 delta = uv - vec2(0.5,0.5); //delta position from center;\r\n        // float dist = 0.5 - sqrt(delta.x*delta.x + delta.y*delta.y);\r\n\r\n        // float border = 0.01;\r\n        // float a = 0.0;\r\n        // if(dist > border) a = 1.0;\r\n        // else if(dist > 0.0) a = dist / border;\r\n\r\n        // finalColor = vec4(0.0,0.0,0.0,a);\r\n        // //  */\r\n    }\r\n    `;\r\n    app: NGL3dApp;\r\n    vao: VAO;\r\n    shader: ShaderQuad;\r\n    model: Model;\r\n\r\n    size: number = 20.5;\r\n    rotation: number = 0.0;\r\n\r\n    constructor(app: NGL3dApp) {\r\n        super(app.scene);\r\n        this.app = app;\r\n        let aVert = [-0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0];\r\n\r\n        let aUV = [0., 0., 0., 1., 1., 1., 1., 0.];\r\n        let aIndex = [0, 1, 2, 2, 3, 0];\r\n\r\n        // var\taIndex = [ ], //0,1,2, 2,3,0\r\n        // aUV = [ ], //0,0, 0,1, 1,1, 1,0\r\n        // aVert = [];\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            // Calculate a random size, y rotation and position for the quad\r\n            let size = 0.2 + (0.8 * Math.random()),\t\t// Random Quad Size in the range of 0.2 - 1.0\r\n                half = size * 0.5,\t\t\t\t\t\t// Half of size, this is the radius for rotation\r\n                angle = Math.PI * 2 * Math.random(),\t// Random angle between 0 - 360 degrees in radians\r\n                dx = half * Math.cos(angle),\t\t\t// Calc the x distance, used as an offset for the random position\r\n                dy = half * Math.sin(angle),\t\t\t// Calc the y distance, for same offset but used in z\r\n                x = -2.5 + (Math.random() * 5),\t\t\t// Random position between -2.5 - 2.5\r\n                y = -2.5 + (Math.random() * 5),\r\n                z = 2.5 - (Math.random() * 5),\r\n                p = i * 4;\t\t\t\t\t\t\t\t// Index of the first vertex of a quad\r\n\r\n            // Build the 4 points of the quad\r\n            aVert.push(x - dx, y + half, z - dy);\t\t// TOP LEFT\r\n            aVert.push(x - dx, y - half, z - dy);\t\t// BOTTOM LEFT\r\n            aVert.push(x + dx, y - half, z + dy);\t\t// BOTTOM RIGHT\r\n            aVert.push(x + dx, y + half, z + dy);\t\t// TOP RIGHT\r\n\r\n            aUV.push(0, 0, 0, 1, 1, 1, 1, 0);\t\t// Quad's UV\r\n            aIndex.push(p, p + 1, p + 2, p + 2, p + 3, p);\t// Quad's Index\r\n        }\r\n\r\n        // var mesh = this.app.canvas.gl.fCreateMeshVAO('MultiQuad', aIndex, aVert, null, aUV);\r\n        // mesh.noCulling = true;\r\n        // mesh.doBlending = true;\r\n        // return mesh;\r\n\r\n        this.shader = new ShaderQuad(this.app.canvas.gl, this.v, this.f, this.app.camera.projectionMatrix);\r\n        this.vao = new VAO(app.canvas.gl, 'MultiQuad', aVert, aIndex, undefined, aUV);\r\n        this.vao.noCulling = true;\r\n        this.vao.doBlending = true;\r\n\r\n        this.model = new Model(this.vao);\r\n\r\n    }\r\n    render() {\r\n        // console.log(this);\r\n        this.size += 0.01;\r\n        // let size = (Math.sin(this.size) * 10.0) + 20.0;\r\n\r\n        this.model.transform.position = new Vector3(0, 0, this.model.transform.position.z + -0.01);\r\n\r\n        this.shader.activate();\r\n        this.shader.setPerspective(this.shader.pMatrix);\r\n        // this.shader.set(size,  this.rotation);\r\n        // this.shader.activate().setCameraMatrix(this.app.camera.viewMatrix).renderModel(this.model.preRender());\r\n        this.shader.setCameraMatrix(this.app.camera.viewMatrix);\r\n        this.shader.renderModel(this.model.preRender());\r\n\r\n    }\r\n}","import { Vector3 } from './Vector3';\r\n\r\nexport class Matrix4 {\r\n    raw: Float32Array;\r\n    // ....................................................................\r\n    // Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    // from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number , near: number, far: number ) {\r\n        let f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n    static ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    }\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    // make the rows into the columns\r\n    static transpose(out: number[], a: number[]) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    // Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n        //  Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {return null; }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Operation\r\n\r\n    // https:// github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Matrix4 , v: number[]) {\r\n        let x = v[0], y = v[1], z = v[2], w = v[3];\r\n        let c1r1 = mat4[ 0], c2r1 = mat4[ 1], c3r1 = mat4[ 2], c4r1 = mat4[ 3],\r\n            c1r2 = mat4[ 4], c2r2 = mat4[ 5], c3r2 = mat4[ 6], c4r2 = mat4[ 7],\r\n            c1r3 = mat4[ 8], c2r3 = mat4[ 9], c3r3 = mat4[10], c4r3 = mat4[11],\r\n            c1r4 = mat4[12], c2r4 = mat4[13], c3r4 = mat4[14], c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8]\t* v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9]\t* v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10]\t* v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11]\t* v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    // From glMatrix\r\n    // Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) { \r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n        //  Cache only the current line of the second matrix\r\n        let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\t\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    }\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array , rad: number, axis: number) {\r\n        let x = axis[0], y = axis[1], z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) { return null; }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0]; a01 = out[1]; a02 = out[2]; a03 = out[3];\r\n        a10 = out[4]; a11 = out[5]; a12 = out[6]; a13 = out[7];\r\n        a20 = out[8]; a21 = out[9]; a22 = out[10]; a23 = out[11];\r\n\r\n        //  Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n        //  Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return out;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat?: Float32Array ) {\r\n        if (mat === undefined) { mat = out; }// If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],\r\n            a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],\r\n            a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],\r\n            a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {return false; }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8]\t* z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9]\t* z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10]\t* z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11]\t* z + out[15];\r\n    }\r\n    constructor() { \r\n        this.raw = Matrix4.identity(); \r\n    }\r\n    // ....................................................................\r\n    // Transformations Methods\r\n    vtranslate(v: Vector3) {\r\n        Matrix4.translate(this.raw, v.x, v.y, v.z);\r\n        return this; \r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.raw, x, y, z); \r\n        return this;\r\n    }\r\n    rotateY(rad: number) {\t\tMatrix4.rotateY(this.raw, rad); return this; }\r\n    rotateX(rad: number) {\t\tMatrix4.rotateX(this.raw, rad); return this; }\r\n    rotateZ(rad: number) {\t\tMatrix4.rotateZ(this.raw, rad); return this; }\r\n\r\n    vscale(vec3: Vector3) {\t\tMatrix4.scale(this.raw, vec3.x, vec3.y, vec3.z); return this; }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.raw, x, y, z); \r\n        return this; \r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.raw); \r\n        return this; \r\n    }\r\n\r\n    // ....................................................................\r\n    // Methods\r\n    // Bring is back to identity without changing the transform values.\r\n    resetRotation() {\t\r\n        for (let i = 0; i < this.raw.length; i++) {\r\n            if (i >= 12 && i <= 14) {continue; }\r\n            this.raw[i] = (i % 5 === 0) ? 1 : 0;  // only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // reset data back to identity.\r\n    reset() { \r\n        for (let i = 0; i < this.raw.length; i++) { this.raw[i] = (i % 5 === 0) ? 1 : 0; } // only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n}","\r\nexport class Vector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0 ) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    magnitude(v?: Vector3) {\r\n        if (v === undefined) {return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z ); }\r\n        let x = v.x - this.x, y = v.y - this.y, z = v.y - this.z;\r\n        return Math.sqrt( x * x + y * y + z * z );\r\n    }\r\n\r\n    normalize() { \r\n        let mag = this.magnitude(); \r\n        this.x /= mag; this.y /= mag; this.z /= mag; \r\n        return this;\r\n    }\r\n    set(x: number, y: number, z: number) {\r\n         this.x = x; this.y = y; this.z = z;\t\r\n         return this;\r\n    }\r\n    multiScalar(v: number) { \r\n        this.x *= v; this.y *= v; this.z *= v; return this; \r\n    }\r\n    getArray() {\r\n         return [this.x, this.y, this.z]; }\r\n    getFloatArray() {\r\n         return new Float32Array([this.x, this.y, this.z]); }\r\n    clone() {\r\n         return new Vector3(this.x, this.y, this.z); \r\n    }\r\n} ","import { VAO } from './VAO';\r\nimport { Transform } from './Transform';\r\n\r\nexport class Model {\r\n    vao: VAO;\r\n    transform: Transform;\r\n    constructor(vao: VAO) {\r\n        this.transform = new Transform();\r\n        this.vao = vao;\r\n    }\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z);\r\n        return this;\r\n    }\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z);\r\n        return this;\r\n    }\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x; this.transform.scale.y += y; this.transform.scale.y += y;\r\n        return this;\r\n    }\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x; this.transform.position.y += y; this.transform.position.z += z;\r\n        return this;\r\n    }\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x; this.transform.rotation.y += y; this.transform.rotation.z += z;\r\n        return this;\r\n    }\r\n\r\n    preRender() {\r\n        this.transform.updateMatrix();\r\n        return this;\r\n    }\r\n}","// import { GLShaderCommon } from '../Utility/GLShaderCommon';\r\nimport { Model } from './Model';\r\n\r\nexport enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_NAME = 'a_color',\r\n    ATTR_COLOR_LOC = 4,\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    norm: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_POSITION_NAME);\r\n        this.norm = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modelMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective = gl.getUniformLocation(program, 'uPMatrix');\r\n        this.modelMatrix = gl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix = gl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture = gl.getUniformLocation(program, 'uMainTex');\r\n    }\r\n}\r\n\r\nexport class Shader {\r\n\r\n    gl: WebGL2RenderingContext;\r\n    program: WebGLProgram | null;\r\n\r\n    attribLoc: AttribLocations;\r\n    uniformLoc: UniformLocations;\r\n\r\n    vShader: WebGLShader | null;\r\n    fShader: WebGLShader | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertShaderSrc: string, fragShaderSrc: string, needValidate: boolean = true) {\r\n        this.gl = gl;\r\n        this.vShader = ShaderUtility.CreateShader(gl, gl.VERTEX_SHADER as unknown as WebGLShader, vertShaderSrc);\r\n        this.fShader = ShaderUtility.CreateShader(gl, gl.FRAGMENT_SHADER as unknown as WebGLShader, fragShaderSrc);\r\n\r\n        if (this.vShader && this.fShader) {\r\n            let program = ShaderUtility.CreateProgram(gl, this.vShader, this.fShader, needValidate);\r\n\r\n            if (program) {\r\n                this.program = program;\r\n                gl.useProgram(this.program);\r\n                this.attribLoc = new AttribLocations(gl, this.program);\r\n                this.uniformLoc = new UniformLocations(gl, this.program);\r\n                return;\r\n\r\n            } else {\r\n                console.error('vertex fragment shader error'); return;\r\n            }\r\n        } else {\r\n            console.error('vertex fragment shader error'); return;\r\n        }\r\n        // Note :: Extended shaders should deactivate shader when done calling super and setting up custom parts in the constructor.\r\n    }\r\n\r\n    // ...................................................\r\n    // Methods\r\n    activate() {\r\n        this.gl.useProgram(this.program); return this;\r\n    }\r\n    deactivate() {\r\n        this.gl.useProgram(null); return this;\r\n    }\r\n\r\n    // function helps clean up resources when shader is no longer needed.\r\n    dispose() {\r\n        // unbind the program if its currently active\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) { this.gl.useProgram(null); }\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n    setPerspective(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.perspective, false, matData);\r\n        return this;\r\n    }\r\n    setModelMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.modelMatrix, false, matData);\r\n        return this;\r\n    }\r\n    setCameraMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.cameraMatrix, false, matData);\r\n        return this;\r\n    }\r\n    // ...................................................\r\n    // RENDER RELATED METHODS\r\n\r\n    // Setup custom properties\r\n    preRender() {\r\n        //\r\n    }\r\n    // Handle rendering a model\r\n    renderModel(model: Model) {\r\n        this.setModelMatrix(model.transform.getViewMatrix());\t// Set the transform, so the shader knows where the model exists in 3d space\r\n        this.gl.bindVertexArray(model.vao.vao);\t// Enable VAO, this will set all the predefined attributes for the shader\r\n\r\n        if (model.vao.noCulling) { this.gl.disable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.enable(this.gl.BLEND); }\r\n\r\n        if (model.vao.indexCount) {\r\n            // console.log(model.vao.indexCount);\r\n            this.gl.drawElements(model.vao.drawMode, model.vao.indexCount, this.gl.UNSIGNED_SHORT, 0);\r\n        } else {\r\n            this.gl.drawArrays(model.vao.drawMode, 0, model.vao.vertexCount);\r\n        }\r\n\r\n        this.gl.bindVertexArray(null);\r\n        if (model.vao.noCulling) { this.gl.enable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.disable(this.gl.BLEND); }\r\n\r\n        return this;\r\n\r\n    }\r\n}\r\n\r\nclass ShaderUtility {\r\n    static CreateProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, needValidate: boolean = true): WebGLProgram | null {\r\n        const program = gl.createProgram();\r\n        if (program === null) { return null; }\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n\r\n        gl.bindAttribLocation(program, ATTR.ATTR_POSITION_LOC, ATTR.ATTR_POSITION_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_NORMAL_LOC, ATTR.ATTR_NORMAL_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_UV_LOC, ATTR.ATTR_UV_NAME);\r\n\r\n        gl.linkProgram(program);\r\n\r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            const error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        if (needValidate) {\r\n            gl.validateProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n                console.error('Failed to validate program', gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n                gl.deleteShader(fragmentShader);\r\n                gl.deleteShader(vertexShader);\r\n                return null;\r\n            }\r\n        }\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return program;\r\n    }\r\n    static CreateShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n        // console.log(type);\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, shaderString);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n}","import { Vector3 } from '../Utility/Vector3';\r\nimport { Matrix4 } from '../Utility/Matrix4';\r\n\r\nexport class Transform {\r\n    static deg2Rad = Math.PI / 180; // Cache result, one less operation to do for each update.\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matView: Matrix4;\r\n    matNormal: Float32Array;\r\n\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    constructor() {\r\n        this.position = new Vector3(0, 0, 0);\t// Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1);\t// How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0);\t// Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView = new Matrix4();\t\t// Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9);\t// This is a Mat3, raw array to hold the values is enough for what its used for\r\n\r\n        // Direction Vectors\r\n        this.forward = new Float32Array(4);\t// When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4);\t// what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4);\t// what the right direction is, invert to get left\r\n    }\r\n    updateMatrix() {\r\n        this.matView.reset() // Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(this.rotation.x * Transform.deg2Rad)\r\n            .rotateZ(this.rotation.z * Transform.deg2Rad)\r\n            .rotateY(this.rotation.y * Transform.deg2Rad)\r\n            .vscale(this.scale);\r\n\r\n        // Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.raw);\r\n\r\n        // Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw); // Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw); // Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw); // X\r\n\r\n        return this.matView.raw;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw);\r\n        return this;\r\n    }\r\n\r\n    getViewMatrix() { return this.matView.raw; }\r\n    getNormalMatrix() { return this.matNormal; }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}\r\n","import { ATTR } from './Shader';\r\n\r\nexport enum DRAW_MODE {\r\n    //\r\n}\r\n\r\nexport class VAO {\r\n    name: string;\r\n\r\n    noCulling: boolean = true;\r\n    doBlending: boolean = true;\r\n\r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, name: string, aryVert: number[], aryInd?: number[] | null, aryNorm?: number[] | null, aryUV?: number[] | null) {\r\n        this.name = name;\r\n        this.drawMode = gl.TRIANGLES;\r\n\r\n        this.vao = gl.createVertexArray();\r\n        gl.bindVertexArray(this.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\r\n\r\n        // .......................................................\r\n        // Set up vertices\r\n        if (aryVert !== undefined && aryVert != null) {\r\n            this.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\r\n            this.vertexComponentLen = 3;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\r\n            this.vertexCount = aryVert.length / this.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufVertices);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\r\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\r\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\t\t\t\t\t\t// Put buffer at location of the vao\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup normals\r\n        if (aryNorm !== undefined && aryNorm !== null) {\r\n            this.bufNormals = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufNormals);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup UV\r\n        if (aryUV !== undefined && aryUV !== null) {\r\n            // console.log(aryUV);\r\n            this.bufUV = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufUV);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\r\n            // console.log(this);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup Index.\r\n        if (aryInd !== undefined && aryInd !== null) {\r\n            this.bufIndex = gl.createBuffer();\r\n            this.indexCount = aryInd.length;\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIndex);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\r\n            // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        }\r\n        // console.log(this);\r\n\r\n        // Clean up\r\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\r\n\r\n        // this.mMeshCache[name] = rtn;\r\n    }\r\n\r\n}"],"names":["GeometryBase","constructor","scene","this","add","render","ShaderQuad","Shader","gl","vertSrc","fragSrc","pMatrix","super","uPointSize","uAngle","program","setPerspective","getUniformLocation","useProgram","set","size","angle","uniform1f","MulitQuad","app","v","f","vao","shader","model","rotation","aVert","aUV","aIndex","i","half","Math","random","PI","dx","cos","dy","sin","x","y","z","p","push","canvas","camera","projectionMatrix","VAO","undefined","noCulling","doBlending","Model","transform","position","Vector3","activate","setCameraMatrix","viewMatrix","renderModel","preRender","Matrix4","static","a","Float32Array","out","fovy","aspect","near","far","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","rad","s","c","axis","t","b12","b20","b21","b22","len","sqrt","abs","mat","raw","identity","vtranslate","translate","rotateY","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","length","reset","magnitude","normalize","mag","multiScalar","getArray","getFloatArray","clone","Transform","setScale","setPosition","setRotation","addScale","addPosition","addRotation","updateMatrix","ATTR","AttribLocations","norm","uv","getAttribLocation","ATTR_POSITION_NAME","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","perspective","modelMatrix","cameraMatrix","mainTexture","vertShaderSrc","fragShaderSrc","needValidate","attribLoc","uniformLoc","vShader","fShader","ShaderUtility","CreateShader","VERTEX_SHADER","FRAGMENT_SHADER","CreateProgram","console","error","deactivate","dispose","getParameter","CURRENT_PROGRAM","deleteProgram","matData","uniformMatrix4fv","setModelMatrix","getViewMatrix","bindVertexArray","disable","CULL_FACE","enable","BLEND","indexCount","drawElements","drawMode","UNSIGNED_SHORT","drawArrays","vertexCount","vertexShader","fragmentShader","createProgram","attachShader","bindAttribLocation","ATTR_POSITION_LOC","ATTR_NORMAL_LOC","ATTR_UV_LOC","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","log","deleteShader","validateProgram","VALIDATE_STATUS","type","shaderString","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","matView","matNormal","forward","up","deg2Rad","updateDirection","getNormalMatrix","DRAW_MODE","name","aryVert","aryInd","aryNorm","aryUV","bufVertices","bufNormals","bufUV","bufIndex","vertexComponentLen","TRIANGLES","createVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}
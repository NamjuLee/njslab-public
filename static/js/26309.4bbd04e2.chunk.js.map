{"version":3,"file":"static/js/26309.4bbd04e2.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-curve/renderer/index.ts","njslab/Workshop/workshop-curve/renderer/util.ts","njslab/Workshop/workshop-curve/NURBS/Surface.ts","njslab/Workshop/workshop-curve/workshop-04-surface.ts"],"sourcesContent":["export class Canvas3DWireframe {\n  public div: HTMLElement;\n  public renderer: RendererCanvas3DWireframe;\n  public pts = [];\n  public lns = [];\n  public t = 0.0;\n  constructor(id: string) {\n    this.div = document.getElementById(id);\n    this.renderer = new RendererCanvas3DWireframe(id);\n    this.renderer.pts = this.pts;\n\n    this.init();\n    this.update();\n    this.render();\n  }\n  public init() {\n    // TODO\n  }\n  public update() {\n    // TODO\n  }\n  public render() {\n    requestAnimationFrame(() => {\n      this.render();\n    });\n    this.update();\n    this.renderer.render();\n  }\n  public destroy() {\n    // this.renderer.destroy();\n    try {\n      while (this.div && this.div.lastElementChild) {\n        const lastChild = this.div.lastElementChild as Node;\n        this.div.removeChild(lastChild);\n      }\n    } catch (error) {\n      console.error(\"Error removing child elements:\", error);\n    }\n  }\n}\n\nexport class RendererCanvas3DWireframe {\n  public render: () => void;\n\n  public vecs = [];\n  public pts = [];\n  public cps = [];\n  public circle = [];\n  public polylines = [];\n\n  public showFrame = false;\n  public showPoint = true;\n  \n  constructor(id) {\n    const div = document.getElementById(id);\n    const bounding = div.getBoundingClientRect();\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = bounding.width;\n    canvas.height = bounding.height;\n    div.appendChild(canvas);\n\n    const ctx = canvas.getContext(\"2d\");\n\n    let angleX = -Math.PI / 2;\n    let angleY = 0;\n    let dragging = false;\n    let panning = false;\n    let zoom = 1;\n    let lastMouseX = 0;\n    let lastMouseY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n    let panStartX = 0;\n    let panStartY = 0;\n    let fov = 500;\n\n\n    const rotate = (point, angleX, angleY) => {\n      const cosX = Math.cos(angleX);\n      const sinX = Math.sin(angleX);\n      const cosY = Math.cos(angleY);\n      const sinY = Math.sin(angleY);\n\n      // (swap Y and Z for Z-up)\n      let x = point.x * cosY - point.y * sinY;\n      let y = point.x * sinY + point.y * cosY;\n\n      let z = point.z * cosX - y * sinX;\n      y = point.z * sinX + y * cosX;\n\n      return { x, y, z };\n    };\n\n    const project = (point) => {\n      const scale = (fov / (fov + point.y)) * zoom; // Z-axis is now vertical\n      return {\n        x: point.x * scale + canvas.width / 2 + offsetX,\n        y: -point.z * scale + canvas.height / 2 + offsetY, // Invert Z for canvas Y-axis\n      };\n    };\n\n    const projectionToView = (p) => {\n      let rotated = rotate(p, angleX, angleY);\n      return project(rotated);\n    }\n\n    const rendering = () => {\n      // requestAnimationFrame(() => {\n      //   rendering();\n      // });\n      // console.log('rendering...', this.pts)\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\n      for(let i = 0; i < this.polylines.length; ++i) {\n        let col = \"red\";\n        if (i % 3 === 1) {\n          col = \"green\";\n        } else if (i % 3 === 2) {\n          col = \"blue\";\n        }\n        ctx.strokeStyle = col;\n        ctx.beginPath();\n        for(let j = 0; j < this.polylines[i].length; ++j) {\n          let projectPt = projectionToView(this.polylines[i][j])\n          if (j === 0 ) {\n            ctx.moveTo(projectPt.x, projectPt.y)\n          } else {\n            ctx.lineTo(projectPt.x, projectPt.y)\n          }\n        }\n        ctx.stroke();\n      }\n\n\n      const vsForLine = [];\n\n      if (this.showPoint) {\n        this.pts.forEach((point) => {\n          const rotated = rotate(point, angleX, angleY);\n          const projected = project(rotated);\n  \n          const depthScale = (fov / (fov + rotated.y)) * zoom;\n          let radius = point.size * depthScale;\n          radius = radius < 0.1 ? 0.1 : radius;\n  \n          ctx.beginPath();\n          ctx.arc(projected.x, projected.y, radius, 0, Math.PI * 2);\n          ctx.fillStyle = point.color ? point.color : \"#f00\";\n          ctx.fill();\n        });\n      }\n\n      let count = 0;\n\n      // console.log(this.vecs.length)\n\n      if (this.showFrame) {\n        this.vecs.forEach((vs) => {\n          // console.log(vs)\n\n          const rotated = rotate(vs[0], angleX, angleY);\n          const projected = project(rotated);\n\n          vsForLine.push(projected);\n\n          const rotated2 = rotate(vs[1], angleX, angleY);\n          const projected2 = project(rotated2);\n\n          let col = \"red\";\n          if (count % 3 === 1) {\n            col = \"green\";\n          } else if (count % 3 === 2) {\n            col = \"blue\";\n          }\n\n          drawVector(ctx, projected, projected2, col);\n          // console.log(count)\n          count++;\n        });\n      }\n      // drawCurve(ctx, vsForLine);\n\n\n\n\n\n      this.cps.forEach((point) => {\n        const rotated = rotate(point, angleX, angleY);\n        const projected = project(rotated);\n\n        const depthScale = (fov / (fov + rotated.y)) * zoom;\n        let radius = 3 * depthScale;\n        radius = radius < 0.1 ? 0.1 : radius;\n\n        ctx.beginPath();\n        ctx.arc(projected.x, projected.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = \"#000\";\n        ctx.fill();\n      });\n\n      ctx.beginPath();\n      for (let i = 0; i < this.cps.length; ++i) {\n        const rotated = rotate(this.cps[i], angleX, angleY);\n        const projected = project(rotated);\n\n        if (i === 0) {\n          ctx.moveTo(projected.x, projected.y);\n        } else {\n          ctx.lineTo(projected.x, projected.y);\n        }\n      }\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = \"rgba(0,0,0, 0.75)\";\n      ctx.stroke();\n\n      if (this.circle[0]) {\n\n        drawCircle(ctx, this.circle[0], this.circle[1], projectionToView)\n       \n      }\n    };\n    this.render = () => rendering();\n\n    canvas.addEventListener(\"mousedown\", (e) => {\n      if (e.button === 2) {\n        dragging = true;\n      } else if (e.button === 0) {\n        if (e.altKey) {\n          dragging = true;\n        } else {\n          panning = true;\n          panStartX = e.clientX - offsetX;\n          panStartY = e.clientY - offsetY;\n        }\n      }\n      lastMouseX = e.clientX;\n      lastMouseY = e.clientY;\n    });\n\n    canvas.addEventListener(\"mousemove\", (e) => {\n      if (dragging) {\n        const dx = e.clientX - lastMouseX;\n        const dy = e.clientY - lastMouseY;\n        angleX -= dy * 0.01;\n        angleY += dx * 0.01;\n        lastMouseX = e.clientX;\n        lastMouseY = e.clientY;\n        //   rendering();\n      } else if (panning) {\n        offsetX = e.clientX - panStartX;\n        offsetY = e.clientY - panStartY;\n        //   rendering();\n      }\n    });\n\n    canvas.addEventListener(\"mouseup\", () => {\n      dragging = false;\n      panning = false;\n    });\n\n    canvas.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n\n    canvas.addEventListener(\"wheel\", (e) => {\n      const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n      const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n      const prevZoom = zoom;\n      const zoomSpeed = Math.max(0.001, zoom * 0.02); // zoom speed based on zoom level\n\n      zoom += e.deltaY * -zoomSpeed;\n      zoom = Math.min(Math.max(zoom, 0.1), 50);\n\n      const scaleChange = zoom / prevZoom;\n\n      offsetX -= (mouseX - canvas.width / 2 - offsetX) * (scaleChange - 1);\n      offsetY -= (mouseY - canvas.height / 2 - offsetY) * (scaleChange - 1);\n\n      // rendering();\n    });\n\n    rendering();\n  }\n}\n\nconst drawVector = (ctx, origin, vector, color = \"black\") => {\n  const start = origin;\n  const end = vector;\n  // console.log(color)\n  ctx.beginPath();  \n  ctx.moveTo(start.x, start.y);\n  ctx.lineTo(end.x, end.y);\n  ctx.closePath();\n  \n  ctx.strokeStyle = color;\n  ctx.lineWidth = 2;\n  ctx.stroke();\n};\n\nconst drawCurve = (ctx, vs) => {\n  ctx.beginPath();\n  ctx.strokeStyle = \"blue\";\n  ctx.lineWidth = 2;\n\n  // const steps = 100;\n  for (let i = 0; i < vs.length; i++) {\n    if (i === 0) {\n      ctx.moveTo(vs[i].x, vs[i].y);\n    } else {\n      ctx.lineTo(vs[i].x, vs[i].y);\n    }\n  }\n  ctx.stroke();\n};\n\nconst drawCircle = (ctx, cp, radius, projectionToView ) => {\n\n  ctx.beginPath();\n  for (let angle = 0; angle <= 360; angle++) {\n\n    const radians = (angle * Math.PI) / 180;\n\n    const x = cp.x + radius * Math.cos(radians);\n    const y = cp.y + radius * Math.sin(radians);\n    const z = cp.z\n\n    let projected = projectionToView({x,y,z})\n    if (angle === 0) {\n      ctx.moveTo(projected.x, projected.y);\n    } else {\n      ctx.lineTo(projected.x, projected.y);\n    }\n  }\n  ctx.closePath();\n  ctx.stroke();\n};\n","\nexport const getSlider = (title: string, min: number, max: number) => {\n    const div = document.createElement(\"div\");\n    div.style.display = \"flex\";\n  \n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n  \n    const text = document.createElement(\"div\");\n    text.textContent = title;\n    text.style.color = \"#aaa\";\n    div.appendChild(slider);\n    div.appendChild(text);\n  \n    return {\n      div,\n      slider,\n    };\n  };\n  \n  export const getCheckBox = (title: string) => {\n    const div = document.createElement(\"div\");\n    div.style.display = \"flex\";\n  \n    const checkBox = document.createElement(\"input\");\n    checkBox.type = \"checkbox\";\n    checkBox.defaultChecked = false;\n    const text = document.createElement(\"div\");\n    text.textContent = title;\n    text.style.color = \"#aaa\";\n    div.appendChild(checkBox);\n    div.appendChild(text);\n  \n    return {\n      div,\n      checkBox,\n    };\n  };\n  ","\nexport class Vector3 {\n    size = 2;\n    constructor(public x: number, public y: number, public z: number) {}\n  \n    static add(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(a.x + b.x, a.y + b.y, a.z + b.z);\n    }\n  \n    static subtract(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(a.x - b.x, a.y - b.y, a.z - b.z);\n    }\n  \n    static scale(v: Vector3, scalar: number): Vector3 {\n      return new Vector3(v.x * scalar, v.y * scalar, v.z * scalar);\n    }\n  \n    static cross(a: Vector3, b: Vector3): Vector3 {\n      return new Vector3(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x\n      );\n    }\n  \n    static dot(a: Vector3, b: Vector3): number {\n      return a.x * b.x + a.y * b.y + a.z * b.z;\n    }\n  \n    magnitude(): number {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n  \n    normalize(): Vector3 {\n      const mag = this.magnitude();\n      if (mag < 1e-10) return new Vector3(0, 0, 0);\n      return Vector3.scale(this, 1 / mag);\n    }\n  \n    isZero(): boolean {\n      return (\n        Math.abs(this.x) < 1e-10 &&\n        Math.abs(this.y) < 1e-10 &&\n        Math.abs(this.z) < 1e-10\n      );\n    }\n  }\n  \n  class Frame {\n    constructor(\n      public origin: Vector3,\n      public tangentU: Vector3,\n      public tangentV: Vector3,\n      public normal: Vector3\n    ) {\n      // Ensure orthonormality\n      this.orthonormalize();\n    }\n  \n    private orthonormalize(): void {\n      // Normalize tangentU\n      this.tangentU = this.tangentU.normalize();\n  \n      // Make tangentV perpendicular to tangentU\n      const dot = Vector3.dot(this.tangentU, this.tangentV);\n      this.tangentV = Vector3.subtract(\n        this.tangentV,\n        Vector3.scale(this.tangentU, dot)\n      ).normalize();\n  \n      // Ensure normal is perpendicular to both tangents\n      this.normal = Vector3.cross(this.tangentU, this.tangentV).normalize();\n  \n      // Re-compute tangentV to ensure perfect orthogonality\n      this.tangentV = Vector3.cross(this.normal, this.tangentU).normalize();\n    }\n\n    isValid(): boolean {\n      const epsilon = 1e-6;\n  \n      // Check if vectors are normalized\n      if (\n        Math.abs(this.tangentU.magnitude() - 1) > epsilon ||\n        Math.abs(this.tangentV.magnitude() - 1) > epsilon ||\n        Math.abs(this.normal.magnitude() - 1) > epsilon\n      ) {\n        return false;\n      }\n  \n      // Check orthogonality\n      if (\n        Math.abs(Vector3.dot(this.tangentU, this.tangentV)) > epsilon ||\n        Math.abs(Vector3.dot(this.tangentU, this.normal)) > epsilon ||\n        Math.abs(Vector3.dot(this.tangentV, this.normal)) > epsilon\n      ) {\n        return false;\n      }\n  \n      return true;\n    }\n  }\n  \n  export class NURBSSurface {\n    private controlPoints: Vector3[][];\n    private uKnots: number[];\n    private vKnots: number[];\n    private uDegree: number;\n    private vDegree: number;\n  \n    constructor(\n      controlPoints: Vector3[][],\n      uDegree: number = 3,\n      vDegree: number = 3\n    ) {\n      const maxUDegree = controlPoints.length - 1;\n      const maxVDegree = controlPoints[0].length - 1;\n  \n      this.uDegree = Math.min(uDegree, maxUDegree);\n      this.vDegree = Math.min(vDegree, maxVDegree);\n  \n      const result = this.createKnotsAndDegree(\n        controlPoints,\n        this.uDegree,\n        this.vDegree\n      );\n      this.init(\n        controlPoints,\n        result.uKnots,\n        result.vKnots,\n        this.uDegree,\n        this.vDegree\n      );\n    }\n  \n    init(\n      controlPoints: Vector3[][],\n      uKnots: number[],\n      vKnots: number[],\n      uDegree: number,\n      vDegree: number\n    ) {\n      this.controlPoints = controlPoints;\n      this.uKnots = uKnots;\n      this.vKnots = vKnots;\n      this.uDegree = uDegree;\n      this.vDegree = vDegree;\n    }\n  \n    private basisFunction(\n      t: number,\n      degree: number,\n      knots: number[],\n      i: number\n    ): number {\n      if (degree === 0) {\n        return (knots[i] <= t && t < knots[i + 1]) ||\n          (Math.abs(t - knots[i + 1]) < 1e-10 && i === knots.length - 2)\n          ? 1\n          : 0;\n      }\n  \n      const left = knots[i + degree] - knots[i];\n      const right = knots[i + degree + 1] - knots[i + 1];\n  \n      const leftTerm =\n        left !== 0\n          ? ((t - knots[i]) / left) * this.basisFunction(t, degree - 1, knots, i)\n          : 0;\n      const rightTerm =\n        right !== 0\n          ? ((knots[i + degree + 1] - t) / right) *\n            this.basisFunction(t, degree - 1, knots, i + 1)\n          : 0;\n  \n      return leftTerm + rightTerm;\n    }\n    public calculateFrame(u: number, v: number): Frame {\n      const delta = 1e-7; // 더 정밀한 미분을 위한 작은 delta 값\n  \n      // 현재 점과 미분 방향의 점들을 계산\n      const p = this.evaluate(u, v);\n      const pu = this.evaluate(u + delta, v);\n      const pv = this.evaluate(u, v + delta);\n  \n      // 속도 벡터 계산\n      const tangentU = Vector3.scale(\n        Vector3.subtract(pu, p),\n        1 / delta\n      ).normalize();\n  \n      const tangentV = Vector3.scale(\n        Vector3.subtract(pv, p),\n        1 / delta\n      ).normalize();\n  \n      // tangentU가 0이면 대체 벡터 사용\n      if (tangentU.isZero()) {\n        const alternateU = new Vector3(1, 0, 0);\n        const dot = Vector3.dot(alternateU, tangentV);\n        tangentU.x = alternateU.x - dot * tangentV.x;\n        tangentU.y = alternateU.y - dot * tangentV.y;\n        tangentU.z = alternateU.z - dot * tangentV.z;\n      }\n  \n      // tangentV가 0이면 대체 벡터 사용\n      if (tangentV.isZero()) {\n        const alternateV = new Vector3(0, 1, 0);\n        const dot = Vector3.dot(alternateV, tangentU);\n        tangentV.x = alternateV.x - dot * tangentU.x;\n        tangentV.y = alternateV.y - dot * tangentU.y;\n        tangentV.z = alternateV.z - dot * tangentU.z;\n      }\n  \n      const frame = new Frame(\n        p,\n        tangentU,\n        tangentV,\n        Vector3.cross(tangentU, tangentV).normalize()\n      );\n  \n      // 프레임 유효성 검사\n      if (!frame.isValid()) {\n        throw new Error(\"Invalid frame generated\");\n      }\n  \n      return frame;\n    }\n    public calculateFrameWithBinormal(\n      u: number,\n      v: number\n    ): {\n      frame: Frame;\n      binormal: Vector3;\n    } {\n      const frame = this.calculateFrame(u, v);\n      const binormal = Vector3.cross(frame.normal, frame.tangentU).normalize();\n  \n      return { frame, binormal };\n    }\n  \n    public evaluate(u: number, v: number): Vector3 {\n      // 매개변수 값을 0-1 범위로 클램핑\n      u = Math.max(0, Math.min(1, u));\n      v = Math.max(0, Math.min(1, v));\n  \n      let x = 0,\n        y = 0,\n        z = 0;\n      let totalWeight = 0;\n  \n      // 노트 스팬 찾기\n      const uSpan = this.findSpan(u, this.uDegree, this.uKnots);\n      const vSpan = this.findSpan(v, this.vDegree, this.vKnots);\n  \n      // 기저 함수 계산을 위한 배열\n      const uBasis: number[] = new Array(this.uDegree + 1).fill(0);\n      const vBasis: number[] = new Array(this.vDegree + 1).fill(0);\n  \n      // 기저 함수 값 계산\n      for (let i = 0; i <= this.uDegree; i++) {\n        uBasis[i] = this.basisFunction(\n          u,\n          this.uDegree,\n          this.uKnots,\n          uSpan - this.uDegree + i\n        );\n      }\n      for (let j = 0; j <= this.vDegree; j++) {\n        vBasis[j] = this.basisFunction(\n          v,\n          this.vDegree,\n          this.vKnots,\n          vSpan - this.vDegree + j\n        );\n      }\n  \n      // 평가 계산\n      for (let i = 0; i <= this.uDegree; i++) {\n        const uIndex = uSpan - this.uDegree + i;\n        if (uIndex < 0 || uIndex >= this.controlPoints.length) continue;\n  \n        for (let j = 0; j <= this.vDegree; j++) {\n          const vIndex = vSpan - this.vDegree + j;\n          if (vIndex < 0 || vIndex >= this.controlPoints[0].length) continue;\n  \n          const weight = uBasis[i] * vBasis[j];\n          const point = this.controlPoints[uIndex][vIndex];\n  \n          x += weight * point.x;\n          y += weight * point.y;\n          z += weight * point.z;\n          totalWeight += weight;\n        }\n      }\n  \n      // 가중치가 너무 작으면 가장 가까운 컨트롤 포인트 반환\n      if (Math.abs(totalWeight) < 1e-10) {\n        const nearestU = Math.floor(u * (this.controlPoints.length - 1));\n        const nearestV = Math.floor(v * (this.controlPoints[0].length - 1));\n        return this.controlPoints[nearestU][nearestV];\n      }\n  \n      return new Vector3(x / totalWeight, y / totalWeight, z / totalWeight);\n    }\n  \n    private findSpan(t: number, degree: number, knots: number[]): number {\n      const n = knots.length - degree - 2;\n  \n      if (Math.abs(t - knots[n + 1]) < 1e-10) return n;\n      if (t < knots[degree]) return degree;\n  \n      let low = degree;\n      let high = n + 1;\n      let mid = Math.floor((low + high) / 2);\n  \n      while (t < knots[mid] || t >= knots[mid + 1]) {\n        if (t < knots[mid]) {\n          high = mid;\n        } else {\n          low = mid;\n        }\n        mid = Math.floor((low + high) / 2);\n  \n        // 무한 루프 방지\n        if (low >= high) {\n          return Math.min(n, mid);\n        }\n      }\n  \n      return mid;\n    }\n  \n    public createKnotsAndDegree(\n      controlPoints: Vector3[][],\n      uDegree = 3,\n      vDegree = 3\n    ) {\n      const uCount = controlPoints.length;\n      const vCount = controlPoints[0].length;\n  \n      const generateKnots = (count: number, degree: number): number[] => {\n        const knots = [];\n        const knotCount = count + degree + 1;\n        for (let i = 0; i <= degree; i++) {\n          knots.push(0);\n        }\n        const internalKnots = knotCount - 2 * (degree + 1);\n        for (let i = 1; i <= internalKnots + 1; i++) {\n          knots.push(i / (internalKnots + 1));\n        }\n        for (let i = 0; i <= degree; i++) {\n          knots.push(1);\n        }\n  \n        return knots;\n      };\n      if (uCount <= uDegree || vCount <= vDegree) {\n        uDegree = Math.min(uCount - 1, vCount - 1);\n        console.warn(\n          `Degree reduced to ${uDegree} due to insufficient control points`\n        );\n      }\n  \n      const uKnots = generateKnots(uCount, uDegree);\n      const vKnots = generateKnots(vCount, vDegree);\n  \n      return { uKnots, vKnots, uDegree, vDegree };\n    }\n  \n    public normal(u: number, v: number): Vector3 {\n      const delta = 0.01;\n  \n      const p1 = this.evaluate(u, v);\n      const p2 = this.evaluate(u + delta, v);\n      const p3 = this.evaluate(u, v + delta);\n  \n      const tangent1 = Vector3.subtract(p2, p1);\n      const tangent2 = Vector3.subtract(p3, p1);\n  \n      const normal = Vector3.cross(tangent1, tangent2);\n  \n      return normal.normalize();\n    }\n  \n    public curvature(u: number, v: number): number {\n      const delta = 0.01;\n  \n      const p1 = this.evaluate(u, v);\n      const p2 = this.evaluate(u + delta, v);\n      const p3 = this.evaluate(u, v + delta);\n  \n      const d1 = Vector3.subtract(p2, p1).magnitude();\n      const d2 = Vector3.subtract(p3, p1).magnitude();\n  \n      return Math.abs(d1 - d2) / delta;\n    }\n  }","import { RendererCanvas3DWireframe } from \"./renderer\";\r\nimport { getSlider, getCheckBox } from './renderer/util'\r\n\r\nimport { Vector3, NURBSSurface } from './NURBS/Surface';\r\n\r\nexport class Solution {\r\n  public div: HTMLElement;\r\n  public renderer: RendererCanvas3DWireframe;\r\n  public vecs = [];\r\n  public cps = [];\r\n  public pts = [];\r\n  public lns = [];\r\n  public polylines = [];\r\n  public circle = [];\r\n  public t = 0.0;\r\n  public tVal = 0.0;\r\n  surface;\r\n  N = 3;\r\n  uSeg = 20;\r\n  vSeg = 20;\r\n  u = 0;\r\n  v = 0;\r\n\r\n  constructor(id: string) {\r\n    this.div = document.getElementById(id);\r\n\r\n    const divUI = document.createElement('div');\r\n    divUI.style.position = 'absolute';\r\n    this.div.appendChild(divUI);\r\n\r\n    let slider = getSlider(\"N\", 1, 3);\r\n    slider.slider.defaultValue = `${this.N}`;\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      // console.log(slider.slider.value);\r\n      this.N = value;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n\r\n    let checkBox = getCheckBox('show frame')\r\n    checkBox.checkBox.defaultChecked = false\r\n    checkBox.checkBox.onchange = () => {\r\n      this.renderer.showFrame = checkBox.checkBox.checked;\r\n      // console.log(checkBox.checkBox.checked)\r\n    }\r\n    divUI.appendChild(checkBox.div);\r\n    \r\n    let checkBox2 = getCheckBox('show vertex')\r\n    checkBox2.checkBox.defaultChecked = true\r\n    checkBox2.checkBox.onchange = () => {\r\n      if (checkBox2.checkBox.checked === true) {\r\n          this.renderer.showPoint = true;\r\n      } else {\r\n          this.renderer.showPoint = false;\r\n      }\r\n    }\r\n    divUI.appendChild(checkBox2.div);\r\n\r\n    slider = getSlider(\"U seg\", 1, 25);\r\n    slider.slider.defaultValue = `${this.uSeg}`;\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      // console.log(slider.slider.value);\r\n      this.uSeg = value;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n    slider = getSlider(\"V seg\", 1, 25);\r\n    slider.slider.defaultValue = `${this.vSeg}`;\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      // console.log(slider.slider.value);\r\n      this.vSeg = value;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n\r\n    slider = getSlider(\"u\", 0, 99);\r\n    slider.slider.defaultValue = `${this.vSeg}`;\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      // console.log(slider.slider.value);\r\n      this.u = value * 0.01;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n\r\n    slider = getSlider(\"v\", 0, 99);\r\n    slider.slider.defaultValue = `${this.vSeg}`;\r\n    slider.slider.addEventListener(\"input\", (e: Event) => {\r\n      // get input value\r\n      const value = +(e.target as HTMLInputElement).value;\r\n      // console.log(slider.slider.value);\r\n      this.v = value * 0.01;\r\n      this.removeAll();\r\n      this.init();\r\n    });\r\n    divUI.appendChild(slider.div);\r\n\r\n    this.renderer = new RendererCanvas3DWireframe(id);\r\n    this.renderer.pts = this.pts;\r\n    this.renderer.vecs = this.vecs;\r\n    this.renderer.cps = this.cps;\r\n    this.renderer.circle = this.circle;\r\n    this.renderer.polylines = this.polylines;\r\n\r\n    this.init();\r\n    this.update();\r\n    this.render();\r\n  }\r\n  // public\r\n  public init() {\r\n    const scale = 100;\r\n    const controlPoints = [\r\n      [\r\n        new Vector3(0, -2 * scale, -2 * scale),\r\n        new Vector3(1 * scale, 0, 1 * scale),\r\n        new Vector3(2 * scale, 0, 0),\r\n      ],\r\n      [\r\n        new Vector3(0, 1 * scale, 1 * scale),\r\n        new Vector3(1 * scale, 1 * scale, 2 * scale),\r\n        new Vector3(2 * scale, 1 * scale, 1 * scale),\r\n      ],\r\n      [\r\n        new Vector3(0, 2 * scale, 0),\r\n        new Vector3(1 * scale, 2 * scale, 1 * scale),\r\n        new Vector3(2 * scale, 2 * scale, 0),\r\n      ],\r\n      // [\r\n      //   new Vector3(0, 2, 3),\r\n      //   new Vector3(1, 2, 3),\r\n      //   new Vector3(2, 2, 3),\r\n      // ],\r\n    ];\r\n\r\n    const surface = new NURBSSurface(controlPoints, this.N, this.N);\r\n\r\n    const ustep = 1 / this.uSeg;\r\n    const vstep = 1 / this.vSeg;\r\n\r\n    let count = 0;\r\n\r\n    for (let u = 0; u < 1; u += vstep) {\r\n      for (let v = 0; v < 1; v += ustep) {\r\n        const point = surface.evaluate(u, v);\r\n        const x = point.x;\r\n        const y = point.y;\r\n        const z = point.z;\r\n        const p = new Vector3(x, y, z);\r\n        p.size = 2\r\n        this.pts.push(p);\r\n\r\n        const frame = surface.calculateFrame(u, v);\r\n\r\n        this.vecs.push([ point, Vector3.add(point, Vector3.scale(frame.tangentU, 10)),]);\r\n        this.vecs.push([ point, Vector3.add(point, Vector3.scale(frame.tangentV, 10)),]);\r\n        this.vecs.push([ point, Vector3.add(point, Vector3.scale(frame.normal, 10)),]);\r\n        // this.vecs.push([point, Vector3.add(point, Vector3.scale(frame.normal, 10))])\r\n        // this.vecs.push(frame.tangentV)\r\n        // this.vecs.push(frame.normal)\r\n\r\n        // console.log(count, resolution, step, u,v, point, this.vecs)\r\n      }\r\n    }\r\n\r\n    let point = surface.evaluate(this.u, this.v);\r\n    // console.log(this.u, this.v, point)\r\n    point.size = 4\r\n    this.pts.push(point)\r\n    \r\n    const uIsocourve = []\r\n    for (let u = 0; u < 1; u += ustep) {\r\n      let point = surface.evaluate(u, this.v);\r\n      uIsocourve.push(point)\r\n    }\r\n    this.polylines.push(uIsocourve)\r\n\r\n    const vIsocourve = []\r\n    for (let v = 0; v < 1; v += vstep) {\r\n      let point = surface.evaluate(this.u, v);\r\n      vIsocourve.push(point)\r\n    }\r\n    this.polylines.push(vIsocourve)\r\n\r\n  }\r\n  public removeAll() {\r\n    this.cps.length = 0;\r\n    this.pts.length = 0;\r\n    this.vecs.length = 0;\r\n    this.circle.length = 0;\r\n    this.polylines.length = 0;\r\n  }\r\n  public update() {\r\n    for (let i = 0; i < this.pts.length; ++i) {\r\n      // const offset = Math.cos((this.pts[i].x + this.pts[i].y) * this.t) * 2\r\n      // this.pts[i].z+= offset\r\n      // this.pts[i].z = Math.cos(i * this.t * 0.1)\r\n    }\r\n\r\n    // console.log(this.pts)\r\n\r\n    this.t += 0.01;\r\n  }\r\n  public render() {\r\n    requestAnimationFrame(() => {\r\n      this.render();\r\n    });\r\n    this.update();\r\n    this.renderer.render();\r\n  }\r\n  public destroy() {\r\n    // this.renderer.destroy();\r\n    try {\r\n      while (this.div && this.div.lastElementChild) {\r\n        const lastChild = this.div.lastElementChild as Node;\r\n        this.div.removeChild(lastChild);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing child elements:\", error);\r\n    }\r\n  }\r\n}"],"names":["RendererCanvas3DWireframe","constructor","id","render","vecs","pts","cps","circle","polylines","showFrame","showPoint","div","document","getElementById","bounding","getBoundingClientRect","canvas","createElement","width","height","appendChild","ctx","getContext","angleX","Math","PI","angleY","dragging","panning","zoom","lastMouseX","lastMouseY","offsetX","offsetY","panStartX","panStartY","fov","rotate","point","cosX","cos","sinX","sin","cosY","sinY","x","y","z","project","scale","projectionToView","p","rotated","rendering","clearRect","i","this","length","col","strokeStyle","beginPath","j","projectPt","moveTo","lineTo","stroke","vsForLine","forEach","projected","depthScale","radius","size","arc","fillStyle","color","fill","count","vs","push","rotated2","projected2","drawVector","lineWidth","drawCircle","addEventListener","e","button","altKey","clientX","clientY","dx","dy","preventDefault","mouseX","left","mouseY","top","prevZoom","zoomSpeed","max","deltaY","min","scaleChange","origin","vector","start","end","closePath","cp","angle","radians","getSlider","title","style","display","slider","type","text","textContent","getCheckBox","checkBox","defaultChecked","Vector3","static","a","b","v","scalar","magnitude","sqrt","normalize","mag","isZero","abs","Frame","tangentU","tangentV","normal","orthonormalize","dot","subtract","cross","isValid","epsilon","NURBSSurface","controlPoints","uDegree","vDegree","uKnots","vKnots","maxUDegree","maxVDegree","result","createKnotsAndDegree","init","basisFunction","t","degree","knots","right","calculateFrame","u","delta","evaluate","pu","pv","alternateU","alternateV","frame","Error","calculateFrameWithBinormal","binormal","totalWeight","uSpan","findSpan","vSpan","uBasis","Array","vBasis","uIndex","vIndex","weight","nearestU","floor","nearestV","n","low","high","mid","uCount","vCount","generateKnots","knotCount","internalKnots","console","warn","p1","p2","p3","tangent1","tangent2","curvature","d1","d2","Solution","renderer","lns","tVal","surface","N","uSeg","vSeg","divUI","position","defaultValue","value","target","removeAll","onchange","checked","checkBox2","update","ustep","vstep","add","uIsocourve","vIsocourve","requestAnimationFrame","destroy","lastElementChild","lastChild","removeChild","error"],"sourceRoot":""}
{"version":3,"file":"static/js/31964.f2d61cd2.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_07/Geometry/Core/Base.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/Geometry/Primatives/Quad.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/Utility/Matrix4.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/Utility/Vector3.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/WebGL/AttribLocations.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/WebGL/Model.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/WebGL/Shader.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/WebGL/Transform.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_07/WebGL/VAO.ts"],"sourcesContent":["import { Scene } from '../../Core/Scene';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n\r\n        this.scene.add(this);\r\n    }\r\n    render(gl: WebGL2RenderingContext) {\r\n        //\r\n    }\r\n}","import { VAO } from '../../WebGL/VAO';\r\nimport { Model } from '../../WebGL/Model';\r\n\r\nimport { NGL3dApp } from '../..';\r\n\r\nimport { Shader } from '../../WebGL/Shader';\r\nimport { GeometryBase } from '../Core/Base';\r\n\r\nclass ShaderQuad extends Shader {\r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string, pMatrix: Float32Array) {\r\n        super(gl, vertSrc, fragSrc);\r\n        if (this.program) {\r\n            // gl.useProgram(this.program);\r\n            // this.setPerspective(pMatrix);\r\n            // gl.useProgram(null); // Done setting up shader\r\n        }\r\n    }\r\n}\r\n\r\nexport class Quad extends GeometryBase {\r\n    v = `#version 300 es\r\n    in vec3 a_position;\t//Standard position data.\r\n    in vec2 a_uv;\r\n\r\n    uniform mat4 uPMatrix;\r\n    uniform mat4 uMVMatrix;\r\n    uniform mat4 uCameraMatrix;\r\n\r\n    out vec2 uv;\r\n\r\n    void main(void) {\r\n        uv = a_uv;\r\n        gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\r\n    }\r\n    `;\r\n    f = `#version 300 es\r\n\r\n    precision mediump float;\r\n    in vec2 uv;\r\n\r\n    out vec4 finalColor;\r\n    void main(void) {\r\n        //Square Border\r\n        // float c = (uv.x <= 0.1 || uv.x >=0.9 || uv.y <= 0.1 || uv.y >= 0.9)? 0.0 : 1.0;\r\n\r\n        // finalColor = vec4(c,c,c,1.0-c);\r\n        // finalColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n\r\n        //Circle\r\n        //  /*\r\n        vec2 delta = uv - vec2(0.5,0.5); //delta position from center;\r\n        float dist = 0.5 - sqrt(delta.x*delta.x + delta.y*delta.y);\r\n\r\n        float border = 0.01;\r\n        float a = 0.0;\r\n        if(dist > border) a = 1.0;\r\n        else if(dist > 0.0) a = dist / border;\r\n\r\n        finalColor = vec4(0.0,0.0,0.0,a);\r\n        //  */\r\n    }\r\n    `;\r\n    app: NGL3dApp;\r\n    vao: VAO;\r\n    shader: ShaderQuad;\r\n    model: Model;\r\n    constructor(app: NGL3dApp) {\r\n        super(app.scene);\r\n        this.app = app;\r\n        let aVert = [-0.5, 0.5, 0,\r\n        -0.5, -0.5, 0,\r\n            0.5, -0.5, 0,\r\n            0.5, 0.5, 0];\r\n\r\n        let aUV = [0, 0, 0, 1, 1, 1, 1, 0];\r\n        let aIndex = [0, 1, 2, 2, 3, 0];\r\n\r\n        this.shader = new ShaderQuad(this.app.canvas.gl, this.v, this.f, this.app.camera.projectionMatrix);\r\n\r\n        this.vao = new VAO(app.canvas.gl, 'Quad', aVert, aIndex, null, aUV);\r\n        this.vao.noCulling = true;\r\n        this.vao.doBlending = true;\r\n\r\n        this.model = new Model(this.vao);\r\n\r\n    }\r\n    render() {\r\n        this.shader.activate();\r\n        this.shader.setCameraMatrix(this.app.camera.viewMatrix);\r\n        this.shader.renderModel(this.model.preRender());\r\n    }\r\n}","import { Vector3 } from './Vector3';\r\n\r\nexport class Matrix4 {\r\n    raw: Float32Array;\r\n    // ....................................................................\r\n    // Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    // from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number , near: number, far: number ) {\r\n        let f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n    static ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    }\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    // make the rows into the columns\r\n    static transpose(out: number[], a: number[]) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    // Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n        //  Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {return null; }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Operation\r\n\r\n    // https:// github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Matrix4 , v: number[]) {\r\n        let x = v[0], y = v[1], z = v[2], w = v[3];\r\n        let c1r1 = mat4[ 0], c2r1 = mat4[ 1], c3r1 = mat4[ 2], c4r1 = mat4[ 3],\r\n            c1r2 = mat4[ 4], c2r2 = mat4[ 5], c3r2 = mat4[ 6], c4r2 = mat4[ 7],\r\n            c1r3 = mat4[ 8], c2r3 = mat4[ 9], c3r3 = mat4[10], c4r3 = mat4[11],\r\n            c1r4 = mat4[12], c2r4 = mat4[13], c3r4 = mat4[14], c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8]\t* v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9]\t* v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10]\t* v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11]\t* v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    // From glMatrix\r\n    // Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) { \r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n        //  Cache only the current line of the second matrix\r\n        let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\t\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    }\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array , rad: number, axis: number) {\r\n        let x = axis[0], y = axis[1], z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) { return null; }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0]; a01 = out[1]; a02 = out[2]; a03 = out[3];\r\n        a10 = out[4]; a11 = out[5]; a12 = out[6]; a13 = out[7];\r\n        a20 = out[8]; a21 = out[9]; a22 = out[10]; a23 = out[11];\r\n\r\n        //  Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n        //  Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return out;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat?: Float32Array ) {\r\n        if (mat === undefined) { mat = out; }// If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],\r\n            a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],\r\n            a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],\r\n            a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {return false; }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8]\t* z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9]\t* z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10]\t* z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11]\t* z + out[15];\r\n    }\r\n    constructor() { \r\n        this.raw = Matrix4.identity(); \r\n    }\r\n    // ....................................................................\r\n    // Transformations Methods\r\n    vtranslate(v: Vector3) {\r\n        Matrix4.translate(this.raw, v.x, v.y, v.z);\r\n        return this; \r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.raw, x, y, z); \r\n        return this;\r\n    }\r\n    rotateY(rad: number) {\t\tMatrix4.rotateY(this.raw, rad); return this; }\r\n    rotateX(rad: number) {\t\tMatrix4.rotateX(this.raw, rad); return this; }\r\n    rotateZ(rad: number) {\t\tMatrix4.rotateZ(this.raw, rad); return this; }\r\n\r\n    vscale(vec3: Vector3) {\t\tMatrix4.scale(this.raw, vec3.x, vec3.y, vec3.z); return this; }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.raw, x, y, z); \r\n        return this; \r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.raw); \r\n        return this; \r\n    }\r\n\r\n    // ....................................................................\r\n    // Methods\r\n    // Bring is back to identity without changing the transform values.\r\n    resetRotation() {\t\r\n        for (let i = 0; i < this.raw.length; i++) {\r\n            if (i >= 12 && i <= 14) {continue; }\r\n            this.raw[i] = (i % 5 === 0) ? 1 : 0;  // only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // reset data back to identity.\r\n    reset() { \r\n        for (let i = 0; i < this.raw.length; i++) { this.raw[i] = (i % 5 === 0) ? 1 : 0; } // only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n}","\r\nexport class Vector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0 ) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    magnitude(v?: Vector3) {\r\n        if (v === undefined) {return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z ); }\r\n        let x = v.x - this.x, y = v.y - this.y, z = v.y - this.z;\r\n        return Math.sqrt( x * x + y * y + z * z );\r\n    }\r\n\r\n    normalize() { \r\n        let mag = this.magnitude(); \r\n        this.x /= mag; this.y /= mag; this.z /= mag; \r\n        return this;\r\n    }\r\n    set(x: number, y: number, z: number) {\r\n         this.x = x; this.y = y; this.z = z;\t\r\n         return this;\r\n    }\r\n    multiScalar(v: number) { \r\n        this.x *= v; this.y *= v; this.z *= v; return this; \r\n    }\r\n    getArray() {\r\n         return [this.x, this.y, this.z]; }\r\n    getFloatArray() {\r\n         return new Float32Array([this.x, this.y, this.z]); }\r\n    clone() {\r\n         return new Vector3(this.x, this.y, this.z); \r\n    }\r\n} ","export enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_LOC = 4,\r\n    ATTR_COLOR_NAME = 'a_color',\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    normal: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.normal = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modelMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n    \r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective =\tgl.getUniformLocation(program, 'uPMatrix');\r\n        this.modelMatrix =\tgl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix =\tgl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture =\tgl.getUniformLocation(program, 'uMainTex' );\r\n    }\r\n}","import { VAO } from './VAO';\r\nimport { Transform } from './Transform';\r\n\r\nexport class Model {\r\n    vao: VAO;\r\n    transform: Transform;\r\n    constructor(vao: VAO) {\r\n        this.transform = new Transform();\r\n        this.vao = vao;\r\n    }\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n         this.transform.scale.set(x, y, z); \r\n         return this; \r\n        }\r\n    setPosition(x: number, y: number, z: number) {\r\n         this.transform.position.set(x, y, z); \r\n         return this; \r\n        }\r\n    setRotation(x: number, y: number, z: number) {\r\n         this.transform.rotation.set(x, y, z); \r\n         return this; \r\n        }\r\n\r\n    addScale(x: number, y: number, z: number) {\tthis.transform.scale.x += x;\tthis.transform.scale.y += y;\tthis.transform.scale.y += y;\t\r\n        return this; \r\n    }\r\n    addPosition(x: number, y: number, z: number) {\tthis.transform.position.x += x; this.transform.position.y += y; this.transform.position.z += z; \r\n        return this; \r\n    }\r\n    addRotation(x: number, y: number, z: number) {\tthis.transform.rotation.x += x; this.transform.rotation.y += y; this.transform.rotation.z += z; \r\n        return this; \r\n    }\r\n\r\n    preRender() {\r\n         this.transform.updateMatrix(); \r\n         return this; \r\n    }\r\n}","// import { GLShaderCommon } from '../Utility/GLShaderCommon';\r\n// import { AttribLocations, UniformLocations } from './AttribLocations';\r\nimport { Model } from './Model';\r\n\r\nexport enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_NAME = 'a_color',\r\n    ATTR_COLOR_LOC = 4,\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    norm: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_POSITION_NAME);\r\n        this.norm = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\nexport class UniformLocations {\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modelMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n    \r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective =\tgl.getUniformLocation(program, 'uPMatrix');\r\n        this.modelMatrix =\tgl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix =\tgl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture =\tgl.getUniformLocation(program, 'uMainTex' );\r\n    }\r\n}\r\n\r\nexport class Shader {\r\n\r\n    gl: WebGL2RenderingContext;\r\n    program: WebGLProgram | null;\r\n\r\n    attribLoc: AttribLocations;\r\n    uniformLoc: UniformLocations;\r\n\r\n    vShader: WebGLShader | null;\r\n    fShader: WebGLShader | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext , vertShaderSrc: string, fragShaderSrc: string, needValidate: boolean = true ) {\r\n        this.gl = gl;\r\n\r\n        this.vShader = ShaderUtility.CreateShader(gl, gl.VERTEX_SHADER as unknown as WebGLShader, vertShaderSrc);\r\n        this.fShader = ShaderUtility.CreateShader(gl, gl.FRAGMENT_SHADER as unknown as WebGLShader, fragShaderSrc);\r\n        \r\n        if (this.vShader && this.fShader ) { \r\n            let program = ShaderUtility.CreateProgram(gl, this.vShader, this.fShader, needValidate);\r\n\r\n            if (program) {\r\n                this.program = program;\r\n                gl.useProgram(this.program);\r\n                this.attribLoc = new AttribLocations(gl, this.program);\r\n                this.uniformLoc = new UniformLocations(gl, this.program);\r\n                return;\r\n                // gl.useProgram(this.program);\r\n                // this.attribLoc = new AttribLocations(gl, this.program);\r\n                // this.uniformLoc = new UniformLocations(gl, this.program);\r\n                // gl.useProgram(null);\r\n                // this.uniformLoc = {};\t// TODO : Replace in later lessons with get standardUniformLocations.\r\n            }\r\n\r\n            // Note :: Extended shaders should deactivate shader when done calling super and setting up custom parts in the constructor.\r\n        }\r\n    }\r\n    // ...................................................\r\n    // Methods\r\n    activate() {\r\n         this.gl.useProgram(this.program); return this; \r\n    }\r\n    deactivate() { \r\n        this.gl.useProgram(null); return this; \r\n    }\r\n\r\n    // function helps clean up resources when shader is no longer needed.\r\n    dispose() {\r\n        // unbind the program if its currently active\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) {this.gl.useProgram(null); }\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n    setPerspective(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.perspective, false, matData); \r\n        return this; \r\n    }\r\n    setModelMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.modelMatrix, false, matData); \r\n        return this; \r\n    }\r\n    setCameraMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.cameraMatrix, false, matData); \r\n        return this; \r\n    }\r\n    // ...................................................\r\n    // RENDER RELATED METHODS\r\n\r\n    // Setup custom properties\r\n    preRender() {\r\n        //\r\n    } \r\n    // Handle rendering a model\r\n    renderModel(model: Model) {\r\n        this.setModelMatrix(model.transform.getViewMatrix());\t// Set the transform, so the shader knows where the model exists in 3d space\r\n        this.gl.bindVertexArray(model.vao.vao);\t// Enable VAO, this will set all the predefined attributes for the shader\r\n        \r\n        if (model.vao.noCulling) {this.gl.disable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) {this.gl.enable(this.gl.BLEND); }\r\n        \r\n        if (model.vao.indexCount) {\r\n            this.gl.drawElements(model.vao.drawMode, model.vao.indexCount, this.gl.UNSIGNED_SHORT, 0); \r\n        } else {\r\n            this.gl.drawArrays(model.vao.drawMode, 0, model.vao.vertexCount);\r\n        }\r\n\r\n        this.gl.bindVertexArray(null);\r\n        if (model.vao.noCulling) {this.gl.enable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) {this.gl.disable(this.gl.BLEND); }\r\n        \r\n        return this;\r\n    }\r\n}\r\n\r\nclass ShaderUtility {\r\n    static CreateProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, needValidate: boolean = true): WebGLProgram | null {\r\n        const program = gl.createProgram();\r\n        if (program === null ) {return null; }\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n\r\n        gl.bindAttribLocation(program, ATTR.ATTR_POSITION_LOC, ATTR.ATTR_POSITION_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_NORMAL_LOC, ATTR.ATTR_NORMAL_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_UV_LOC, ATTR.ATTR_UV_NAME);\r\n        \r\n        gl.linkProgram(program);\r\n\r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            const error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        if (needValidate) {\r\n            gl.validateProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n                console.error('Failed to validate program', gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n                gl.deleteShader(fragmentShader);\r\n                gl.deleteShader(vertexShader);\r\n                return null;\r\n            }\r\n        }\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return program;\r\n    }\r\n    static CreateShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n        // console.log(type);\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) {return null; }\r\n        gl.shaderSource(shader, shaderString);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n}","import { Vector3 } from '../Utility/Vector3';\r\nimport { Matrix4 } from '../Utility/Matrix4';\r\n\r\nexport class Transform {\r\n    static deg2Rad = Math.PI / 180; // Cache result, one less operation to do for each update.\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matView: Matrix4;\r\n    matNormal: Float32Array;\r\n\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    constructor() {\r\n        this.position\t= new Vector3(0, 0, 0);\t// Traditional X,Y,Z 3d position\r\n        this.scale\t\t= new Vector3(1, 1, 1);\t// How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation\t= new Vector3(0, 0, 0);\t// Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView \t= new Matrix4();\t\t// Cache the results when calling updateMatrix\r\n        this.matNormal\t= new Float32Array(9);\t// This is a Mat3, raw array to hold the values is enough for what its used for\r\n\r\n        // Direction Vectors\r\n        this.forward\t= new Float32Array(4);\t// When rotating, keep track of what the forward direction is\r\n        this.up\t\t\t= new Float32Array(4);\t// what the up direction is, invert to get bottom\r\n        this.right\t\t= new Float32Array(4);\t// what the right direction is, invert to get left\r\n    }\r\n    updateMatrix() {\r\n        this.matView.reset() // Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(this.rotation.x * Transform.deg2Rad)\r\n            .rotateZ(this.rotation.z * Transform.deg2Rad)\r\n            .rotateY(this.rotation.y * Transform.deg2Rad)\r\n            .vscale(this.scale);\r\n\r\n        // Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.raw);\r\n\r\n        // Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward,\t[0, 0, 1, 0], this.matView.raw); // Z\r\n        Matrix4.transformVec4(this.up,\t\t[0, 1, 0, 0], this.matView.raw); // Y\r\n        Matrix4.transformVec4(this.right,\t[1, 0, 0, 0], this.matView.raw); // X\r\n\r\n        return this.matView.raw;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward,\t[0, 0, 1, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.up,\t\t[0, 1, 0, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.right,\t[1, 0, 0, 0], this.matView.raw);\r\n        return this;\r\n    }\r\n\r\n    getViewMatrix() {\treturn this.matView.raw; }\r\n    getNormalMatrix() {\treturn this.matNormal; }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}\r\n","import { ATTR } from './AttribLocations';\r\n\r\nexport enum DRAW_MODE {\r\n    // \r\n}\r\n\r\nexport class RTN {\r\n    name: string;\r\n    \r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor() {\r\n        // \r\n    }\r\n}\r\n\r\nexport class VAO {\r\n    name: string;\r\n\r\n    noCulling: boolean = true;\r\n    doBlending: boolean = true;\r\n    \r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, name: string , aryVert: number[], aryInd?: number[] | null, aryNorm?: number[] | null, aryUV?: number[] | null ) {\r\n        this.name = name;\r\n        this.drawMode = gl.TRIANGLES;\r\n\r\n        this.vao = gl.createVertexArray();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n        gl.bindVertexArray(this.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\r\n\r\n        // .......................................................\r\n        // Set up vertices\r\n        if (aryVert !== undefined && aryVert != null) {\r\n            this.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\r\n            this.vertexComponentLen = 3;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\r\n            this.vertexCount = aryVert.length / this.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufVertices);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\r\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\r\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\t\t\t\t\t\t// Put buffer at location of the vao\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup normals\r\n        if (aryNorm !== undefined && aryNorm != null) {\r\n            this.bufNormals = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufNormals);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup UV\r\n        if (aryUV !== undefined && aryUV != null) {\r\n            this.bufUV = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufUV);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup Index.\r\n        if (aryInd !== undefined && aryInd != null) {\r\n            this.bufIndex = gl.createBuffer();\r\n            this.indexCount = aryInd.length;\r\n            console.log(this);\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIndex);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\r\n            // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        }\r\n\r\n        // Clean up\r\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\r\n\r\n        // this.mMeshCache[name] = rtn;\r\n    }\r\n\r\n}"],"names":["GeometryBase","constructor","scene","this","add","render","gl","ShaderQuad","Shader","vertSrc","fragSrc","pMatrix","super","program","Quad","app","v","f","vao","shader","model","canvas","camera","projectionMatrix","VAO","noCulling","doBlending","Model","activate","setCameraMatrix","viewMatrix","renderModel","preRender","Matrix4","static","a","Float32Array","out","fovy","aspect","near","far","Math","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","x","y","z","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","rad","s","sin","c","cos","axis","t","b12","b20","b21","b22","len","sqrt","abs","mat","undefined","raw","identity","vtranslate","translate","rotateY","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","i","length","reset","Vector3","magnitude","normalize","mag","set","multiScalar","getArray","getFloatArray","clone","ATTR","AttribLocations","position","normal","uv","getAttribLocation","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","uPointSize","uAngle","perspective","modelMatrix","cameraMatrix","mainTexture","getUniformLocation","transform","Transform","setScale","setPosition","setRotation","rotation","addScale","addPosition","addRotation","updateMatrix","norm","ATTR_POSITION_NAME","vertShaderSrc","fragShaderSrc","needValidate","attribLoc","uniformLoc","vShader","fShader","ShaderUtility","CreateShader","VERTEX_SHADER","FRAGMENT_SHADER","CreateProgram","useProgram","deactivate","dispose","getParameter","CURRENT_PROGRAM","deleteProgram","setPerspective","matData","uniformMatrix4fv","setModelMatrix","getViewMatrix","bindVertexArray","disable","CULL_FACE","enable","BLEND","indexCount","drawElements","drawMode","UNSIGNED_SHORT","drawArrays","vertexCount","vertexShader","fragmentShader","createProgram","attachShader","bindAttribLocation","ATTR_POSITION_LOC","ATTR_NORMAL_LOC","ATTR_UV_LOC","linkProgram","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","console","log","deleteShader","validateProgram","VALIDATE_STATUS","type","shaderString","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","matView","matNormal","forward","up","deg2Rad","updateDirection","getNormalMatrix","PI","DRAW_MODE","RTN","name","bufVertices","bufNormals","bufUV","bufIndex","vertexComponentLen","aryVert","aryInd","aryNorm","aryUV","TRIANGLES","createVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}
{"version":3,"file":"static/js/35317.fcbff468.chunk.js","mappings":"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","sources":["njslab/Raster/AppImage/AppExpressImage/ExpressImage/API/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/View/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/ExpressImageData/DataModelBase/ParamCropping.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/ExpressImageData/DataModelBase/ParamDrawing.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/ExpressImageData/DataModelBase/ParamEffecting.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/ExpressImageData/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/Tools/Drawing/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/Tools/Editing/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/Tools/ExImageViewer/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/Tools/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/ImageWrapper/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/CommonProcess/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/Implementation/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/ModelController/IO/StateProcessing/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/lib/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/ModelController/IO/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/ModelController/Theme/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/ModelController/UI/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/ModelController/index.ts","njslab/Raster/AppImage/AppExpressImage/ExpressImage/index.ts","njslab/Raster/AppImage/UIComponent/ImageUI.ts","njslab/Raster/AppImage/index.ts","njslab/Raster/AppImage/lib/App/SceneManager.ts","njslab/Raster/AppImage/lib/Color/ColorUtility.ts","njslab/Raster/AppImage/lib/Color/FilterPreset.ts","njslab/Raster/AppImage/lib/Color/ImageFilterPreset.ts","njslab/Raster/AppImage/lib/Enum/EnumColor.ts","njslab/Raster/AppImage/lib/Enum/EnumCommon.ts","njslab/Raster/AppImage/lib/Enum/EnumExpressImage.ts","njslab/Raster/AppImage/lib/Enum/EnumPersisted.ts","njslab/Raster/AppImage/lib/Enum/EnumUnit.ts","njslab/Raster/AppImage/lib/Utility/CanvasUtility.ts","njslab/Raster/AppImage/lib/Utility/CursorUtility.ts","njslab/Raster/AppImage/lib/Geometry/NVector3.ts","njslab/Raster/AppImage/lib/Utility/DrawingPresetExpressImage.ts","njslab/Raster/AppImage/lib/Utility/HTMLUtility.ts","njslab/Raster/AppImage/lib/Utility/MathUtility.ts","njslab/Raster/AppImage/lib/Utility/NJSLoader.ts","njslab/Raster/AppImage/lib/Utility/SVGUtility.ts"],"sourcesContent":["import { ExpressImageAppType, FrameShapeType, FrameRatioPreset } from '../lib';\nimport { ExpressImageApp } from '..';\nexport class API {\n    public app: ExpressImageApp;\n    constructor(app: ExpressImageApp) {\n        this.app = app;\n    }\n    public undo(app: string) {\n        if (app === ExpressImageAppType.Editing || app === ExpressImageAppType.Effecting) {\n            this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickUndo();\n        } else if (app === ExpressImageAppType.Drawing) {\n            this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickUndo();\n        }\n    }\n    public redo(app: string) {\n        if (app === ExpressImageAppType.Editing || app === ExpressImageAppType.Effecting) {\n            this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickRedo();\n        } else if (app === ExpressImageAppType.Drawing) {\n            this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickRedo();\n        }\n    }\n    public rotateCropping(degree: number) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.onRotateCropping(degree);\n    }\n    public zoomCropping(level: number) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.onZoomLevel(level);\n    }\n    public setScaleGraphics(v: number, absolute: boolean = true, undoNeeded: boolean = true) {\n        this.app.implementation.imageWrapper.tools.drawingTool.app.api.setScaleGraphics(v, absolute, undoNeeded);\n    }\n    public scaleUpGraphics() {\n        this.app.implementation.imageWrapper.tools.drawingTool.app.api.setScaleGraphics(0.1, false);\n    }\n    public scaleDownGraphics() {\n        this.app.implementation.imageWrapper.tools.drawingTool.app.api.setScaleGraphics(-0.1, false);\n    }\n    public activateEffectEnv(fromApp: string = ExpressImageAppType.Editing) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.activateEffectEnv(fromApp);\n    }\n    public deactivateEffectEnv() {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.deactivateEffectEnv();\n    }\n    public setColor(appType: ExpressImageAppType, color: string, undoNeeded: boolean = true) {\n        switch (appType) {\n            case ExpressImageAppType.Drawing:\n                this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickSetColor(color, undoNeeded);\n                break;\n            default:\n                break;\n        }\n    }\n    public setDrawingMode(action: string) {\n        if (this.app.implementation.imageWrapper.tools.drawingTool.app) {\n            this.app.implementation.imageWrapper.tools.drawingTool.app.pushAction(action);\n        }\n    }\n    public revertToOriginal(appType: ExpressImageAppType) {\n        // console.log(appType)\n        // this.app.implementation.imageWrapper.dataSet.clearData();\n        switch (appType) {\n            case ExpressImageAppType.Drawing:\n                this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickRevertToOriginal();\n                break;\n            default:\n                this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickRevertToOriginal();\n                break;\n        }\n        // switch (appType) {\n        //     case ExpressImageAppType.Drawing:\n        //         break;\n        //     default:\n        //         // this.app.implementation.imageWrapper.dataSet.clearData();\n        // //         this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickRevertToOriginal();\n        // //         this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickRevertToOriginal()\n        // //         // this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickRevertToOriginal(\n        // //         //     this.app.implementation.imageWrapper.view.imgOrigin, this.app.implementation.imageWrapper.dataSet.paramCropping.toString()\n        // //         // );\n        // //         // this.app.implementation.imageWrapper.tools.drawingTool.updateImg(this.app.implementation.imageWrapper.view.imgOrigin, this.app.implementation.imageWrapper.dataSet.paramCropping.toString());\n        //         break;\n        // }\n    }\n    public shiftShape(type: FrameShapeType) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickShiftShape(type);\n    }\n    public shiftShapeRatio(type: FrameRatioPreset) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickShiftShapeRatio(type);\n    }\n    public shiftFilterPreset(filterName: string) {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.shiftFilterPreset(filterName);\n    }\n    public reset() {\n        // TODO:\n    }\n    public resizeByWindow() {\n        this.app.implementation.imageWrapper.resizeByWindow();\n    }\n    public destroy() {\n        this.app.implementation.imageWrapper.destroy();\n        this.app.modelController.destroy()\n        try {\n            this.app.modelController.divHost.removeChild(this.app.modelController.div);\n        } catch (error) {\n            // TODO:\n        }\n\n    }\n    public destroyEditing() {\n        this.app.implementation.imageWrapper.tools.editingTool.app.api.onClickPlace();\n        this.app.implementation.imageWrapper.tools.editingTool.app.destroy();\n    }\n    public destroyDrawing() {\n        this.app.implementation.imageWrapper.dataSet.paramDrawing.updateDrawingData(\n            this.app.implementation.imageWrapper.tools.drawingTool.app.api.getDataGeometry()\n            );\n        this.app.implementation.imageWrapper.dataSet.paramDrawing.scale = this.app.implementation.imageWrapper.tools.drawingTool.app.api.getScaleFactor()\n\n\n        this.app.implementation.imageWrapper.tools.drawingTool.app.api.onClickPlace();\n        this.app.implementation.imageWrapper.tools.drawingTool.app.destroy();\n    }\n    public getData(computeImgCtx = false, appClosingBySave = false) {\n        // this.onClickDownload(); // for debugging\n        return this.app.implementation.imageWrapper.getData(computeImgCtx, appClosingBySave);\n    }\n    public resizeDiv(v: number) {\n        if (v < 0.3) {\n            this.app.implementation.imageWrapper.updateSizeDiv(25);\n        } else if (v > 0.6) {\n            this.app.implementation.imageWrapper.updateSizeDiv(90);\n        } else {\n            this.app.implementation.imageWrapper.updateSizeDiv(50);\n        }\n    }\n    public onClickImportImgByURL(url: string, needEditingApp: boolean = false) {\n        this.app.implementation.imageWrapper.importImgByURL(url, needEditingApp);\n    }\n    public onClickAppendApp(appType: string) {\n        this.app.implementation.imageWrapper.appendApp(appType);\n    }\n    public onClickDownload() {\n        this.app.implementation.commonProcess.downloadImage();\n    }\n    public onToggleInteractionMode() {\n        this.app.implementation.commonProcess.toggleInteractionMode();\n    }\n}\n","import { ProcessorType  } from '../../../lib';\nimport { ImageWrapper } from '..';\nexport class View {\n    public imageWrapper: ImageWrapper;\n    public imgOrigin: HTMLImageElement;\n    private _img: HTMLImageElement;\n    public widthOrigin = 0;\n    public heightOrigin = 0;\n    public divImg: HTMLElement;\n\n    constructor(imageWrapper: ImageWrapper) {\n        this.imageWrapper = imageWrapper;\n\n    }\n    public updateSizeDiv(v: number) {\n        if (this.imageWrapper.implementation.app.modelController.processorType === ProcessorType.Img) {\n            this.divImg.style.width = `${v}%`;\n        }\n    }\n    public resetImageSize() {\n        this.imgOrigin.width = this.widthOrigin;\n        this.imgOrigin.height = this.heightOrigin;\n    }\n    public initDivForImgModified(img: HTMLImageElement) {\n        this.widthOrigin = img.width;\n        this.heightOrigin = img.height;\n        // this.img.style.objectFit = 'none';\n\n        // img.style.width = '100%';\n        // img.style.height = '100%';\n        this.imgOrigin.style.maxWidth = '100%';\n        this.imgOrigin.style.maxHeight = '100%';\n\n        // margin: auto;\n        // display: block;\n\n        // this.expressImageData.paramCropping.x = 10;\n        // this.expressImageData.paramCropping.y = 10;\n\n        // this.img.style.position = 'absolute';\n        // this.img.style.zIndex = '-1';\n        // this.img.style.overflow = 'hidden';\n        // this.img.style.textAlign = 'center';\n        // if (this.implementation.appImageCropping) {\n        //     this.implementation.appImageCropping.initImageByImg(val as HTMLImageElement);\n        // }\n        // if (this.implementation.appImageAnno) {\n        //     this.implementation.appImageAnno.updateImage(val as HTMLImageElement);\n        // }\n        const divImgContainer = document.createElement('div');\n        divImgContainer.style.textAlign = 'center';\n        divImgContainer.style.display = 'flex';\n        divImgContainer.style.justifyContent = 'center';\n        this.imageWrapper.implementation.app.modelController.div.append(divImgContainer);\n\n        const divImg = document.createElement('div');\n        // divCenter.style.textAlign = 'center';\n        divImg.id = 'divImg'\n        divImg.style.width = '50%';\n        divImg.style.display = 'flex';\n        divImg.style.justifyContent = 'center';\n        divImg.append(this.imgOrigin);\n        this.divImg = divImg;\n        divImgContainer.append(this.divImg);\n    }\n    public get img() {\n        return this._img;\n    }\n    public set img(img: HTMLImageElement) {\n        this._img = img;\n    }\n    public initDivForCSS(img: HTMLImageElement) {\n        this.widthOrigin = img.width;\n        this.heightOrigin = img.height;\n        this.img.style.objectFit = 'none';\n\n        // this.expressImageData.paramCropping.x = 10;\n        // this.expressImageData.paramCropping.y = 10;\n\n        // this.img.style.position = 'absolute';\n        // this.img.style.zIndex = '-1';\n        // this.img.style.overflow = 'hidden';\n        // this.img.style.textAlign = 'center';\n        // if (this.implementation.appImageCropping) {\n        //     this.implementation.appImageCropping.initImageByImg(val as HTMLImageElement);\n        // }\n        // if (this.implementation.appImageAnno) {\n        //     this.implementation.appImageAnno.updateImage(val as HTMLImageElement);\n        // }\n        const divImg = document.createElement('div');\n        divImg.style.textAlign = 'center';\n\n\n        divImg.append(img);\n        this.imageWrapper.implementation.app.modelController.div.append(divImg);\n\n    }\n    public updateImage(img: HTMLImageElement) {\n        this.divImg.removeChild(this.img);\n        this.img = img;\n\n        this.img.style.width = '100%';\n        this.img.style.height = '100%';\n\n\n        this.divImg.append(this.img);\n\n        // console.log('from ddd', this.img.clientWidth, this.img.clientHeight)\n        // console.log(this.img.getBoundingClientRect())\n        // console.log(this.img)\n\n    }\n    public clear() {\n        this.clearData();\n        this.clearImgElement();\n    }\n    public clearData() {\n        this.imageWrapper.dataSet.clearData();\n    }\n    public clearImgElement() {\n        if (this.img && this.divImg) {\n\n            try {\n                this.divImg.removeChild(this.img);\n                this.imageWrapper.tools.exImageViewer.destroy();\n            } catch (error) {\n                console.debug('fail to remove img and img div');\n            }\n\n        }\n    }\n\n}\n","import { FrameShapeType, FrameRatioPreset } from '../../../../lib';\nexport class ParamCropping {\n    public img: HTMLImageElement;\n    public x: number = 0;\n    public y: number = 0;\n    public width: number = 10;\n    public height: number = 10;\n    public scale: number = 1.0;\n    public rotation: number = 0.0;\n    public isCropGraphics: boolean = true;\n    public shape: FrameShapeType = FrameShapeType.Rectangle;\n    public aspectRatio: FrameRatioPreset = FrameRatioPreset.Original;\n    public toJSON() {\n        return {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            scale: this.scale,\n            rotation: this.rotation,\n            shape: this.shape,\n            aspectRatio: this.aspectRatio,\n            isCropGraphics: this.isCropGraphics,\n        };\n    }\n    public toString() {\n        return JSON.stringify(this.toJSON());\n    }\n    public update(x: number, y:number, width: number, height: number, scale: number, rotation: number, shapeType: FrameShapeType, aspectRatio: FrameRatioPreset) {\n        // debugger\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.scale = scale;\n        this.rotation = rotation;\n        this.shape = shapeType;\n        this.aspectRatio = aspectRatio;\n        // console.log(this);\n        // console.trace();\n    }\n}\n","export class ParamDrawing {\n    public scale = 1;\n    public canvas: HTMLCanvasElement;\n    private data: any;\n    public updateDrawingData(data: any) {\n        // console.trace();\n        // console.log(JSON.parse(JSON.stringify(data)).length);\n        this.data = data;\n        // console.log(this.data)\n    }\n    public toJSON() {\n        return {\n            scale : this.scale,\n            geometry: this.data\n        };\n    }\n    public updateDrawingCanvas(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n    public getDrawingCanvas() {\n        return this.canvas;\n    }\n}\n","export class ParamEffecting {\n    private data = {\n        typePreset : 'normal',\n        filters: [\n            ['blur', 0],\n            ['sepia', 0],\n            ['contrast', 1],\n            ['brightness', 1],\n            ['saturate', 1],\n            ['hue-rotate', 0]\n        ],\n        // @ts-ignore\n        tints : [],\n        inter: 1,\n    };\n    public update(d: any) {\n        // console.log('from model', d);\n        this.data.typePreset = d.typePreset;\n        this.data.filters = d.filters;\n        this.data.tints = d.tints;\n\n        // console.log('data', this);\n    }\n    // public updateTypePreset(d: any) {\n    //     console.log(d);\n    //     // this.data.typePreset = d;\n    //     // console.log(d);\n    //     // this.data.typePreset = typePreset;\n    //     // this.data.filter = filterPreset[typePreset].filter;\n    //     // this.data.tint = filterPreset[typePreset].tint;\n    // }\n    public toJSON() {\n        return {\n            typePreset: this.data.typePreset,\n            filters: this.data.filters,\n            tints: this.data.tints,\n            inter: 1,\n        };\n    }\n}\n","import {\n    FrameRatioPreset, FrameShapeType, ImageType, cutOutContextByShape, contextMergeImgDrawing,\n    getRegularPointAGSM, getRegularPointSMX, getNumberedPointSMX,\n    Environment, ExpressImageAppType\n} from '../../../lib';\nimport { ParamCropping, ParamDrawing, ParamEffecting } from './DataModelBase';\nimport { ImageWrapper } from '..';\nimport { getUUID } from '../../../../../lib/Utility/MathUtility';\n\nexport class ExpressImageData {\n    public imageWrapper: ImageWrapper;\n    public paramCropping: ParamCropping;\n    public paramEffecting: ParamEffecting;\n    public paramDrawing: ParamDrawing;\n    public typeImageCompression: ImageType = ImageType.Png;\n    private ctx: CanvasRenderingContext2D;\n    private ctxFiltered: CanvasRenderingContext2D;\n    private init = true;\n    constructor(imageWrapper: ImageWrapper) {\n        this.imageWrapper = imageWrapper;\n        this.typeImageCompression = this.imageWrapper.implementation.app.typeImageCompression;\n        this.initData();\n    }\n    public initData() {\n        this.paramCropping = new ParamCropping();\n        this.paramEffecting = new ParamEffecting();\n        this.paramDrawing = new ParamDrawing();\n\n        // console.debug(this.imageWrapper.implementation.app.param.data)\n        if (this.imageWrapper.implementation.app.param.data && this.imageWrapper.implementation.app.param.data.drawing) {\n            // console.log(this.imageWrapper.implementation.app.param.data)\n            const { geometry: geometryWithNoId } = this.imageWrapper.implementation.app.param.data.drawing;\n            const geometryWithId = geometryWithNoId.map((geom: any) => geom.id ? geom : ({ ...geom, id: getUUID() }));\n            this.paramDrawing.updateDrawingData(geometryWithId);\n            this.paramDrawing.scale = this.imageWrapper.implementation.app.param.data.drawing.scale;\n        }\n\n        if (this.imageWrapper.implementation.app.param.data && this.imageWrapper.implementation.app.param.data.effecting) {\n            const data = this.imageWrapper.implementation.app.param.data.effecting;\n            // console.log('from react', data);\n            this.paramEffecting.update(data);\n        }\n    }\n    public resetData() {\n        this.paramCropping.width = this.imageWrapper.view.widthOrigin; //this.imageWrapper.view.imgOrigin.clientWidth;\n        this.paramCropping.height = this.imageWrapper.view.heightOrigin; //this.imageWrapper.view.imgOrigin.clientHeight;\n    }\n    public updateParamCrop(x: number, y:number, width: number, height: number, scale: number, rotation: number, shapeType: FrameShapeType, aspectRatio: FrameRatioPreset) {\n        this.paramCropping.update(x, y, width, height, scale, rotation, shapeType, aspectRatio);\n    }\n    public updateEffecting(d: any) {\n        this.paramEffecting.update(d);\n    }\n    public updateDrawingData(d: any) {\n        this.paramDrawing.updateDrawingData(d);\n    }\n    public updateDrawingCanvas(canvas: HTMLCanvasElement) {\n        this.paramDrawing.updateDrawingCanvas(canvas);\n    }\n    public getDrawingCanvas() {\n        return this.paramDrawing.getDrawingCanvas();\n    }\n    public clearData() {\n        this.initData();\n    }\n    public updateData(computeImgCtx = false, appClosingBySave = false) {\n        this.dataSync(computeImgCtx, appClosingBySave);\n        return {\n            ctx: this.ctx,\n            ctxFiltered: this.ctxFiltered,\n            editing: this.paramCropping.toJSON(),\n            drawing: this.paramDrawing.toJSON(),\n            effecting: this.paramEffecting.toJSON(),\n        };\n    }\n    private dataSync(computeImgCtx = false, appClosingBySave = false) {\n        if (this.init) {\n            this.imageWrapper.implementation.app.modelController.io.emitAction('done-dataSyn@');\n            this.init = false;\n        }\n\n        // When you hit the save button after revert to original on markup env, we need to update ctx with no cropped area.\n        let isOriginalImage = false;\n        if (appClosingBySave && this.imageWrapper.tools.activeApp === ExpressImageAppType.Drawing) {\n            isOriginalImage = this.imageWrapper.tools.drawingTool.app.api.needRevertBaseImage();\n        }\n\n        const data = this.imageWrapper.tools.editingTool.app.getData(isOriginalImage);\n\n        // to update geometry properties\n        this.checkUpdateDrawingData();\n\n\n        if (computeImgCtx) {\n            this.ctx = data.ctx;\n            this.ctxFiltered = data.ctxFiltered;\n            // console.log(this.paramDrawing.toJSON());\n            // console.log(data.params.x, data.params.y)\n            // pass up the canvas context to let host app decide when/if/how to use it for exporting image files.\n            // no longer need to call toDataURL/getImageData at this level.\n            // this.ctxMerged = canvasFilter(ctxMergedData, this.paramEffecting.toJSON(), data.params.x, data.params.y);\n            let rPt = this.imageWrapper.implementation.app.param.environment === Environment.AGSM ? getRegularPointAGSM() : getRegularPointSMX();\n            let nPt = getNumberedPointSMX();\n\n            this.ctx = contextMergeImgDrawing(this.ctx, this.paramDrawing.toJSON(), this.paramDrawing.scale, data.params.x, data.params.y, this.imageWrapper.implementation.app.param.environment, rPt.path2D, nPt.path2D);\n            this.ctxFiltered = contextMergeImgDrawing(this.ctxFiltered, this.paramDrawing.toJSON(), this.paramDrawing.scale, data.params.x, data.params.y, this.imageWrapper.implementation.app.param.environment, rPt.path2D, nPt.path2D);\n\n            if (this.paramCropping.isCropGraphics) {\n                this.ctx = cutOutContextByShape(this.ctx, data.params.shape, 0, 0, data.params.width, data.params.height, false);\n                this.ctxFiltered = cutOutContextByShape(this.ctxFiltered, data.params.shape, 0, 0, data.params.width, data.params.height, false);\n            }\n        } else {\n            // this.ctxFiltered = undefined;\n            // this.ctx = undefined;\n        }\n\n        this.paramCropping.update(data.params.x, data.params.y, data.params.width, data.params.height, data.params.scale, data.params.rotationRadian, data.params.shape, data.params.aspectRatio);\n    }\n    private checkUpdateDrawingData() {\n        if (this.imageWrapper.tools.activeApp === ExpressImageAppType.Editing && this.imageWrapper.tools.editingTool.app.api.getGeometryLength() === 0 ) {\n            // this.updateDrawingData([]);\n        } else {\n            const dataDrawing = this.imageWrapper.tools.drawingTool.app.api.getDataGeometry();\n            if (dataDrawing) {\n                this.updateDrawingData(dataDrawing);\n                this.paramDrawing.scale = this.imageWrapper.tools.drawingTool.app.api.getScaleFactor();\n            }\n        }\n    }\n}\n","import { ImageTools } from '..';\nexport class DrawingTool {\n    public tools: ImageTools;\n    public app: any;\n    public revertToOriginal = false;\n    constructor(tools: ImageTools) {\n        this.tools = tools;\n    }\n    public async append() {\n        return import(`../../../../../AppImageDrawing`).then(({ AppImageDrawing, InteractionMode }) => {\n            // return import(`../../../../../AppImageDrawing`).then(({ AppImageDrawing, InteractionMode }) => {\n            this.tools.divUpdatePre();\n\n            const params: any = {\n                id : this.tools.imageWrapper.implementation.app.modelController.divHost.id,\n                UI : this.tools.imageWrapper.implementation.app.param.ui,\n                interactionMode: InteractionMode.Drawing,\n                config: {\n                    BASE_URL : '',\n                },\n                environment: this.tools.imageWrapper.implementation.app.param.environment,\n                themeUI: this.tools.imageWrapper.implementation.app.modelController.theme.themeData,\n            };\n\n            // for revert to original\n            if (this.revertToOriginal) {\n                this.tools.imageWrapper.dataSet.paramDrawing.updateDrawingData([]);\n                this.revertToOriginal = false;\n            }\n            const geo = this.tools.imageWrapper.dataSet.paramDrawing.toJSON();\n            // console.log(geo);\n            // console.log('init', this.tools.imageWrapper.dataSet.paramDrawing.getDrawingData())\n            this.app = new AppImageDrawing(params, geo);\n            this.app.updateEffecting(this.tools.imageWrapper.dataSet.paramEffecting.toJSON());\n            this.app.emitAction = (data: any) => {\n                this.from(data);\n            };\n            this.app.initImageByImg(\n                this.tools.imageWrapper.implementation.imageWrapper.view.img,\n                this.tools.imageWrapper.implementation.imageWrapper.dataSet.paramCropping.toString(),\n                this.tools.imageWrapper.implementation.imageWrapper.view.imgOrigin,\n                this.tools.imageWrapper.implementation.app.param.colorCover,\n                );\n\n        }).catch((err) => {\n            console.debug('Stop loading Image Editing App.');\n            console.debug(err);\n            throw err;\n        });\n    }\n    public from(dataIn: any) {\n        const index = dataIn.indexOf(this.tools.delimiter);\n        const action = index < 0 ? [dataIn] : [dataIn.substring(0, index), dataIn.substring(index + 1, dataIn.length)];\n        let param;\n        // console.log('from drawing', dataIn);\n        // console.trace()\n        // console.log('action', action[0], action[1]);\n        switch (action[0]) {\n            case 'set-drawing-mode':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'update-container-size':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'destroy':\n                this.tools.appDestroy();\n                return; // we do not need to update any info from the drawing tool\n            case 'ready':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'select-shapes':\n                // console.log(dataIn)\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'history':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'update':\n                this.tools.imageWrapper.dataSet.updateDrawingData(JSON.parse(action[1]));\n                break;\n            case 'remove':\n                this.updateGeomData();\n                break\n            case 'add':\n                this.updateGeomData();\n                break;\n            case 'update-cropping':\n                param = JSON.parse(action[1]);\n                // console.log('update-cropping', param);\n                this.updateCropping(param);\n                break;\n            case 'update-effecting':\n                param = JSON.parse(action[1]);\n                // console.log('update-effecting', param);\n                this.tools.imageWrapper.dataSet.updateEffecting(param)\n                break;\n            case 'transform':\n                // console.trace()\n                this.updateGeomData();\n                break;\n            default:\n                break;\n        }\n        // console.log('update', this.tools.imageWrapper.dataSet.paramDrawing.getDrawingData())\n    }\n    private updateCropping(param: any) {\n        this.tools.imageWrapper.dataSet.updateParamCrop (\n            param.x, param.y, param.width, param.height, param.scale, param.rotation, param.shape, param.aspectRatio\n        );\n        this.tools.editingTool.app.api.updateFrameParam (\n            param.x, param.y, param.width, param.height, param.scale, param.rotation, param.shape, param.aspectRatio\n        );\n        this.tools.imageWrapper.implementation.app.modelController.io.emitAction(`ready@update-div-size`);\n    }\n    private updateGeomData() {\n        const dataGeo = this.app.api.getAllGeometries();\n        const dataScale = this.app.api.getScaleFactor();\n        // console.log('updateGeomData',dataGeo)\n        this.tools.imageWrapper.dataSet.paramDrawing.updateDrawingData(dataGeo);\n        this.tools.imageWrapper.dataSet.paramDrawing.scale = dataScale;\n        // console.log(this.tools.imageWrapper.dataSet.paramDrawing.scale)\n        this.tools.imageWrapper.dataSet.updateDrawingCanvas(this.app.api.getCanvas());\n        // console.log(this.tools.imageWrapper.dataSet);\n        // console.trace();\n    }\n}\n","import { ProcessorType, ExpressImageAppType } from '../../../../lib';\nimport { ImageTools } from '..';\nexport class EditingTool {\n    public tools: ImageTools;\n    public app: any;\n    constructor(tools: ImageTools) {\n        this.tools = tools;\n    }\n    public async append(expressImageAppType = ExpressImageAppType.Editing) {\n        return import(`../../../../../AppImageEditing`).then(({ AppImageEditing }) => {\n            this.tools.divUpdatePre();\n\n            // this.tools.imageWrapper.implementation.imageWrapper.view.resetImageSize();\n            // console.log(this.tools.imageWrapper.implementation.app.modelController.theme.themeData);\n            const params: any = {\n                id: this.tools.imageWrapper.implementation.app.modelController.divHost.id,\n                UI: this.tools.imageWrapper.implementation.app.param.ui,\n                theme: this.tools.imageWrapper.implementation.app.param.ui ? this.tools.imageWrapper.implementation.app.modelController.theme.themeData : undefined,\n                environment: this.tools.imageWrapper.implementation.app.param.environment,\n            };\n\n            this.app = new AppImageEditing(params);\n            if (this.tools.imageWrapper.implementation.app.param.colorCover) {\n                this.app.coverColor = this.tools.imageWrapper.implementation.app.param.colorCover;\n            }\n            this.app.api.setTypeImageCompression = this.tools.imageWrapper.implementation.app.typeImageCompression;\n            this.app.emitAction = (data: any) => {\n                this.from(data);\n            }\n            if (expressImageAppType === ExpressImageAppType.Effecting) {\n                this.app.api.activateEffectEnv('markup')\n            }\n            // this.app.pushDrawingData(this.tools.imageWrapper.dataSet.paramDrawing.getDrawingData());\n\n            // console.log(this.tools.imageWrapper.dataSet.paramDrawing.getDrawingData())\n\n            // const drawingCanvas = this.tools.imageWrapper.dataSet.getDrawingCanvas();\n            // console.log(drawingCanvas);\n            // this.app.pushCanvasDrawing(drawingCanvas);\n\n            // const exv = new ExpressImageViewer(this.app.core.canvas.canvas, param.width, param.height)\n            // console.log(exv);\n            // exv.updateGeometry(\n            //     this.tools.imageWrapper.dataSet.paramDrawing.data\n            // )\n            const geo = this.tools.imageWrapper.implementation.imageWrapper.dataSet.paramDrawing.toJSON();\n            // console.log(geo)\n            if (geo.geometry) {\n                // console.log('geo from data model to editing env' , geo)\n                this.app.pushDrawingData(geo.geometry);\n                this.app.setScaleGlobal(geo.scale)\n\n            }\n\n            this.app.initImageByImg(this.tools.imageWrapper.implementation.imageWrapper.view.imgOrigin);\n\n            this.app.api.initEffect(this.tools.imageWrapper.implementation.imageWrapper.dataSet.paramEffecting.toJSON());\n            // if (this.tools.imageWrapper.implementation.imageWrapper.dataSet.paramCropping.isModified) {\n            const param = this.tools.imageWrapper.implementation.imageWrapper.getParamCrop();\n            // console.log('param init', param);\n            this.app.api.initFrame(param.x, param.y, param.width, param.height, param.scale, param.rotation, param.shape, param.aspectRatio);\n            // }\n        }).catch((err) => {\n            console.debug('Stop loading Image Editing App.');\n            console.debug(err);\n            throw err;\n        });\n    }\n    public from(dataIn: any) {\n        const index = dataIn.indexOf(this.tools.delimiter);\n        const action = index < 0 ? [dataIn] : [dataIn.substring(0, index), dataIn.substring(index + 1, dataIn.length)];\n        let data;\n\n        // console.log('dataIn', dataIn);\n        // console.trace();\n\n        switch (action[0]) {\n            case 'destroy':\n                this.tools.appDestroy();\n                break;\n            case 'update-container-size':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'post-update':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction('post-update@');\n                break;\n            case 'ready':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                break;\n            case 'filter':\n                data = JSON.parse(action[1]);\n                this.tools.imageWrapper.dataSet.paramEffecting.update(data);\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(`filter@${data.typePreset}`);\n                break;\n            case 'history':\n                this.tools.imageWrapper.implementation.app.modelController.io.emitAction(dataIn);\n                this.tools.imageWrapper.dataSet.paramDrawing.updateDrawingData(this.app.api.getDrawing());\n                break\n            case 'update':\n                data = JSON.parse(action[1]);\n                // console.log('update',data);\n                // console.trace();\n                this.update(data);\n                break;\n            case 'update-geometry':\n                this.tools.imageWrapper.dataSet.updateDrawingData(JSON.parse(action[1]));\n                break\n            default:\n                break;\n        }\n\n    }\n    private update(data: any) {\n        this.tools.imageWrapper.dataSet.updateEffecting(data.filter);\n        const cropData = data.crop\n        switch (this.tools.imageWrapper.implementation.app.modelController.processorType) {\n            case ProcessorType.Css:\n                this.tools.imageWrapper.implementation.imageWrapper.updateImgCropByCSS(cropData.x, cropData.y, cropData.width, cropData.height, cropData.scale, cropData.rotation, cropData.shape, cropData.aspectRatio);\n                break;\n            // default:\n            //     this.tools.imageWrapper.implementation.imageWrapper.updateImgCrop(cropData.x, cropData.y, cropData.width, cropData.height, cropData.scale, cropData.rotation,  cropData.shape, cropData.aspectRatio);\n            //     break;\n            default:\n                const img = this.tools.editingTool.app.getImage();\n                this.tools.imageWrapper.implementation.imageWrapper.updateImgCropByImg(img, cropData.x, cropData.y, cropData.width, cropData.height, cropData.scale, cropData.rotation, cropData.shape, cropData.aspectRatio);\n                break;\n        }\n\n        this.tools.exImageViewer.updateCanvasSize(200, 200);\n        this.tools.imageWrapper.updateDrawing();\n    }\n}\n","import { ImageTools } from '..';\nexport class ExImageViewer {\n    public tools: ImageTools;\n    public app: any | undefined = undefined;;\n    public renderScale = 1.0;\n    constructor(tools: ImageTools) {\n        this.tools = tools;\n    }\n    public async append(divImg: HTMLElement, width: number, height: number) {\n        return import(`../../../../../ExpressImageViewer`).then(({ ExpressImageViewer }) => {\n            this.app = new ExpressImageViewer(divImg, width, height);\n        }).catch((err) => {\n            console.debug('Stop loading Image Effecting App.');\n            console.debug(err);\n            throw err;\n        });\n    }\n    public from(dataIn: any) {\n        const index = dataIn.indexOf(this.tools.delimiter);\n        const action = index < 0 ? [dataIn] : [dataIn.substring(0, index), dataIn.substring(index + 1, dataIn.length)];\n        console.log(index, action);\n    }\n    public updateCanvasSize(width: number, height: number) {\n        this.app.updateCanvasSize(width, height);\n    }\n    public updateDrawing() {\n        if (!this.app) { return; }\n        // const imgWrapper = this.tools.imageWrapper;\n        // const width = imgWrapper.view.img.clientWidth === 0 ? imgWrapper.dataSet.paramCropping.width : imgWrapper.view.img.clientWidth;\n        // const height = imgWrapper.view.img.clientHeight === 0 ? imgWrapper.dataSet.paramCropping.height : imgWrapper.view.img.clientHeight;\n        // this.app.updateScale(this.renderScale);\n        // this.app.updateCanvasSize(width, height);\n        // this.app.updateExtent(imgWrapper.dataSet.paramCropping, imgWrapper.view.divImg.clientWidth, imgWrapper.view.divImg.clientHeight);\n        // this.app.updateGeometry(imgWrapper.dataSet.paramDrawing.data);\n    }\n    public destroy() {\n        this.app.destroy();\n    }\n}\n","import { ExpressImageAppType , Environment} from '../../../lib'\nimport { DrawingTool } from './Drawing';\nimport { EditingTool } from './Editing';\nimport { ExImageViewer } from './ExImageViewer';\nimport { ImageWrapper } from '..';\nexport class ImageTools {\n    public imageWrapper: ImageWrapper;\n    public drawingTool: DrawingTool;\n    public editingTool: EditingTool;\n    public exImageViewer: ExImageViewer;\n    public delimiter = '@';\n    public activeApp = ExpressImageAppType.Editing;\n    constructor(imageWrapper: ImageWrapper) {\n        this.imageWrapper = imageWrapper;\n        this.drawingTool = new DrawingTool(this);\n        this.editingTool = new EditingTool(this);\n        this.exImageViewer = new ExImageViewer(this);\n    }\n    public appDestroy() {\n        this.divUpdatePost();\n    }\n    public divUpdatePre() {\n        this.imageWrapper.implementation.app.modelController.div.style.display = 'none';\n    }\n    public divUpdatePost() {\n        if (this.imageWrapper.implementation.app.environment === Environment.Standalone) {\n            this.imageWrapper.implementation.app.modelController.div.style.display = 'block';\n        }\n        this.imageWrapper.resizeByWindow();\n    }\n    public appendApp(appType: string) {\n        switch (appType.toLowerCase()) {\n            case ExpressImageAppType.Effecting:\n                this.editingTool.append(ExpressImageAppType.Effecting);\n                this.activeApp = ExpressImageAppType.Editing;\n                break;\n            case ExpressImageAppType.Editing:\n                this.editingTool.append();\n                this.activeApp = ExpressImageAppType.Editing;\n                break;\n            case ExpressImageAppType.Drawing:\n                this.drawingTool.append();\n                this.activeApp = ExpressImageAppType.Drawing;\n                break;\n            case ExpressImageAppType.Viewer:\n                this.exImageViewer.append(this.imageWrapper.view.divImg, this.imageWrapper.view.imgOrigin.clientWidth, this.imageWrapper.view.imgOrigin.clientHeight);\n                break;\n            default:\n                break;\n        }\n    }\n    public updateEnvironment(v: Environment) {\n        if (this.editingTool.app !== undefined) {\n            this.editingTool.app.api.shiftEnvironment(v);\n        }\n        if (this.drawingTool.app !== undefined) {\n            this.drawingTool.app.api.shiftEnvironment(v);\n        }\n    }\n}\n","import { Implementation } from '..';\nimport { importImage, ProcessorType, ExpressImageAppType, InteractionMode, FrameShapeType, FrameRatioPreset, Environment } from '../../lib'\nimport { View } from './View';\nimport { ExpressImageData } from './ExpressImageData';\nimport { ImageTools } from './Tools';\n\nexport class ImageWrapper {\n    public implementation: Implementation;\n    public view: View;\n    public dataSet: ExpressImageData;\n    public tools: ImageTools;\n    constructor(implementation: Implementation) {\n        this.implementation = implementation;\n        this.tools = new ImageTools(this);\n        this.view = new View(this);\n        this.dataSet = new ExpressImageData(this);\n    }\n    public async importImgByURL(url: string = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg', needEditingApp: boolean = false) {\n        this.view.clear();\n        const imgOrigin = await importImage(url) as HTMLImageElement;\n        this.view.imgOrigin = imgOrigin;\n        this.view.img = imgOrigin;\n\n        switch (this.implementation.app.modelController.processorType) {\n            case ProcessorType.Css:\n                this.view.initDivForCSS(this.view.imgOrigin);\n                break;\n            default:\n                // TEMP HACK: this will allow re-editing image FIXME:\n                try {\n                    this.view.initDivForImgModified(this.view.imgOrigin);\n                } catch(e) {\n                    console.log('importImgByURL->initDivForImgModified', e)\n                    return\n                }\n                this.tools.appendApp(ExpressImageAppType.Viewer);\n                break;\n        }\n        this.dataSet.resetData();\n        if (needEditingApp) {\n            this.tools.editingTool.append();\n        }\n        if (this.implementation.app.param.data) {\n            // console.debug(' data binding needed', this.implementation.app.param.data);\n            // console.log(this.implementation.app.param.data);\n\n            if (this.implementation.app.param.data.editing) {\n                const data = this.implementation.app.param.data.editing;\n                this.dataSet.updateParamCrop(data.x, data.y, data.width, data.height, data.scale, data.rotation, data.shape as FrameShapeType, data.aspectRatio);\n            }\n\n            // if (this.implementation.app.param.data.drawing) {\n            //     const data = this.implementation.app.param.data.drawing;\n            //     this.dataSet.updateDrawingData(data);\n\n            // }\n\n        }\n    }\n    public getData(computeImgCtx = false, appClosingBySave = false) {\n        const dataOut = this.tools.imageWrapper.dataSet.updateData(computeImgCtx, appClosingBySave);\n        // console.debug('dataOut', dataOut);\n        return dataOut;\n    }\n    public getParamCrop() {\n        return this.dataSet.paramCropping;\n    }\n    public updateImgCropByImg(img: HTMLImageElement, x: number, y:number, width: number, height: number, scale: number, rotation: number, shapeType: FrameShapeType, aspectRatio: FrameRatioPreset) {\n        this.dataSet.updateParamCrop(x, y, width, height, scale, rotation, shapeType, aspectRatio);\n        this.view.updateImage(img);\n\n    }\n    public updateImgCropByCSS(x: number, y:number, width: number, height: number, scale: number, rotation: number, shapeType: FrameShapeType, aspectRatio: FrameRatioPreset) {\n        this.dataSet.updateParamCrop(x, y, width, height, scale, rotation, shapeType, aspectRatio);\n\n        this.view.img.style.objectPosition = `${-this.dataSet.paramCropping.x}px ${-this.dataSet.paramCropping.y}px `;\n        const transform =  `scale(${scale}) rotate(${(rotation * 180 / Math.PI)}deg)`;\n        this.view.img.style.transform = transform;\n\n        this.view.img.width = this.dataSet.paramCropping.width;\n        this.view.img.height = this.dataSet.paramCropping.height;\n        // console.log('this.view.img.style');\n        // console.log(this.view.img.style);\n        // console.log(this.view.img, scale, rotation, transform);\n    }\n    public updateImgCrop(x: number, y:number, width: number, height: number, scale: number, rotation: number, shapeType: FrameShapeType, aspectRatio: FrameRatioPreset) {\n        this.dataSet.updateParamCrop(x, y, width, height, scale, rotation, shapeType, aspectRatio);\n    }\n    public updateEnvironment(v: Environment) {\n        this.tools.updateEnvironment(v);\n    }\n    public toJSON() {\n        return JSON.stringify(this.dataSet.paramCropping);\n    }\n    public resizeByWindow() {\n        this.updateDrawing();\n    }\n    public updateSizeDiv(v: number) {\n        this.view.updateSizeDiv(v);\n        // console.log(v);\n        if(v < 30) {\n            this.tools.exImageViewer.renderScale = 0.5;\n        } else if (v > 80) {\n            this.tools.exImageViewer.renderScale = 1.2;\n        } else {\n            this.tools.exImageViewer.renderScale = 1.0;\n        }\n\n        this.updateDrawing();\n    }\n    public updateDrawing() {\n        this.tools.exImageViewer.updateDrawing();\n    }\n    public appendApp(appType: string) {\n        this.tools.appendApp(appType);\n    }\n    public updateViewMode(mode: InteractionMode = InteractionMode.Drawing) {\n        this.tools.exImageViewer.app.updateMode(mode);\n    }\n    public destroy() {\n        this.tools.drawingTool.app.destroy();\n        this.tools.editingTool.app.destroy();\n        // this.tools.effectingTool.app?.destroy();\n    }\n}\n","import { InteractionMode, canvasMergeImg, downloadImage } from '../../lib';\nimport { Implementation } from '..';\nexport class CommonProcess {\n    public implementation: Implementation;\n    constructor(implementation: Implementation) {\n        this.implementation = implementation;\n\n    }\n    public downloadImage() {\n        let canvasSaving = this.implementation.imageWrapper.tools.exImageViewer.app.getCanvas();\n        let img = this.implementation.imageWrapper.tools.editingTool.app.getImage();\n        if (canvasSaving) {\n\n            let imgSaving = new Image();\n            // imgSaving = this.implementation.imageWrapper.view.img;\n            imgSaving = img;\n            // imgSaving.style.width = '100px'; // canvasSaving.width;\n            // imgSaving.style.height = '100px'; //canvasSaving.height;\n            // console.log(this.implementation.imageWrapper.view.img);\n\n            img = canvasMergeImg(imgSaving, canvasSaving, imgSaving.width, imgSaving.height);\n        }\n\n        downloadImage(img);\n    }\n    public toggleInteractionMode() {\n        if (this.implementation.imageWrapper.tools.exImageViewer.app) {\n            if (this.implementation.imageWrapper.tools.exImageViewer.app.renderer.mode === InteractionMode.InteractiveViewer) {\n                this.implementation.imageWrapper.tools.exImageViewer.app.renderer.mode = InteractionMode.ObserveViewer;\n            } else {\n                this.implementation.imageWrapper.tools.exImageViewer.app.renderer.mode = InteractionMode.InteractiveViewer;\n            }\n        }\n    }\n}\n\n","import { ImageWrapper } from './ImageWrapper';\nimport { CommonProcess } from './CommonProcess';\nimport { ExpressImageApp } from '..';\nexport class Implementation {\n  public app: ExpressImageApp;\n  public commonProcess: CommonProcess;\n  public imageWrapper: ImageWrapper;\n  constructor(app: ExpressImageApp) {\n    this.app = app;\n    this.commonProcess = new CommonProcess(this);\n    this.imageWrapper = new ImageWrapper(this);\n  }\n}","import { ExpressImageAppType, ActionType, delimiter, ActiveCommandMode } from '../../../lib';\nimport { IO } from '..';\nexport class StateProcessing {\n  public io: IO;\n  constructor(io: IO) {\n    this.io = io;\n  }\n  public pushAction(actionIn: string ) {\n    const index = actionIn.indexOf(delimiter);\n    const action = index < 0 ? [actionIn] : [actionIn.substring(0, index), actionIn.substring(index + 1, actionIn.length)];\n    const param = action[1];\n\n    switch (action[0]) {\n      case 'style':\n        // // eslint-disable-next-line no-case-declarations\n        // const obj = JSON.parse(action[1]);\n        // this.io.imageAnnoApp.geometryCommon.gcmdProcessing.updateStyleCustom(obj);\n        break;\n      case 'activateApp':\n        this.io.controller.app.api.onClickAppendApp(param);\n        break;\n      case 'destroyApp':\n        this.destroyApp(param as ExpressImageAppType);\n        break;\n      case ActionType.SetDrawingMode:\n        const command = action[0] + '@';\n        // console.log(command, param);\n        this.setDrawingMode(param as ActiveCommandMode, command);\n        break;\n      default:\n        break;\n    }\n  }\n  private destroyApp(param: ExpressImageAppType) {\n    switch (param) {\n      case ExpressImageAppType.Drawing:\n        this.io.controller.app.api.destroyDrawing();\n        break;\n      case ExpressImageAppType.Editing:\n        this.io.controller.app.api.destroyEditing();\n        break;\n      default:\n        break;\n    }\n  }\n  private setDrawingMode(param: ActiveCommandMode, command: string) {\n    switch (param) {\n      case ActiveCommandMode.SELECT:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.SELECT);\n        break;\n      case ActiveCommandMode.POINT_REGULAR:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.POINT_REGULAR);\n        break;\n      case ActiveCommandMode.POINT_NUMBERED:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.POINT_NUMBERED);\n        break;\n      case ActiveCommandMode.POLYLINE_BENDING:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.POLYLINE_BENDING);\n        break;\n      case ActiveCommandMode.FREEHAND_POLYLINE_BENDING:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.FREEHAND_POLYLINE_BENDING);\n        break;\n      case ActiveCommandMode.POLYGON:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.POLYGON);\n        break;\n      case ActiveCommandMode.FREEHAND_POLYGON:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.FREEHAND_POLYGON);\n        break;\n      case ActiveCommandMode.RECTANGLE:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.RECTANGLE);\n        break;\n      case ActiveCommandMode.CIRCLE:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.CIRCLE);\n        break;\n      case ActiveCommandMode.ARROW_SINGLE:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.ARROW_SINGLE);\n        break;\n      case ActiveCommandMode.ARROW_DOUBLE:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.ARROW_DOUBLE);\n        break;\n      case ActiveCommandMode.TEXT_LEADERLINE:\n        this.io.controller.app.api.setDrawingMode(command + ActiveCommandMode.TEXT_LEADERLINE);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export { ActiveCursor } from '../../../lib/Utility/CursorUtility';\nexport {\n    cutOutContextByShape,\n    canvasMergeImg,\n    downloadImage,\n} from '../../../lib/Utility/CanvasUtility';\nexport { process_image } from '../../../lib/Color/DominantColor';\nexport { importImage } from '../../../lib/Color/ColorUtility';\nexport { getBtnBySVGPath } from '../../../lib/Utility/HTMLUtility';\nexport {\n    rgb2hsl, hsl2rgb,\n    renderVertex, distance,\n    linearColorInterpolation,\n} from '../../AppImageEditing/lib';\nexport {\n    ImageType,\n    ProcessorType,\n    FrameShapeType,\n    FrameRatioPreset,\n    ExpressImageAppType,\n    Environment,\n} from '../../../lib/Enum/EnumExpressImage';\nexport {\n    contextMergeImgDrawing\n} from '../../../lib/Utility/DrawingPresetExpressImage';\nexport const delimiter: string = '@';\nexport {\n    InteractionMode,\n    ActionType,\n} from '../../../lib/Enum/EnumCommon';\nexport {\n    GType,\n    ActiveCommandMode,\n} from '../../../lib/Enum/EnumPersisted';\nexport {\n    filterPreset,\n} from '../../../lib/Color/FilterPreset';\nexport {\n    getRegularPointAGSM,\n    getRegularPointSMX,\n    getNumberedPointSMX,\n    importPointAssets,\n} from '../../../lib/Utility/SVGUtility';\nexport type {\n    ISVGPackageForCanvas\n} from '../../../lib/Utility/SVGUtility';\n export const dummyDataDrawing = [\n    {\n        'id': 'bb907e40-9274-4768-89ac-5f98d6dd8854',\n        'type': 'polylineBending',\n        // 'isSelected': false,\n        // 'isOver': false,\n        // 'isHidden': false,\n        'nodes': [{\n            'sx': 255.00121000000038,\n            'sy': 90.00121000000038,\n            'sz': 0\n        }, {\n            'sx': 368.0008099999991,\n            'sy': 105.00081000000026,\n            'sz': 0\n        }, {\n            'sx': 481.00120999999695,\n            'sy': 120.00121000000038,\n            'sz': 0\n        }, {\n            'sx': 518.000404999999,\n            'sy': 202.00040500000011,\n            'sz': 0\n        }, {\n            'sx': 555,\n            'sy': 284,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0]\n        }\n    }, {\n        'id': '8ecce524-e7d0-4031-8ec1-35b1da447ead',\n        'type': 'POLYGON_GRAPH',\n        'isSelected': false,\n        'isOver': false,\n        'isHidden': false,\n        'nodes': [{\n            'sx': 423,\n            'sy': 182,\n            'sz': 0\n        }, {\n            'sx': 345,\n            'sy': 176,\n            'sz': 0\n        }, {\n            'sx': 274,\n            'sy': 214,\n            'sz': 0\n        }, {\n            'sx': 310,\n            'sy': 249,\n            'sz': 0\n        }, {\n            'sx': 426,\n            'sy': 279,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0],\n            'fill': [0, 0, 0, 0]\n        }\n    }, {\n        'id': 'cb110056-14b1-44c8-a35c-1a4832775148',\n        'type': 'POINT_REGULAR',\n        'isSelected': false,\n        'isOver': false,\n        'isHidden': false,\n        'nodes': [{\n            'sx': 365,\n            'sy': 144,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0],\n            'url': '/static/storymaps-xgraphics/images/theme-assets/common/unnumbered-pin.svg'\n        }\n    }, {\n        'id': 'c5d3bdce-eceb-46a7-a850-b5cbfd0f68ac',\n        'type': 'POINT_NUMBERED',\n        'isSelected': false,\n        'isOver': false,\n        'isHidden': false,\n        'nodes': [{\n            'sx': 468,\n            'sy': 212,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0]\n        }\n    }, {\n        'id': '904a0d6d-34f5-4a5b-a271-33d9f72ccf4e',\n        'type': 'CIRCLE',\n        'isSelected': false,\n        'isOver': false,\n        'isHidden': false,\n        'nodes': [{\n            'sx': 92.00034000000011,\n            'sy': 155.0003400000001,\n            'sz': 0\n        }, {\n            'sx': 220.0003400000001,\n            'sy': 155.0003400000001,\n            'sz': 0\n        }, {\n            'sx': 220.0003400000001,\n            'sy': 283.0003399999996,\n            'sz': 0\n        }, {\n            'sx': 92,\n            'sy': 283,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0],\n            'fill': [0, 0, 0, 0]\n        }\n    }, {\n        'id': '9db38e49-72a4-4db9-967e-ec611b1c5f81',\n        'type': 'RECTANGLE',\n        'isSelected': false,\n        'isOver': false,\n        'isHidden': false,\n        'nodes': [{\n            'sx': 533.0001399999996,\n            'sy': 60.000140000000044,\n            'sz': 0\n        }, {\n            'sx': 653.0001399999996,\n            'sy': 60.000140000000044,\n            'sz': 0\n        }, {\n            'sx': 653.0001399999996,\n            'sy': 180.00014000000004,\n            'sz': 0\n        }, {\n            'sx': 533.0001399999996,\n            'sy': 180.00014000000004,\n            'sz': 0\n        }],\n        'data': {},\n        'styles': {\n            'width': 2,\n            'scale': 1,\n            'colorRgba': [0, 0, 0, 0],\n            'fill': [0, 0, 0, 0]\n        }\n    }\n];\n","import { ExpressImageAppType, FrameShapeType, FrameRatioPreset, ActionType,  } from '../../lib';\nimport { StateProcessing } from './StateProcessing';\nimport { ModelController } from '..';\nexport class IO {\n    public controller: ModelController;\n    public stateProcessing: StateProcessing;\n    private init = true;\n    constructor(controller: ModelController) {\n        this.controller = controller;\n        this.stateProcessing = new StateProcessing(this);\n\n    }\n    public emitAction(data: any) {\n        // console.log(data);\n        // console.trace();\n\n        // Once the app fully updated, we hijack the history stack in order to post-update of app.\n        if (this.init && data.split('@')[0] === 'post-update') {\n            this.init = false;\n            this.controller.app.postUpdate();\n\n            if (this.controller.app.param.appDefault === ExpressImageAppType.Editing) {\n                this.controller.app.emitAction('update-container-size@original');\n            } else {\n                this.controller.app.emitAction('update-container-size@');\n            }\n        }\n\n        this.controller.app.emitAction(data);\n    }\n    public pushAction(app: any, command: any, parameter: any) {\n        // console.log('=========================');\n        // console.log('pushAction', app, command, parameter );\n\n        this.switchEnvironment(app, parameter);\n\n        if (app === 'markup' && command === 'set-drawing-mode') {\n            this.stateProcessing.pushAction(ActionType.SetDrawingMode + '@' + parameter);\n        }\n\n        if (app === 'markup' && command) {\n            this.pushActionMarkup(command, parameter);\n        }\n\n        if ((app === 'crop' || app === 'filter') && command) {\n            this.pushActionCropFilter(command, parameter);\n        }\n    }\n    private switchEnvironment(app: any, parameter: any) {\n        if ((app === 'crop' && parameter === 'markup') || (app === 'filter' && parameter === 'markup') ) {\n            // from Editing to Drawing\n\n            // check for revert original to remove all geometries\n            const len = this.controller.app.implementation.imageWrapper.tools.editingTool.app.api.getGeometryLength();\n            if (len === 0) {\n                this.controller.app.implementation.imageWrapper.tools.drawingTool.revertToOriginal = true;\n            }\n\n            this.stateProcessing.pushAction('destroyApp@' + ExpressImageAppType.Editing);\n            this.stateProcessing.pushAction('activateApp@' + ExpressImageAppType.Drawing);\n            // this.stateProcessing.io.controller.app.api.deactivateEffectEnv();\n        }\n\n        if (app === 'markup' && parameter === 'crop') {\n            // from Drawing to Editing\n            this.stateProcessing.pushAction('destroyApp@' + ExpressImageAppType.Drawing);\n            this.stateProcessing.pushAction('activateApp@' + ExpressImageAppType.Editing);\n        } else if (app === 'filter' && parameter === 'crop') {\n            this.stateProcessing.io.controller.app.api.deactivateEffectEnv();\n        }\n\n        if (parameter === 'filter') {\n            if (app === 'crop') {\n                this.stateProcessing.io.controller.app.api.activateEffectEnv();\n            } else if (app === 'markup') {\n                this.stateProcessing.pushAction('destroyApp@' + ExpressImageAppType.Drawing);\n                this.stateProcessing.pushAction('activateApp@' + ExpressImageAppType.Effecting);\n                // this.stateProcessing.io.controller.app.api.activateEffectEnv();\n            }\n\n        }\n    }\n    // This pushAction fn is the same pipeline for both apps : filter and crop.\n    private pushActionCropFilter(command: any, parameter: any) {\n        switch (command) {\n            case 'undo':\n                this.controller.app.api.undo(ExpressImageAppType.Editing);\n                break;\n            case 'redo':\n                this.controller.app.api.redo(ExpressImageAppType.Editing);\n                break;\n            case 'shape':\n                this.controller.app.api.shiftShape(parameter as FrameShapeType);\n                break;\n            case 'aspect-ratio':\n                this.controller.app.api.shiftShapeRatio(parameter as FrameRatioPreset);\n                break;\n            case 'revert-to-original':\n                this.controller.app.api.revertToOriginal(ExpressImageAppType.Editing);\n                break;\n            case 'set-filter-preset':\n                this.controller.app.api.shiftFilterPreset(parameter);\n                break;\n            default:\n                break;\n        }\n    }\n    private pushActionMarkup(command: any, parameter: any) {\n        switch (command) {\n            case 'init-scale':\n                this.controller.app.api.setScaleGraphics(+parameter, true, false);\n                break;\n            case 'set-scale':\n                this.controller.app.api.setScaleGraphics(+parameter);\n                break;\n            case 'offset-scale':\n                this.controller.app.api.setScaleGraphics(+parameter, false);\n                break;\n            case 'undo':\n                this.controller.app.api.undo(ExpressImageAppType.Drawing);\n                break;\n            case 'redo':\n                this.controller.app.api.redo(ExpressImageAppType.Drawing);\n                break;\n            case 'init-color':\n                const undoNeeded = false;\n                this.controller.app.api.setColor(ExpressImageAppType.Drawing, parameter, undoNeeded);\n                break;\n            case 'set-color':\n                this.controller.app.api.setColor(ExpressImageAppType.Drawing, parameter);\n                break;\n            case 'revert-to-original':\n                this.controller.app.api.revertToOriginal(ExpressImageAppType.Drawing);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { ModelController } from '..';\nexport class Theme {\n    public modelController: ModelController;\n    public themeData = {\n        background : 'radial-gradient(rgb(235, 235, 235), rgba(200, 200, 200, 1))',\n\n        top: {\n            iconFill: 'rgb(255, 255, 255)',\n            background: 'rgb(34, 34, 34)',\n            marginBottom: '100px',\n            padding: '25px',\n            height: '90px',\n        },\n\n        bottom: {\n            background : 'radial-gradient(rgb(235, 235, 235), rgba(200, 200, 200, 1))',\n        }\n    };\n    constructor(modelController: ModelController) {\n        this.modelController = modelController;\n\n    }\n\n}\n","import { getBtnBySVGPath, Environment } from '../../lib';\nimport { ModelController } from '..';\nexport class UI {\n    public modelController: ModelController;\n    constructor(controller: ModelController) {\n        this.modelController = controller;\n        this.init();\n    }\n    public init() {\n        let divMenu = document.createElement('div');\n        divMenu.id = 'expree-image-ui';\n        this.modelController.div.append(divMenu);\n\n        const divURL = document.createElement('input');\n        divURL.style.color = '#ffffff';\n        divURL.style.background = 'rgba(255, 255, 255,0.1)';\n        divURL.style.border = '0px';\n        divURL.style.margin = '2px';\n        // divURL.textContent = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.png';\n        divURL.setAttribute('type', 'text');\n        divURL.setAttribute('value', 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.png');\n        divMenu.append(divURL);\n        // divURL.oninput = () => {\n        //     // this.app.api.inputImportByURL(divURL.textContent as string);\n        // };\n        divURL.addEventListener('keyup', (event: KeyboardEvent) => {\n            if (event.keyCode === 13) { // Enter\n                if (this.modelController.app.environment === Environment.Standalone) {\n                    event.preventDefault();\n                }\n                // console.log(divURL.value as string);\n                this.modelController.app.api.onClickImportImgByURL(divURL.value);\n            }\n        });\n\n        let colorText = '#ffffff';\n\n        let divTitle = document.createElement('div');\n        divTitle.textContent = 'XGraphics Express Image App';\n        divTitle.style.fontSize = '14px';\n        divTitle.style.fontWeight = '400';\n        divTitle.style.color = '#000000';\n        // divTitle.style.fontWeight = 'bold';\n        divTitle.style.padding = '10px';\n        divMenu.append(divTitle);\n\n        let divEditing = document.createElement('div');\n        divEditing.textContent = 'Editing';\n        divEditing.style.fontSize = '12px';\n        divEditing.style.fontWeight = '400';\n        divEditing.style.color = colorText;\n        divEditing.style.width = '220px';\n        divEditing.style.padding = '5px';\n        divEditing.style.marginBottom = '10px';\n        divEditing.onclick = () => {\n            this.modelController.app.api.onClickAppendApp(`editing`);\n        };\n        divEditing.onmouseenter = () => {\n            divEditing.style.background = '#333333';\n        }\n        divEditing.onmouseleave = () => {\n            divEditing.style.background = 'rgba(0, 0, 0, 0)';\n        }\n        divMenu.append(divEditing);\n\n        let divEffecting = document.createElement('div');\n        divEffecting.textContent = 'Effecting';\n        divEffecting.style.fontSize = '12px';\n        divEffecting.style.fontWeight = '400';\n        divEffecting.style.color = colorText;\n        divEffecting.style.width = '220px';\n        divEffecting.style.padding = '5px';\n        divEffecting.style.marginBottom = '10px';\n        divEffecting.onclick = () => {\n            this.modelController.app.api.onClickAppendApp(`effecting`);\n        };\n        divEffecting.onmouseenter = () => {\n            divEffecting.style.background = '#333333';\n        }\n        divEffecting.onmouseleave = () => {\n            divEffecting.style.background = 'rgba(0, 0, 0, 0)';\n        }\n        divMenu.append(divEffecting);\n\n        let divDrawing = document.createElement('div');\n        divDrawing.textContent = 'Drawing';\n        divDrawing.style.fontSize = '12px';\n        divDrawing.style.fontWeight = '400';\n        divDrawing.style.color = colorText;\n        divDrawing.style.width = '220px';\n        divDrawing.style.padding = '5px';\n        divDrawing.style.marginBottom = '10px';\n        divDrawing.onclick = () => {\n            this.modelController.app.api.onClickAppendApp(`drawing`);\n        };\n        divDrawing.onmouseenter = () => {\n            divDrawing.style.background = '#333333';\n        }\n        divDrawing.onmouseleave = () => {\n            divDrawing.style.background = 'rgba(0, 0, 0, 0)';\n        }\n        divMenu.append(divDrawing);\n\n        let imgElementSize = document.createElement('input');\n        imgElementSize.type = 'range';\n        imgElementSize.min = '0.1';\n        imgElementSize.max = '1.0';\n        imgElementSize.step = '0.01';\n        imgElementSize.value = '0.5';\n        imgElementSize.oninput = () => {\n            this.modelController.app.api.resizeDiv(+imgElementSize.value);\n        };\n        divMenu.append(imgElementSize);\n\n\n        let colorFill = this.modelController.theme.themeData.top.iconFill;\n\n        let btn = getBtnBySVGPath(\n            () => {\n                this.modelController.app.api.onToggleInteractionMode();\n            },         `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"${colorFill}\" viewBox=\"0 0 12 32\">\n            <path fill-rule=\"evenodd\" d=\"M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5z\"/>\n            </svg>\n            `\n        )\n        btn.style.display = 'block';\n        btn.style.marginTop = '15px';\n        btn.style.transform = 'scale(2)';\n        const svg =  btn.firstElementChild as SVGElement;\n        svg.onmouseenter = () => {\n            svg.style.fill = '#333333';\n        }\n        svg.onmouseleave = () => {\n            svg.style.fill = 'rgba(255, 255, 255, 1)';\n        }\n        divMenu.append(btn);\n\n        let btnDownload = getBtnBySVGPath(\n            () => {\n                this.modelController.app.api.onClickDownload();\n            },         `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"${colorFill}\" viewBox=\"0 0 12 32\">\n            <path d=\"M8 2a5.53 5.53 0 0 0-3.594 1.342c-.766.66-1.321 1.52-1.464 2.383C1.266 6.095 0 7.555 0 9.318 0 11.366 1.708 13 3.781 13h8.906C14.502 13 16 11.57 16 9.773c0-1.636-1.242-2.969-2.834-3.194C12.923 3.999 10.69 2 8 2zm2.354 6.854-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5a.5.5 0 0 1 1 0v3.793l1.146-1.147a.5.5 0 0 1 .708.708z\"/>\n            </svg>\n            `\n        )\n        btnDownload.style.display = 'block';\n        btnDownload.style.marginTop = '15px';\n        btnDownload.style.transform = 'scale(2)';\n        const svgDownload =  btnDownload.firstElementChild as SVGElement;\n        svgDownload.onmouseenter = () => {\n            svgDownload.style.fill = '#333333';\n        }\n        svgDownload.onmouseleave = () => {\n            svgDownload.style.fill = 'rgba(255, 255, 255, 1)';\n        }\n        divMenu.append(btnDownload);\n\n    }\n\n}\n","import { ExpressImageApp } from '..';\nimport { ProcessorType, Environment } from '../lib';\nimport { IO } from './IO';\nimport { Theme } from './Theme';\nimport { UI } from './UI';\n\nexport class ModelController {\n    public app: ExpressImageApp;\n\n    public io: IO;\n    public theme: Theme;\n    public ui: UI;\n\n    public divHost: HTMLElement;\n    public div: HTMLElement;\n\n    public processorType: ProcessorType = ProcessorType.Img;\n\n    constructor(app: ExpressImageApp) {\n        this.app = app;\n        this.theme = new Theme(this);\n        const divHost = document.getElementById(this.app.param.id);\n        const div = document.createElement('div');\n        if (divHost && div) {\n            this.divHost = divHost;\n            this.div = div;\n            this.div.id = 'express-image-wrapper';\n            if(this.app.environment === Environment.Standalone) {\n                this.div.style.position = 'relative';\n                this.div.style.width = '100vw';\n                this.div.style.height = '100vh';\n            }\n            this.divHost.append(this.div);\n        }\n        this.init();\n    }\n    private init() {\n        this.io = new IO(this);\n\n        if (this.app.param.ui) {\n            this.ui = new UI(this);\n        }\n\n        // window.addEventListener('resize', this.resizeByWidow);\n    }\n    public destroy() {\n        // window.removeEventListener('resize', this.resizeByWidow);\n    }\n}\n","import { FrameShapeType, ImageType, ExpressImageAppType, ISVGPackageForCanvas, Environment, importPointAssets, } from './lib';\nimport { API } from './API';\nimport { Implementation } from './Implementation';\nimport { ModelController } from './ModelController';\nexport interface IExpressImageAppParam {\n    id: string;\n    url?: string;\n    ui?: boolean;\n    appDefault?: ExpressImageAppType;\n    colorCover?: string;\n    debug?:boolean;\n    data?: any;\n    graphicShape?: ISVGPackageForCanvas;\n    environment?: Environment;\n\n    emitAction?: (data: string) => void;\n    /** @default ImageType.Jpeg */\n    typeImageCompression?: ImageType;\n}\nexport interface DataCropping {\n    src: string;\n    widthCropped: number;\n    heightCropped: number;\n    shape: FrameShapeType;\n    x: number;\n    y: number;\n}\nexport class ExpressImageApp {\n    public api: API;\n    public modelController: ModelController;\n    public implementation: Implementation;\n\n    public debugMode = true;\n    public typeImageCompression: ImageType;\n    public param: IExpressImageAppParam;\n    public emitAction: (data: string) => void;\n    private _environment: Environment = Environment.SMX;\n    constructor(param: IExpressImageAppParam) {\n        console.log('init.....');\n        console.log(param);\n        importPointAssets();\n        this.param = param;\n        this.typeImageCompression = param.typeImageCompression || ImageType.Jpeg;\n        if (param.emitAction) {\n            this.bindActionEmitting(param.emitAction);\n        }\n        this.initApp();\n    }\n    private initApp() {\n        this.api = new API(this);\n        if (this.param.environment) {\n            this.environment = this.param.environment;\n        }\n        this.modelController = new ModelController(this);\n        this.implementation = new Implementation(this);\n        if (this.param.url) {\n            this.importImgByURL(this.param.url);\n        }\n        // console.log('init app')\n        // for debugging purpose\n        document.body.addEventListener('keydown', (k: KeyboardEvent) => {\n            // console.log(k)\n            // console.trace();\n\n            if (k.shiftKey && k.key === 'KeyD') {\n                // console.log(this.api.getData());\n            } else if (k.shiftKey && k.key === '{') {\n                this.api.undo('');\n            } else if (k.shiftKey && k.key === '}') {\n                this.api.redo('');\n            } else if (k.shiftKey && k.key === '+') {\n                this.api.rotateCropping(-10)\n            } else if (k.shiftKey && k.key === '_') {\n                this.api.rotateCropping(10)\n            } else if (k.shiftKey && k.key === ')') {\n                this.api.zoomCropping(-0.13)\n            } else if (k.shiftKey && k.key === '(') {\n                this.api.zoomCropping(0.13)\n            } else if (k.shiftKey && k.key === '!') {\n                this.api.scaleDownGraphics()\n            } else if (k.shiftKey && k.key === '@') {\n                this.api.scaleUpGraphics()\n            }\n\n            if (k.key === 's') {\n                this.environment = this.environment === Environment.AGSM ? Environment.SMX : Environment.AGSM\n              }\n        });\n\n    }\n    public get environment() {\n        return this._environment;\n    }\n    public set environment(v: Environment) {\n        this._environment = v;\n        this.param.environment = v;\n        this.implementation.imageWrapper.updateEnvironment(v)\n    }\n    public postUpdate() {\n        console.log('post update...', this.param.appDefault)\n        if (this.param.appDefault === ExpressImageAppType.Effecting ) {\n            this.pushAction('crop', 'tab-change', 'filter')\n        } else if (this.param.appDefault === ExpressImageAppType.Drawing ) {\n            this.pushAction('crop', 'tab-change', 'markup')\n        } else if (this.param.appDefault === ExpressImageAppType.Editing ) {\n            // do nothing because it is the default app\n        }\n    }\n    public pushAction(app: any, command: any, parameter: any) {\n        this.modelController.io.pushAction(app, command, parameter);\n    }\n\n    public bindActionEmitting(emitAction: (action: string) => void) {\n        this.emitAction = emitAction;\n    }\n\n    public getData(computeImgCtx = false, appClosingBySave = false) {\n        return this.api.getData(computeImgCtx, appClosingBySave);\n    }\n    public destroy() {\n        this.api.destroy();\n    }\n    public async importImgByURL(url: string = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg', needEditingApp: boolean = false) {\n        return await this.api.onClickImportImgByURL(url, needEditingApp);\n    }\n}\n","import { ImageAnnoApp } from '..';\r\nimport { ACTIVECOMMAND_MODE } from '../lib';\r\nexport class ImageUI {\r\n    imageAnnoApp: ImageAnnoApp;\r\n    hostDiv: HTMLDivElement;\r\n    main: HTMLDivElement;\r\n    divTop: HTMLDivElement;\r\n    divContainer: HTMLDivElement;\r\n    constructor(imageAnnoApp: ImageAnnoApp, hostDiv: HTMLDivElement) {\r\n        this.imageAnnoApp = imageAnnoApp;\r\n        this.hostDiv = hostDiv;\r\n        \r\n        this.main = document.createElement('div') as HTMLDivElement;\r\n        this.main.id = 'imageMain';\r\n        this.main.style.zIndex = '10';\r\n        this.main.style.backgroundColor = '#777';\r\n        this.main.style.width = '100%';\r\n        this.main.style.height = '100%';\r\n        this.main.style.position = 'absolute';\r\n        this.hostDiv.appendChild(this.main);\r\n\r\n\r\n        this.divContainer = document.createElement('div') as HTMLDivElement;\r\n        this.divContainer.id = 'ng';\r\n        // this.divContainer.style.left = '200px';\r\n        // this.divContainer.style.position = 'absolute';\r\n        this.main.appendChild(this.divContainer);\r\n        // this.div.style.background = 'fff';\r\n        // this.div.style.width = '80%';\r\n        // this.div.style.height = '80%';\r\n\r\n\r\n        this.divTop = document.createElement('div') as HTMLDivElement;\r\n        this.divTop.id = 'ui';\r\n        this.divTop.style.zIndex = '10';\r\n        this.divTop.style.backgroundColor = '#000';\r\n        this.divTop.style.width = '100%';\r\n        this.divTop.style.height = '100px';\r\n        this.divTop.style.position = 'absolute';\r\n        this.main.appendChild(this.divTop);\r\n\r\n        this.appendButton();\r\n    }\r\n    appendButton() {\r\n        let divEditing = document.createElement('div');\r\n        divEditing.textContent = 'RPoint';\r\n        divEditing.style.fontSize = '12px';\r\n        divEditing.style.fontWeight = '400';\r\n        divEditing.style.color = '#fff';\r\n        divEditing.style.width = '220px';\r\n        divEditing.style.padding = '5px';\r\n        divEditing.style.marginBottom = '10px';\r\n        divEditing.onclick = () => {\r\n            this.imageAnnoApp.app.pushAction('markup', 'set-drawing-mode', ACTIVECOMMAND_MODE.POINT_REGULAR);\r\n        };\r\n        this.divTop.appendChild(divEditing);\r\n\r\n        divEditing = document.createElement('div');\r\n        divEditing.textContent = 'Rect';\r\n        divEditing.style.fontSize = '12px';\r\n        divEditing.style.fontWeight = '400';\r\n        divEditing.style.color = '#fff';\r\n        divEditing.style.width = '220px';\r\n        divEditing.style.padding = '5px';\r\n        divEditing.style.marginBottom = '10px';\r\n        divEditing.onclick = () => {\r\n            this.imageAnnoApp.app.pushAction('markup', 'set-drawing-mode', ACTIVECOMMAND_MODE.RECTANGLE);\r\n        };\r\n        this.divTop.appendChild(divEditing);\r\n    }\r\n}","import { ExpressImageApp } from './AppExpressImage/ExpressImage';\r\nimport { ExpressImageAppType } from './lib/Enum/EnumExpressImage';\r\nimport { ImageUI } from './UIComponent/ImageUI';\r\n\r\nexport class ImageAnnoApp {\r\n    static init(id: string) {\r\n        new ImageAnnoApp(id);\r\n    }\r\n    public div: HTMLDivElement;\r\n    public host: HTMLDivElement;\r\n    public imageUI: ImageUI;\r\n    public app: ExpressImageApp;\r\n    constructor(id: string) {\r\n        this.host = document.getElementById(id) as HTMLDivElement; \r\n        this.host.style.backgroundColor = '#999';\r\n        // this.host.style.display = 'flux';\r\n\r\n        this.imageUI = new ImageUI(this, this.host);\r\n\r\n        this.init(this.imageUI.divContainer.id);\r\n    }\r\n    public init(id: string) {\r\n        this.app = new ExpressImageApp({\r\n            id,\r\n            ui: false,\r\n            appDefault : ExpressImageAppType.Editing,\r\n            data: {},\r\n            emitAction: this.emit,\r\n        });\r\n        // this.app.importImgByURL('https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg', true);\r\n        this.app.importImgByURL('https://raw.githubusercontent.com/NamjuLee/data/master/img/person/HaminHaram.jpg', true);\r\n    }\r\n    public emit = (d: string) => {\r\n        // console.log(d);\r\n    }\r\n}\r\n\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        ImageAnnoApp.init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}","/*\nThis is a Scene Manager for undo and redo operation.\nWhenever you do actions like add, remove, or translation,\nwe capture the geometry data in the history that allow us\nto go back and forth.\n*/\nexport class SceneManager {\n  protected history: any = [];\n  protected currentIndex = -1;\n  constructor() {\n    /* */\n  }\n  public reset() {\n    this.history = [];\n    this.currentIndex = -1;\n  }\n  public push(data: any) {\n    if (this.currentIndex < this.history.length - 1) {\n      this.history.splice(this.currentIndex + 1, this.history.length);\n    }\n    this.history.push(data);\n    this.currentIndex = this.history.length - 1;\n  }\n  public undo() {\n    if (this.currentIndex === 0) {\n      return undefined;\n    }\n    this.currentIndex--;\n    return this.history[this.currentIndex];\n  }\n  public redo() {\n    this.currentIndex++;\n    this.currentIndex =\n      this.currentIndex < this.history.length ? this.currentIndex : this.history.length - 1;\n    return this.history[this.currentIndex];\n  }\n  public getIndexCurrent() {\n    return this.currentIndex;\n  }\n  public getLengthHistory() {\n    return this.history.length;\n  }\n  public getCurrentState() {\n    return { currentIndex: this.getIndexCurrent(), historyNum: this.getLengthHistory() };\n  }\n}\n","import { ColorBlending } from '../Enum/EnumColor';\nexport const modeList = [\n  'source-over', 'source-in', 'source-out', 'source-atop', 'copy',\n  'destination-over', 'destination-in', 'destination-out', 'destination-atop',\n  'lighter', 'multiply', 'screen',\n  'overlay', 'darken', 'lighten', 'color-dodge',\n  'color-burn', 'hard-light', 'soft-light',\n  'difference', 'exclusion', 'hue',\n  'saturation', 'color', 'luminosity'\n];\nexport const modeListGL = [\n  'source-over',\n  'lighter', 'multiply', 'screen',\n  'overlay', 'darken', 'lighten', 'color-dodge',\n  'color-burn', 'hard-light', 'soft-light',\n  'difference', 'exclusion', 'hue',\n  'saturation', 'color', 'luminosity'\n];\nexport const colorPreset = {\n  shadow: 'rgba(10,10,10,0.5)'\n};\nexport const shiftBlendingMode = (v: number) => { // 0 to 1\n  const num = v % modeListGL.length;\n  console.log(modeListGL[num] + ' mode for WebGL');\n  return modeListGL[num] as ColorBlending;\n};\nexport const rgb2gray = (r: number, g: number, b: number) => {\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n// eslint:disable-next-line:variable-name\nexport const rgbStringbyA = (v: string, vis: number) => {\n  const d = v.split(',');\n  return `${d[0]},${d[1]},${d[2]},${vis})`; // out rgba ( )\n};\n// eslint:disable-next-line:variable-name\nexport const rgbString2array = (v: string) => {\n  const d = v.split('(')[1].split(')')[0].split(',');\n  return [Math.floor(+d[0]), Math.floor(+d[1]), Math.floor(+d[2]), +d[3]];\n};\n// reference http://scaledinnovation.com/analytics/splines/aboutSplines.html\nexport const hsva2rgb = (h: number, s: number, v: number, visibility: number) => {\n  // inputs h=hue=0-360, s=saturation=0-1, v=value=0-1;\n  // algorithm from Wikipedia on HSV conversion;\n  const toHex = function (decimalValue: number, places: number = 2) {\n    if (places === undefined || isNaN(places)) { places = 2; }\n    const hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let next = 0;\n    let hexidecimal = '';\n    decimalValue = Math.floor(decimalValue);\n    while (decimalValue > 0) {\n        next = decimalValue % 16;\n        decimalValue = Math.floor((decimalValue - next) / 16);\n        hexidecimal = hex[next] + hexidecimal;\n    }\n    while (hexidecimal.length < places) { hexidecimal = '0' + hexidecimal; }\n      return hexidecimal;\n  };\n  const hi = Math.floor(h / 60) % 6;\n  const f = h / 60 - Math.floor(h / 60);\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r = v; // case hi===0 below\n  let g = t;\n  let b = p;\n  switch (hi) {\n      case 1: r = q; g = v; b = p; break;\n      case 2: r = p; g = v; b = t; break;\n      case 3: r = p; g = q; b = v; break;\n      case 4: r = t; g = p; b = v; break;\n      case 5: r = v; g = p; b = q; break;\n      default:\n          break;\n  }\n  //  At this point r,g,b are in 0...1 range.  Now convert into rgba or #FFFFFF notation\n  if (visibility) {\n      return `rgba( ${Math.round(255 * r)},${Math.round(255 * g)},${Math.round(255 * b)},${visibility})`;\n  } else {\n      return '#' + toHex(r * 255) + toHex(g * 255) + toHex(b * 255);\n  }\n};\nexport const getRandomHex = () => {\n  return rgb2Hex(Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255));\n};\nexport const getRandomRGB = () => {\n  return `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)})`;\n};\nexport const getRandomRGBA = () => {\n  return `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},1)`;\n};\nexport const getRandomRGBArray = () => {\n  return [(Math.round(Math.random() * 255)), (Math.round(Math.random() * 255)), (Math.round(Math.random() * 255))];\n};\nexport const getColorDistance = (r0: number, g0: number, b0: number, r1: number, g1: number, b1: number) => {\n  return Math.sqrt((r0 - r1) * (r0 - r1) + (g0 - g1) * (g0 - g1) + (b0 - b1) * (b0 - b1));\n}\nexport const getRandomColor = () => {\n  const constters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n      color += constters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nexport const rgb2Hex = (r: number, g: number, b: number) => {\n  return '#' + [Math.round(r), Math.round(g), Math.round(b)].map(x => {\n      const hex = x.toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n  }).join('');\n\n  // const rr = Math.round(r).toString(16);\n  // rr = rr.length === 1 ? '0' + rr : rr;\n\n  // const gg = Math.round(r).toString(16);\n  // gg = gg.length === 1 ? '0' + gg : gg;\n\n  // const bb = Math.round(r).toString(16);\n  // bb = bb.length === 1 ? '0' + bb : bb;\n\n  // return `#${r}${g}${b}`;\n};\nexport const hex2CanvasColor = (hex: string, visibility: number | string = 0, isGray: boolean = false)  => {\n  // if (hex[0] !== '#') {\n  //     const col = hex.split('(')[1].split(')')[0].split(',');\n  //     hex = RGBToHex(parseInt(col[0]), parseInt(col[1]), parseInt(col[2]));\n  // }\n  // Convert #AA77CC to rbga() format for Firefox\n  let thecol;\n  visibility = visibility || '1.0';\n  hex = hex.replace('#', '');\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  if (isGray) {\n      // const v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\n      const v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n      thecol = 'rgba(' + v + ',' + v + ',' + v + ',' + visibility + ')';\n  } else {\n      thecol = 'rgba(' + r + ',' + g + ',' + b + ',' + visibility + ')';\n  }\n  return thecol;\n};\nexport const dec2hex = (i: number) => {\n  return (i + 0x10000).toString(16).substr(-4).toUpperCase();\n};\nexport const hex2Dec = (hex: string) => {\n  return parseInt(hex, 16);\n};\nexport const getRandomColorByLightness = (hex: string, lightness: number) => {\n  const rgb = hex2rgbaNormalized(hex);\n  const hsl = rgb2hsl(rgb[0], rgb[1], rgb[2]);\n  return hsl2rgb(hsl[0], hsl[1], hsl[2] + lightness);\n};\n// eslint:disable-next-line:variable-name\nexport const rgbByA = (c: string, visiblity: number) => {\n  const col = c.split(',');\n  return col[0] + ',' + col[1] + ',' + col[2] + ',' + visiblity + ')';\n};\nexport const hex2rgba = (hex: string, visibility: number = 1, isGray: boolean = false) => {\n  hex = hex.replace('#', '');\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  if (isGray) {\n      // const v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\n      const v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n      return [v, v, v, visibility];\n  } else {\n      return [r, g, b, visibility];\n  }\n};\nexport const labComputation = () => {\n  // console.log('lab');\n  // console.log(rgb2lab(255, 100, 50));\n  // console.log(lab2rgb(100, -50, 100));\n  // console.log(deltaE([100, 40, -50], [50, 50, -40 ]));\n};\n// refer https://github.com/antimatter15/rgb-lab/blob/master/color.js  // L = 0 to 100  / A -100 green + 100 red / B - 100 blue + 100 yellow\nexport const lab2rgb = (L: number, A: number, B: number) => {\n  let y = (L + 16) / 116,\n      x = A / 500 + y,\n      z = y - B / 200;\n  let r, g, b = 0;\n\n  x = 0.95047 * ((x * x * x > 0.008856) ? x * x * x : (x - 16 / 116) / 7.787);\n  y = 1.00000 * ((y * y * y > 0.008856) ? y * y * y : (y - 16 / 116) / 7.787);\n  z = 1.08883 * ((z * z * z > 0.008856) ? z * z * z : (z - 16 / 116) / 7.787);\n\n  r = x *  3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y *  1.8758 + z *  0.0415;\n  b = x *  0.0557 + y * -0.2040 + z *  1.0570;\n\n  r = (r > 0.0031308) ? (1.055 * Math.pow(r, 1 / 2.4) - 0.055) : 12.92 * r;\n  g = (g > 0.0031308) ? (1.055 * Math.pow(g, 1 / 2.4) - 0.055) : 12.92 * g;\n  b = (b > 0.0031308) ? (1.055 * Math.pow(b, 1 / 2.4) - 0.055) : 12.92 * b;\n\n  return [Math.max(0, Math.min(1, r)) * 255,\n          Math.max(0, Math.min(1, g)) * 255,\n          Math.max(0, Math.min(1, b)) * 255];\n};\nexport const rgb2lab = (R: number, G: number, B: number) => { // 0 to 255\n  let r = R / 255,\n      g = G / 255,\n      b = B / 255,\n      x, y, z;\n\n  r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\n  x = (x > 0.008856) ? Math.pow(x, 1 / 3) : (7.787 * x) + 16 / 116;\n  y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y) + 16 / 116;\n  z = (z > 0.008856) ? Math.pow(z, 1 / 3) : (7.787 * z) + 16 / 116;\n\n  return [(116 * y) - 16, 500 * (x - y), 200 * (y - z)];\n};\n\n  // calculate the perceptual distance between colors in CIELAB\n  // https://github.com/THEjoezack/ColorMine/blob/master/ColorMine/ColorSpaces/Comparisons/Cie94Comparison.cs\n\nexport const deltaE = (labA: number[], labB: number[]) => {\n  const deltaL = labA[0] - labB[0];\n  const deltaA = labA[1] - labB[1];\n  const deltaB = labA[2] - labB[2];\n  const c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n  const c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n  const deltaC = c1 - c2;\n  let deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n  deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n  const sc = 1.0 + 0.045 * c1;\n  const sh = 1.0 + 0.015 * c1;\n  const deltaLKlsl = deltaL / (1.0);\n  const deltaCkcsc = deltaC / (sc);\n  const deltaHkhsh = deltaH / (sh);\n  const i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n  return i < 0 ? 0 : Math.sqrt(i);\n};\nexport const threshold = (r: number, g: number, b: number, threshold: number, high: number, low: number): number => {\n  return (0.3 * r + 0.59 * g + 0.11 * b >= threshold) ? high : low;\n};\nexport const hex2rgbaNormalized = (hex: string, visibility: number = 1, isGray: boolean = false) => {\n  hex = hex.replace('#', '');\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  if (isGray) {\n      // const v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\n      const v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n      return [v, v, v, visibility];\n  } else {\n      return [r / 255, g / 255, b / 255, visibility / 255];\n  }\n};\n// https://gist.github.com/mjackson/5311256\nexport const rgb2hsl = (r: number, g: number, b: number) => { // 0 to 255\n  r /= 255; g /= 255; b /= 255;\n\n  const max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h = (max + min) / 2, s = (max + min) / 2, l = (max + min) / 2;\n\n  if (max === min) {\n      h = s = 0; // achromatic\n  } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n          default: break;\n      }\n      h /= 6;\n  }\n  return [h, s, l]; // 0 to 1\n};\nexport const hsl2rgb = (h: number, s: number, l: number) => { // 0 to 1\n  let r, g, b;\n\n  if (s === 0) {\n      r = g = b = l; // achromatic\n  } else {\n      const hue2rgb = (pp: number, qq: number, t: number) => {\n          if (t < 0) { t += 1; }\n          if (t > 1) { t -= 1; }\n          if (t < 1 / 6) { return pp + (qq - pp) * 6 * t; }\n          if (t < 1 / 2) { return qq; }\n          if (t < 2 / 3) { return pp + (qq - pp) * (2 / 3 - t) * 6; }\n          return pp;\n      };\n\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      const p = 2 * l - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [\n      Math.max(0, Math.min(Math.round(r * 255), 255))\n      , Math.max(0, Math.min(Math.round(g * 255), 255))\n      , Math.max(0, Math.min(Math.round(b * 255), 255))\n  ];\n};\nexport const rgb2hsv = (r: number, g: number, b: number)  => { // 0 to 255\n  r /= 255; g /= 255; b /= 255;\n\n  const max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h = max, s = max, v = max;\n\n  const d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n      h = 0; // achromatic\n  } else {\n      switch (max) {\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n          default: break;\n      }\n\n      h /= 6;\n  }\n  return [h, s, v]; // 0 to 1\n};\nexport const hsv2rgb = (h: number, s: number, v: number) => { // 0 to 1\n  let r = 0, g = 0, b = 0;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n      case 0: r = v; g = t; b = p; break;\n      case 1: r = q; g = v; b = p; break;\n      case 2: r = p; g = v; b = t; break;\n      case 3: r = p; g = q; b = v; break;\n      case 4: r = t; g = p; b = v; break;\n      case 5: r = v; g = p; b = q; break;\n      default: break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n};\n// ... interpolation\n// https://graphicdesign.stackexchange.com/questions/83866/generating-a-series-of-colors-between-two-colors\nexport const interpolateColor = (colA: number[], colB: number[], factor: number = 0.5): number[] => {\n  const result = [colA[0], colA[1], colA[2]]; // ;colA.slice();\n  for (let i = 0; i < 3; i++) {\n      // result[i] = Math.round(result[i] + factor * (colB[i] - colA[i]));\n      result[i] = (result[i] * 255 + factor * (colB[i] * 255 - colA[i] * 255));\n  }\n  // console.log(result);\n  return result;\n};\nexport const interpolateColorsByArray = (cA: number[], cB: number[], steps: number): number[][] => {\n  const step = 1. / (steps - 1.), interpolatedColors: number[][] = [];\n  for (let i = 0; i < steps; i++) {\n      interpolatedColors.push(interpolateColor(cA, cB, step * i));\n  }\n  // console.log(interpolatedColors);\n  return interpolatedColors;\n};\nexport const interpolateColors = (rgb0: string, rgb1: string, steps: number): number[][] => {\n  const step = 1 / (steps - 1), interpolatedColors: number[][] = [];\n\n  const cA = rgb2array(rgb0);\n  const cB = rgb2array(rgb1);\n\n  if (cA && cB) {\n      for (let i = 0; i < steps; i++) {\n          interpolatedColors.push(interpolateColor(cA, cB, step * i));\n      }\n  }\n  return interpolatedColors;\n};\n// .....\nexport const linearColorInterpolation = (c0: number[], c1: number[], interpolation: number = 0.5) => {\n  const cOut = [];\n  for (let i = 0 ; i < c0.length; ++i) {\n      const c = c0[i] + ((c1[i] - c0[i]) * interpolation);\n      cOut.push(c);\n  }\n  return cOut;\n};\n// .....\nexport const rgb2array = (rgb: string): number[] | undefined => {\n  const c = rgb.match(/\\d+/g);\n  if (c) { return c.map(Number); }\n  return undefined;\n};\n// ............................................................................ blender\n//      blendFunc blender = funcs[mode % 7];\n// public delegate  blendFunc( a,  b,  c);\n//     public blendFunc[] funcs = new blendFunc[]{\n//     Blend, Addition, Subtraction, Multiply, Screen, Overlay, SoftLight\n// };\nexport const blend = (vA: number, vB: number, blend: number) => {\n  return vA * (1.0 - blend) + vB * blend;\n};\nexport const addition = (vA: number, vB: number, blend: number) => {\n  return vA * (1.0 - blend) + blend * (vA + vB) * 0.5;\n};\nexport const subtraction = (vA: number, vB: number, blend: number) => {\n  return vA * (1.0 - blend) + blend * (vA - vB) * 2;\n};\nexport const multiply = (vA: number, vB: number, blend: number) => {\n  return vA * (1.0 - blend) + blend * (vA * vB) * 0.5;\n};\nexport const screen = (vA: number, vB: number, blend: number) => {\n  return vA * (1.0 - blend) + blend * (1 - (1 - vA) * (1 - vB));\n};\nexport const overlay = (vA: number, vB: number, blend: number) => {\n  let val = 0;\n  if (vA < 0.5) { val = 2 * vA * vB; } else { val = 1 - 2 * (1 - vA) * (1 - vB); }\n  val = vA * (1.0 - blend) + blend * val;\n  return val;\n};\nexport const softLight = (vA: number, vB: number, blend: number)  => {\n  let val = 0;\n  if (vB < 0.5) { val = 2 * vA * vB + vA * vA * (1 - 2 * vB); } else { val = 2 * vA * (1 - vB) + Math.sqrt(vA) * (2 * vB - 1); }\n  val = vA * (1.0 - blend) + blend * val;\n  return val;\n};\n// ........................................................\n\nexport const hex2hsvByHue = (hex: string, s: number) => { // s 0 to 1\n  const col = hex2rgba(hex);\n  const hsv = rgb2hsv(col[0], col[1], col[2]);\n  hsv[1] = s;\n  return hsva2rgb(hsv[0], hsv[1], hsv[2], 1);\n\n};\nexport const hex2hsvByCol = (hex: string, s: number) => { // s 0 to 1\n  const col = hex2rgba(hex);\n  const hsv = rgb2hsv(col[0], col[1], col[2]);\n  hsv[0] += s;\n  return hsva2rgb(hsv[0], hsv[1], hsv[2], 1);\n\n};\n// .....................................................................\n// from -1 to 1 for brightness and contrast\nexport const brightnessContrastLUT = (brightness: number, contrast: number): number[] => {\n  const lut = [];\n  const contrastAdjust = -128 * contrast + 128;\n  const brightnessAdjust = 255 * brightness;\n  const adjust = contrastAdjust + brightnessAdjust;\n  for (let i = 0; i < 256; i++) {\n      const c = i * contrast + adjust;\n      const result = Math.floor(c < 0 ? 0 : (c > 255 ? 255 : c));\n      lut.push(result);\n  }\n  return lut;\n};\nexport const imgBrightnessContrast = (img: ImageData, brightness: number, contrast: number): ImageData => {\n  const imgOut = new ImageData(img.width, img.height);\n  const lut = brightnessContrastLUT(brightness, contrast + 1.0);\n  for (let i = 0; i < img.data.length; i += 4) {\n          const r = lut[img.data[i + 0]];\n          const g = lut[img.data[i + 1]];\n          const b = lut[img.data[i + 2]];\n          const a = img.data[i + 3];\n\n          imgOut.data[i + 0] = r; imgOut.data[i + 1] = g; imgOut.data[i + 2] = b; imgOut.data[i + 3] = a;\n\n  }\n  return imgOut;\n};\nexport const hueSaturationLightness = (img: ImageData, Hue: number, Saturation: number, Lightness: number) => {\n  const imgOut = new ImageData(img.width, img.height);\n  for (let i = 0; i < img.data.length; i += 4) {\n      const r = img.data[i + 0];\n      const g = img.data[i + 1];\n      const b = img.data[i + 2];\n      const a = img.data[i + 3];\n\n      const hls = rgb2hsl(r , g , b );\n      // console.log(hls);\n      hls[0] += Hue;\n\n      hls[1] += Saturation;\n      if (hls[1] < 0) {hls[1] = 0; }\n\n      hls[2] += Lightness;\n\n      const col = hsl2rgb(hls[0], hls[1], hls[2]);\n      // imgOut.SetPixel(x, y, Color.FromArgb(255, (int)(col[0] * 255), (int)(col[1] * 255), (int)(col[2] * 255)));\n\n      imgOut.data[i + 0] = col[0];\n      imgOut.data[i + 1] = col[1];\n      imgOut.data[i + 2] = col[2];\n      imgOut.data[i + 3] = a;\n  }\n  return imgOut;\n};\nexport const rgbaHueSaturationLightness = (col: number[], Hue: number, Saturation: number, Lightness: number ) => {\n      const hls = rgb2hsl(col[0], col[1], col[2]);\n      // console.log(hls);\n      hls[0] += Hue;\n\n      hls[1] += Saturation;\n      if (hls[1] < 0) {\n      hls[1] = 0;\n      }\n\n      hls[2] += Lightness;\n\n      const colOut = hsl2rgb(hls[0], hls[1], hls[2]);\n      return [colOut[0], colOut[1], colOut[2], col[3]];\n};\nexport const imgInvert = (img: ImageData) => {\n  const imgOut = new ImageData(img.width, img.height);\n  for (let i = 0; i < img.data.length; i += 4) {\n      const r = img.data[i + 0];\n      const g = img.data[i + 1];\n      const b = img.data[i + 2];\n\n      imgOut.data[i + 0] = 255 - r;\n      imgOut.data[i + 1] = 255 - g;\n      imgOut.data[i + 2] = 255 - b;\n      imgOut.data[i + 3] = 255;\n  }\n  return imgOut;\n};\nexport const imgThreshold = (img: ImageData, thresholdValue: number, high: number, low: number) => {\n  const imgOut = new ImageData(img.width, img.height);\n  for (let i = 0; i < img.data.length; i += 4) {\n      const r = img.data[i + 0];\n      const g = img.data[i + 1];\n      const b = img.data[i + 2];\n\n      const v = threshold(r / 255.0, g / 255.0, b / 255.0, thresholdValue, high, low);\n      let gray = Math.floor(v * 255);\n      gray = (gray < 255) ? gray : 255;\n      gray = (gray < 0) ? 0 : gray;\n\n      // imgOut.SetPixel(x, y, Color.FromArgb(255, gray, gray, gray));\n      imgOut.data[i + 0] = gray;\n      imgOut.data[i + 1] = gray;\n      imgOut.data[i + 2] = gray;\n      imgOut.data[i + 3] = 255;\n  }\n  return imgOut;\n};\n// import { process_image } from './DominantColor';\n// export const importImage = async (url: string) => {\n//     const image = new Image();\n//     image.crossOrigin = 'anonymous';\n//     image.src = url;\n//     image.style.pointerEvents = 'none';\n//     image.onload = () => {\n//         return image;\n//     };\n// };\nexport const importImageWithDominantColor = async (url: string) => {\n  const image = await importImage(url);\n  // const result = process_image(image);\n  // console.log(result);\n  return image;\n};\nexport const importImage = async (url: string) => new Promise((resolve, reject) => {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  img.addEventListener('load', () => resolve(img));\n  img.addEventListener('error', (err) => reject(err));\n  img.src = url;\n});\nexport const hexToCanvasColor = (hex: string, visibility: number | string = 0, isGray: boolean = false) => {\n  // if (hex[0] !== '#') {\n  //     let col = hex.split('(')[1].split(')')[0].split(',');\n  //     hex = this.RGBToHex(parseInt(col[0]), parseInt(col[1]), parseInt(col[2]));\n  // }\n  // Convert #AA77CC to rbga() format for Firefox\n  let theColor;\n  visibility = visibility || '1.0';\n  hex = hex.replace('#', '');\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n  if (isGray) {\n      // let v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\n      let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n      theColor = 'rgba(' + v + ',' + v + ',' + v + ',' + visibility + ')';\n  } else {\n      theColor = 'rgba(' + r + ',' + g + ',' + b + ',' + visibility + ')';\n  }\n  return theColor;\n};\n","import { ColorBlending } from '../Enum/EnumColor';\n\nexport type CSSFilterParameter = [string, number];\n\nexport type RGBAValue = [number, number, number, number];\n\nexport type RGBAGradientStop = [\n  /** RGBA tuple */\n  RGBAValue,\n  /** <length-percentage> decimal (0–1.0) for gradient position */\n  number?\n];\nexport type TintParams = {\n  // tuple representing rgba background\n  bg0: RGBAValue;\n  // radial gradient params\n  bg1?: RGBAValue;\n  in?: number;\n  out?: number;\n  mode?: ColorBlending | string;\n};\n\nexport interface FilterData {\n  filters: CSSFilterParameter[];\n  tints: TintParams[];\n}\n\nexport type FilterName = string;\n\nexport type FilterPresets = Record<FilterName, FilterData>;\n\nexport const filterPreset: FilterPresets = {\n  normal: {\n    filters: [\n      ['blur', 0],\n      ['sepia', 0],\n      ['contrast', 1],\n      ['brightness', 1],\n      ['saturate', 1],\n      ['hue-rotate', 0],\n    ],\n    tints: [],\n  },\n  film1: {\n    filters: [\n      ['contrast', 0.8],\n      ['saturate', 1.3],\n      ['hue-rotate', -10],\n    ],\n    tints: [\n      {\n        bg0: [204, 163, 76, 0.15],\n        mode: 'soft-light',\n      },\n      {\n        bg0: [68, 126, 90, 0.2],\n        mode: 'color-dodge',\n      },\n    ],\n  },\n  film2: {\n    filters: [\n      ['contrast', 1.05],\n      ['brightness', 1],\n      ['saturate', 1.2],\n      ['hue-rotate', -12],\n    ],\n    tints: [\n      {\n        bg0: [228, 133, 111, 0.25],\n        mode: 'screen',\n      },\n      {\n        bg0: [0, 95, 102, 0.25],\n        mode: 'color-dodge',\n      },\n    ],\n  },\n  film3: {\n    filters: [\n      ['sepia', 0.1],\n      ['contrast', 0.95],\n      ['brightness', 1.15],\n      ['saturate', 1.1],\n      ['hue-rotate', -5],\n    ],\n    tints: [\n      {\n        bg0: [1, 68, 93, 0.35],\n        mode: 'lighten',\n      },\n      {\n        bg0: [161, 159, 80, 0.2],\n        mode: 'darken',\n      },\n    ],\n  },\n  film4: {\n    filters: [\n      ['sepia', 0.1],\n      ['brightness', 1.1],\n      ['saturate', 1.25],\n      ['hue-rotate', -2],\n    ],\n    tints: [\n      {\n        bg0: [0, 60, 170, 0.3],\n        mode: 'screen',\n      },\n      {\n        bg0: [104, 125, 200, 0.25],\n        mode: 'overlay',\n      },\n    ],\n  },\n  highSaturation: {\n    filters: [\n      ['sepia', 0.1],\n      ['contrast', 0.9],\n      ['brightness', 1.15],\n      ['saturate', 1.5],\n    ],\n    tints: [\n      {\n        in: 0.7,\n        out: 1,\n        bg0: [0, 0, 0, 0],\n        bg1: [0, 0, 0, 0.15],\n        mode: 'multiply',\n      },\n    ],\n  },\n  bw1: {\n    filters: [\n      ['contrast', 1.1],\n      ['brightness', 1.05],\n      ['saturate', 0],\n    ],\n    tints: [\n      {\n        bg0: [40, 154, 191, 0.12],\n        mode: 'color',\n      },\n    ],\n  },\n  bw2: {\n    filters: [\n      ['contrast', 1.1],\n      ['brightness', 1.05],\n      ['saturate', 0],\n    ],\n    tints: [\n      {\n        bg0: [55, 88, 180, 0.15],\n        mode: 'color',\n      },\n    ],\n  },\n  sepia: {\n    filters: [\n      ['contrast', 1.1],\n      ['brightness', 1.05],\n      ['saturate', 0],\n    ],\n    tints: [\n      {\n        bg0: [255, 191, 66, 0.5],\n        mode: 'soft-light',\n      },\n      {\n        bg0: [196, 100, 236, .10],\n        mode: 'hard-light',\n      },\n    ],\n  },\n\n  // multiply, overlay, lighten, darken, screen, color\n\n  // filter1977 : {\n  //     filter : {\n  //         sepia : .5,\n  //         contrast : 1,\n  //         brightness : 1,\n  //         saturate : 1.4,\n  //         hueRotate : -30,\n  //     },\n  //     // tints: {\n  //     //     in: 0.0,\n  //     //     out: 1,\n  //     //     bg0 : [255, 0, 0, 1],\n  //     //     bg1 : [0, 0, 0, 1],\n  //     //     mode : 'source-over',\n  //     // }\n  // },\n  // aden : {\n  //     filter : {\n  //         sepia : 0.2,\n  //         contrast : 1,\n  //         brightness : 1.5,\n  //         saturate : 1.4,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .1],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // amaro : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.1,\n  //         brightness : 1.2,\n  //         saturate : 1.3,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .2],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n\n  // },\n  // ashby : {\n  //     filter : {\n  //         sepia : .5,\n  //         contrast : 1.2,\n  //         brightness : 1,\n  //         saturate : 1.8,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .35],\n  //             mode : 'lighten',\n  //         },\n  //     ]\n  // },\n  // brannan : {\n  //     filter : {\n  //         sepia : 0.4,\n  //         contrast : 1.25,\n  //         brightness : 1.1,\n  //         saturate : 0.9,\n  //         hueRotate : -2,\n  //     }\n  // },\n  // brooklyn : {\n  //     filter : {\n  //         sepia : .25,\n  //         contrast : 1.25,\n  //         brightness : 1.25,\n  //         saturate : 1,\n  //         hueRotate : 5,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [127, 187, 227, .2],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // charmes : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.25,\n  //         brightness : 1.25,\n  //         saturate : 1.35,\n  //         hueRotate : -5,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .25],\n  //             mode : 'darken',\n  //         }\n  //     ]\n  // },\n  // clarendon : {\n  //     filter : {\n  //         sepia : 0.15,\n  //         contrast : 1.25,\n  //         brightness : 1.25,\n  //         saturate : 1,\n  //         hueRotate : 5,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [127, 187, 227, .4],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // crema : {\n  //     filter : {\n  //         sepia : 0.5,\n  //         contrast : 1.25,\n  //         brightness : 1.15,\n  //         saturate : 0.9,\n  //         hueRotate : -2,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .2],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // dogpatch : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.1,\n  //         brightness : 1.5,\n  //         saturate : 1,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // earlybird : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.25,\n  //         brightness : 1.15,\n  //         saturate : 0.9,\n  //         hueRotate : -5,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 0, 0, 0],\n  //             bg1 : [125, 105, 24, .2],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // gingham : {\n  //     filter : {\n  //         sepia : 0,\n  //         contrast : 1.1,\n  //         brightness : 1.1,\n  //         saturate : 1,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [230, 230, 230, 1],\n  //             mode : 'soft-light',\n  //         },\n  //     ]\n  // },\n  // ginza : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.15,\n  //         brightness : 1.2,\n  //         saturate : 1.35,\n  //         hueRotate : -5,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .15],\n  //             mode : 'darken',\n  //         },\n  //     ]\n  // },\n  // hefe : {\n  //     filter : {\n  //         sepia : 0.4,\n  //         contrast : 1.5,\n  //         brightness : 1.2,\n  //         saturate : 1.4,\n  //         hueRotate : -10,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 0, 0, 0],\n  //             bg1 : [0, 0, 0, .25],\n  //             mode : 'soft-light',\n  //         },\n  //     ]\n  // },\n  // helena : {\n  //     filter : {\n  //         sepia : 0.5,\n  //         contrast : 1.05,\n  //         brightness : 1.05,\n  //         saturate : 1.35,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [158, 175, 30, .25],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // hudson : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.2,\n  //         brightness : 1.2,\n  //         saturate : 1.05,\n  //         hueRotate : -15,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.25,\n  //             out: 1,\n  //             bg0 : [0, 0, 0, 0],\n  //             bg1 : [25, 62, 167, .25],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // inkwell : {\n  //     filter : {\n  //         sepia : 0,\n  //         contrast : 0.85,\n  //         brightness : 1.25,\n  //         saturate : 0,\n  //         hueRotate : 0,\n  //     },\n  // },\n  // juno : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.15,\n  //         brightness : 1.15,\n  //         saturate : 1.8,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [127, 187, 227, .2],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // kelvin : {\n  //     filter : {\n  //         sepia : 0.15,\n  //         contrast : 1.5,\n  //         brightness : 1.1,\n  //         saturate : 1,\n  //         hueRotate : -10,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [128, 78, 15, .25],\n  //             bg1 : [128, 78, 15, .5],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // lark : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.2,\n  //         brightness : 1.3,\n  //         saturate : 1.25,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // lofi : {\n  //     filter : {\n  //         sepia : 0,\n  //         contrast : 1.5,\n  //         brightness : 1,\n  //         saturate : 1.1,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // maven : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.05,\n  //         brightness : 1.05,\n  //         saturate : 1.75,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [158, 175, 30, .25],\n  //             mode : 'darken',\n  //         },\n  // ]\n  // },\n  // mayfair : {\n  //     filter : {\n  //         sepia : 0,\n  //         contrast : 1.1,\n  //         brightness : 1.15,\n  //         saturate : 1.1,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 0, 0, 0],\n  //             bg1 : [175, 105, 24, .4],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // moon : {\n  //     filter : {\n  //         sepia : .35,\n  //         contrast : 1.4,\n  //         brightness : .95,\n  //         saturate : 0,\n  //         hueRotate : 0,\n  //     },\n  // },\n  // nashville : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.5,\n  //         brightness : 0.9,\n  //         saturate : 1,\n  //         hueRotate : -15,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [128, 78, 15, .5],\n  //             bg1 : [128, 78, 15, .65],\n  //             mode : 'screen',\n  //         },\n  //     ]\n  // },\n  // perpetua : {\n  //     filter : {\n  //         sepia : 0,\n  //         contrast : 1.1,\n  //         brightness : 1.25,\n  //         saturate : 1.1,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 91, 154, .25],\n  //             bg1 : [230, 193, 61, .25],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n  // poprocket : {\n  //     filter : {\n  //         sepia : 0.15,\n  //         contrast : 1,\n  //         brightness : 1.2,\n  //         saturate : 1,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.4,\n  //             out: 0.8,\n  //             bg0 : [206, 39, 70, .75],\n  //             bg1 : [0, 0, 0, 0.8],\n  //             mode : 'screen',\n  //         },\n  //     ]\n  // },\n  // reyes : {\n  //     filter : {\n  //         sepia : 0.75,\n  //         contrast : 0.75,\n  //         brightness : 1.12,\n  //         saturate : 1.4,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // rise : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.25,\n  //         brightness : 1.2,\n  //         saturate : 0.9,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 0, 0, 0],\n  //             bg1 : [230, 193, 61, .25],\n  //             mode : 'lighten',\n  //         },\n  //     ]\n  // },\n  // sierra : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.5,\n  //         brightness : 0.9,\n  //         saturate : 1,\n  //         hueRotate : -15,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [128, 78, 15, .5],\n  //             bg1 : [0, 0, 0, .65],\n  //             mode : 'screen',\n  //         },\n  //     ]\n  // },\n  // skyline : {\n  //     filter : {\n  //         sepia : 0.15,\n  //         contrast : 1.25,\n  //         brightness : 1.25,\n  //         saturate : 1.2,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // slumber : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.25,\n  //         brightness : 1,\n  //         saturate : 1.25,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .2],\n  //             mode : 'darken',\n  //         },\n  //     ]\n  // },\n  // stinson : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.25,\n  //         brightness : 1.1,\n  //         saturate : 1.25,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .45],\n  //             mode : 'lighten',\n  //         },\n  //     ]\n  // },\n  // sutro : {\n  //     filter : {\n  //         sepia : 0.4,\n  //         contrast : 1.2,\n  //         brightness : 0.9,\n  //         saturate : 1.4,\n  //         hueRotate : -10,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.5,\n  //             out: 0.9,\n  //             bg0 : [0, 0, 0, 0.1],\n  //             bg1 : [0, 0, 0, .5],\n  //             mode : 'darken',\n  //         },\n  //     ]\n  // },\n  // toaster : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.5,\n  //         brightness : .95,\n  //         saturate : 1,\n  //         hueRotate : -15,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [128, 78, 15, 1.0],\n  //             bg1 : [0, 0, 0, .25],\n  //             mode : 'screen',\n  //         },\n  //     ]\n  // },\n  // valencia : {\n  //     filter : {\n  //         sepia : 0.25,\n  //         contrast : 1.1,\n  //         brightness : 1.1,\n  //         saturate : 1,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [230, 193, 61, .1],\n  //             mode : 'lighten',\n  //         },\n  //     ]\n  // },\n  // vesper : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 1.15,\n  //         brightness : 1.2,\n  //         saturate : 1.3,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [125, 105, 24, .25],\n  //             mode : 'overlay',\n  //         },\n  //     ]\n  // },\n  // walden : {\n  //     filter : {\n  //         sepia : 0.35,\n  //         contrast : 0.8,\n  //         brightness : 1.25,\n  //         saturate : 1.4,\n  //         hueRotate : 0,\n  //     },\n  //     tints: [\n  //         {\n  //             bg0 : [229, 240, 128, .5],\n  //             mode : 'darken',\n  //         },\n  //     ]\n  // },\n  // willow : {\n  //     filter : {\n  //         sepia : 0.2,\n  //         contrast : 0.85,\n  //         brightness : 1.2,\n  //         saturate : 0.05,\n  //         hueRotate : 0,\n  //     }\n  // },\n  // xpro2 : {\n  //     filter : {\n  //         sepia : 0.45,\n  //         contrast : 1.12,\n  //         brightness : 1.75,\n  //         saturate : 1.3,\n  //         hueRotate : -5,\n  //     },\n  //     tints: [\n  //         {\n  //             in: 0.0,\n  //             out: 1,\n  //             bg0 : [0, 91, 154, .35],\n  //             bg1 : [0, 0, 0, .65],\n  //             mode : 'multiply',\n  //         },\n  //     ]\n  // },\n\n  //   filterAden : {\n  //     -webkit-filter: sepia(.2) brightness(1.15) saturate(1.4);\n  //     filter: sepia(.2) brightness(1.15) saturate(1.4);\n  //   }\n\n  //   .filter-aden::before {\n  //     background: rgba(125, 105, 24, .1);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-amaro {\n  //     -webkit-filter: sepia(.35) contrast(1.1) brightness(1.2) saturate(1.3);\n  //     filter: sepia(.35) contrast(1.1) brightness(1.2) saturate(1.3);\n  //   }\n\n  //   .filter-amaro::before {\n  //     background: rgba(125, 105, 24, .2);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-ashby {\n  //     -webkit-filter: sepia(.5) contrast(1.2) saturate(1.8);\n  //     filter: sepia(.5) contrast(1.2) saturate(1.8);\n  //   }\n\n  //   .filter-ashby::before {\n  //     background: rgba(125, 105, 24, .35);\n  //     content: '';\n  //     mix-blend-mode: lighten;\n  //   }\n\n  //   .filter-brannan {\n  //     -webkit-filter: sepia(.4) contrast(1.25) brightness(1.1) saturate(.9) hue-rotate(-2deg);\n  //     filter: sepia(.4) contrast(1.25) brightness(1.1) saturate(.9) hue-rotate(-2deg);\n  //   }\n\n  //   .filter-brooklyn {\n  //     -webkit-filter: sepia(.25) contrast(1.25) brightness(1.25) hue-rotate(5deg);\n  //     filter: sepia(.25) contrast(1.25) brightness(1.25) hue-rotate(5deg);\n  //   }\n\n  //   .filter-brooklyn::before {\n  //     background: rgba(127, 187, 227, .2);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-charmes {\n  //     -webkit-filter: sepia(.25) contrast(1.25) brightness(1.25) saturate(1.35) hue-rotate(-5deg);\n  //     filter: sepia(.25) contrast(1.25) brightness(1.25) saturate(1.35) hue-rotate(-5deg);\n  //   }\n\n  //   .filter-charmes::before {\n  //     background: rgba(125, 105, 24, .25);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-clarendon {\n  //     -webkit-filter: sepia(.15) contrast(1.25) brightness(1.25) hue-rotate(5deg);\n  //     filter: sepia(.15) contrast(1.25) brightness(1.25) hue-rotate(5deg);\n  //   }\n\n  //   .filter-clarendon::before {\n  //     background: rgba(127, 187, 227, .4);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-crema {\n  //     -webkit-filter: sepia(.5) contrast(1.25) brightness(1.15) saturate(.9) hue-rotate(-2deg);\n  //     filter: sepia(.5) contrast(1.25) brightness(1.15) saturate(.9) hue-rotate(-2deg);\n  //   }\n\n  //   .filter-crema::before {\n  //     background: rgba(125, 105, 24, .2);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-dogpatch {\n  //     -webkit-filter: sepia(.35) saturate(1.1) contrast(1.5);\n  //     filter: sepia(.35) saturate(1.1) contrast(1.5);\n  //   }\n\n  //   .filter-earlybird {\n  //     -webkit-filter: sepia(.25) contrast(1.25) brightness(1.15) saturate(.9) hue-rotate(-5deg);\n  //     filter: sepia(.25) contrast(1.25) brightness(1.15) saturate(.9) hue-rotate(-5deg);\n  //   }\n\n  //   .filter-earlybird::before {\n  //     background: radial-gradient(circle closest-corner, transparent 0, rgba(125, 105, 24, .2) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 0, rgba(125, 105, 24, .2) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 0, rgba(125, 105, 24, .2) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 0, rgba(125, 105, 24, .2) 100%);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-gingham {\n  //     -webkit-filter: contrast(1.1) brightness(1.1);\n  //     filter: contrast(1.1) brightness(1.1);\n  //   }\n\n  //   .filter-gingham::before {\n  //     background: #e6e6e6;\n  //     content: '';\n  //     mix-blend-mode: soft-light;\n  //   }\n\n  //   .filter-ginza {\n  //     -webkit-filter: sepia(.25) contrast(1.15) brightness(1.2) saturate(1.35) hue-rotate(-5deg);\n  //     filter: sepia(.25) contrast(1.15) brightness(1.2) saturate(1.35) hue-rotate(-5deg);\n  //   }\n\n  //   .filter-ginza::before {\n  //     background: rgba(125, 105, 24, .15);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-hefe {\n  //     -webkit-filter: sepia(.4) contrast(1.5) brightness(1.2) saturate(1.4) hue-rotate(-10deg);\n  //     filter: sepia(.4) contrast(1.5) brightness(1.2) saturate(1.4) hue-rotate(-10deg);\n  //   }\n\n  //   .filter-hefe::before {\n  //     background: radial-gradient(circle closest-corner, transparent 0, rgba(0, 0, 0, .25) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 0, rgba(0, 0, 0, .25) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 0, rgba(0, 0, 0, .25) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 0, rgba(0, 0, 0, .25) 100%);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-helena {\n  //     -webkit-filter: sepia(.5) contrast(1.05) brightness(1.05) saturate(1.35);\n  //     filter: sepia(.5) contrast(1.05) brightness(1.05) saturate(1.35);\n  //   }\n\n  //   .filter-helena::before {\n  //     background: rgba(158, 175, 30, .25);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-hudson {\n  //     -webkit-filter: sepia(.25) contrast(1.2) brightness(1.2) saturate(1.05) hue-rotate(-15deg);\n  //     filter: sepia(.25) contrast(1.2) brightness(1.2) saturate(1.05) hue-rotate(-15deg);\n  //   }\n\n  //   .filter-hudson::before {\n  //     background: radial-gradient(circle closest-corner, transparent 25%, rgba(25, 62, 167, .25) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 25%, rgba(25, 62, 167, .25) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 25%, rgba(25, 62, 167, .25) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 25%, rgba(25, 62, 167, .25) 100%);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-inkwell {\n  //     -webkit-filter: brightness(1.25) contrast(.85) grayscale(1);\n  //     filter: brightness(1.25) contrast(.85) grayscale(1);\n  //   }\n\n  //   .filter-juno {\n  //     -webkit-filter: sepia(.35) contrast(1.15) brightness(1.15) saturate(1.8);\n  //     filter: sepia(.35) contrast(1.15) brightness(1.15) saturate(1.8);\n  //   }\n\n  //   .filter-juno::before {\n  //     background: rgba(127, 187, 227, .2);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-kelvin {\n  //     -webkit-filter: sepia(.15) contrast(1.5) brightness(1.1) hue-rotate(-10deg);\n  //     filter: sepia(.15) contrast(1.5) brightness(1.1) hue-rotate(-10deg);\n  //   }\n\n  //   .filter-kelvin::before {\n  //     background: radial-gradient(circle closest-corner, rgba(128, 78, 15, .25) 0, rgba(128, 78, 15, .5) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, rgba(128, 78, 15, .25) 0, rgba(128, 78, 15, .5) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, rgba(128, 78, 15, .25) 0, rgba(128, 78, 15, .5) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, rgba(128, 78, 15, .25) 0, rgba(128, 78, 15, .5) 100%);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-lark {\n  //     -webkit-filter: sepia(.25) contrast(1.2) brightness(1.3) saturate(1.25);\n  //     filter: sepia(.25) contrast(1.2) brightness(1.3) saturate(1.25);\n  //   }\n\n  //   .filter-lofi {\n  //     -webkit-filter: saturate(1.1) contrast(1.5);\n  //     filter: saturate(1.1) contrast(1.5);\n  //   }\n\n  //   .filter-ludwig {\n  //     -webkit-filter: sepia(.25) contrast(1.05) brightness(1.05) saturate(2);\n  //     filter: sepia(.25) contrast(1.05) brightness(1.05) saturate(2);\n  //   }\n\n  //   .filter-ludwig::before {\n  //     background: rgba(125, 105, 24, .1);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-maven {\n  //     -webkit-filter: sepia(.35) contrast(1.05) brightness(1.05) saturate(1.75);\n  //     filter: sepia(.35) contrast(1.05) brightness(1.05) saturate(1.75);\n  //   }\n\n  //   .filter-maven::before {\n  //     background: rgba(158, 175, 30, .25);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-mayfair {\n  //     -webkit-filter: contrast(1.1) brightness(1.15) saturate(1.1);\n  //     filter: contrast(1.1) brightness(1.15) saturate(1.1);\n  //   }\n\n  //   .filter-mayfair::before {\n  //     background: radial-gradient(circle closest-corner, transparent 0, rgba(175, 105, 24, .4) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 0, rgba(175, 105, 24, .4) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 0, rgba(175, 105, 24, .4) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 0, rgba(175, 105, 24, .4) 100%);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-moon {\n  //     -webkit-filter: brightness(1.4) contrast(.95) saturate(0) sepia(.35);\n  //     filter: brightness(1.4) contrast(.95) saturate(0) sepia(.35);\n  //   }\n\n  //   .filter-nashville {\n  //     -webkit-filter: sepia(.25) contrast(1.5) brightness(.9) hue-rotate(-15deg);\n  //     filter: sepia(.25) contrast(1.5) brightness(.9) hue-rotate(-15deg);\n  //   }\n\n  //   .filter-nashville::before {\n  //     background: radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(128, 78, 15, .65) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(128, 78, 15, .65) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(128, 78, 15, .65) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(128, 78, 15, .65) 100%);\n  //     content: '';\n  //     mix-blend-mode: screen;\n  //   }\n\n  //   .filter-perpetua {\n  //     -webkit-filter: contrast(1.1) brightness(1.25) saturate(1.1);\n  //     filter: contrast(1.1) brightness(1.25) saturate(1.1);\n  //   }\n\n  //   .filter-perpetua::before {\n  //     background: linear-gradient(to bottom, rgba(0, 91, 154, .25), rgba(230, 193, 61, .25));\n  //     background: -o-linear-gradient(top, rgba(0, 91, 154, .25), rgba(230, 193, 61, .25));\n  //     background: -moz-linear-gradient(top, rgba(0, 91, 154, .25), rgba(230, 193, 61, .25));\n  //     background: -webkit-linear-gradient(top, rgba(0, 91, 154, .25), rgba(230, 193, 61, .25));\n  //     background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 91, 154, .25)), to(rgba(230, 193, 61, .25)));\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n\n  //   .filter-poprocket {\n  //     -webkit-filter: sepia(.15) brightness(1.2);\n  //     filter: sepia(.15) brightness(1.2);\n  //   }\n\n  //   .filter-poprocket::before {\n  //     background: radial-gradient(circle closest-corner, rgba(206, 39, 70, .75) 40%, black 80%);\n  //     background: -o-radial-gradient(circle closest-corner, rgba(206, 39, 70, .75) 40%, black 80%);\n  //     background: -moz-radial-gradient(circle closest-corner, rgba(206, 39, 70, .75) 40%, black 80%);\n  //     background: -webkit-radial-gradient(circle closest-corner, rgba(206, 39, 70, .75) 40%, black 80%);\n  //     content: '';\n  //     mix-blend-mode: screen;\n  //   }\n\n  //   .filter-reyes {\n  //     -webkit-filter: sepia(.75) contrast(.75) brightness(1.25) saturate(1.4);\n  //     filter: sepia(.75) contrast(.75) brightness(1.25) saturate(1.4);\n  //   }\n\n  //   .filter-rise {\n  //     -webkit-filter: sepia(.25) contrast(1.25) brightness(1.2) saturate(.9);\n  //     filter: sepia(.25) contrast(1.25) brightness(1.2) saturate(.9);\n  //   }\n\n  //   .filter-rise::before {\n  //     background: radial-gradient(circle closest-corner, transparent 0, rgba(230, 193, 61, .25) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 0, rgba(230, 193, 61, .25) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 0, rgba(230, 193, 61, .25) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 0, rgba(230, 193, 61, .25) 100%);\n  //     content: '';\n  //     mix-blend-mode: lighten;\n  //   }\n\n  //   .filter-sierra {\n  //     -webkit-filter: sepia(.25) contrast(1.5) brightness(.9) hue-rotate(-15deg);\n  //     filter: sepia(.25) contrast(1.5) brightness(.9) hue-rotate(-15deg);\n  //   }\n\n  //   .filter-sierra::before {\n  //     background: radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, rgba(128, 78, 15, .5) 0, rgba(0, 0, 0, .65) 100%);\n  //     content: '';\n  //     mix-blend-mode: screen;\n  //   }\n\n  //   .filter-skyline {\n  //     -webkit-filter: sepia(.15) contrast(1.25) brightness(1.25) saturate(1.2);\n  //     filter: sepia(.15) contrast(1.25) brightness(1.25) saturate(1.2);\n  //   }\n\n  //   .filter-slumber {\n  //     -webkit-filter: sepia(.35) contrast(1.25) saturate(1.25);\n  //     filter: sepia(.35) contrast(1.25) saturate(1.25);\n  //   }\n\n  //   .filter-slumber::before {\n  //     background: rgba(125, 105, 24, .2);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-stinson {\n  //     -webkit-filter: sepia(.35) contrast(1.25) brightness(1.1) saturate(1.25);\n  //     filter: sepia(.35) contrast(1.25) brightness(1.1) saturate(1.25);\n  //   }\n\n  //   .filter-stinson::before {\n  //     background: rgba(125, 105, 24, .45);\n  //     content: '';\n  //     mix-blend-mode: lighten;\n  //   }\n\n  //   .filter-sutro {\n  //     -webkit-filter: sepia(.4) contrast(1.2) brightness(.9) saturate(1.4) hue-rotate(-10deg);\n  //     filter: sepia(.4) contrast(1.2) brightness(.9) saturate(1.4) hue-rotate(-10deg);\n  //   }\n\n  //   .filter-sutro::before {\n  //     background: radial-gradient(circle closest-corner, transparent 50%, rgba(0, 0, 0, .5) 90%);\n  //     background: -o-radial-gradient(circle closest-corner, transparent 50%, rgba(0, 0, 0, .5) 90%);\n  //     background: -moz-radial-gradient(circle closest-corner, transparent 50%, rgba(0, 0, 0, .5) 90%);\n  //     background: -webkit-radial-gradient(circle closest-corner, transparent 50%, rgba(0, 0, 0, .5) 90%);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-toaster {\n  //     -webkit-filter: sepia(.25) contrast(1.5) brightness(.95) hue-rotate(-15deg);\n  //     filter: sepia(.25) contrast(1.5) brightness(.95) hue-rotate(-15deg);\n  //   }\n\n  //   .filter-toaster::before {\n  //     background: radial-gradient(circle, #804e0f, rgba(0, 0, 0, .25));\n  //     background: -o-radial-gradient(circle, #804e0f, rgba(0, 0, 0, .25));\n  //     background: -moz-radial-gradient(circle, #804e0f, rgba(0, 0, 0, .25));\n  //     background: -webkit-radial-gradient(circle, #804e0f, rgba(0, 0, 0, .25));\n  //     content: '';\n  //     mix-blend-mode: screen;\n  //   }\n\n  //   .filter-valencia {\n  //     -webkit-filter: sepia(.25) contrast(1.1) brightness(1.1);\n  //     filter: sepia(.25) contrast(1.1) brightness(1.1);\n  //   }\n\n  //   .filter-valencia::before {\n  //     background: rgba(230, 193, 61, .1);\n  //     content: '';\n  //     mix-blend-mode: lighten;\n  //   }\n\n  //   .filter-vesper {\n  //     -webkit-filter: sepia(.35) contrast(1.15) brightness(1.2) saturate(1.3);\n  //     filter: sepia(.35) contrast(1.15) brightness(1.2) saturate(1.3);\n  //   }\n\n  //   .filter-vesper::before {\n  //     background: rgba(125, 105, 24, .25);\n  //     content: '';\n  //     mix-blend-mode: overlay;\n  //   }\n\n  //   .filter-walden {\n  //     -webkit-filter: sepia(.35) contrast(.8) brightness(1.25) saturate(1.4);\n  //     filter: sepia(.35) contrast(.8) brightness(1.25) saturate(1.4);\n  //   }\n\n  //   .filter-walden::before {\n  //     background: rgba(229, 240, 128, .5);\n  //     content: '';\n  //     mix-blend-mode: darken;\n  //   }\n\n  //   .filter-willow {\n  //     -webkit-filter: brightness(1.2) contrast(.85) saturate(.05) sepia(.2);\n  //     filter: brightness(1.2) contrast(.85) saturate(.05) sepia(.2);\n  //   }\n\n  //   .filter-xpro-ii {\n  //     -webkit-filter: sepia(.45) contrast(1.25) brightness(1.75) saturate(1.3) hue-rotate(-5deg);\n  //     filter: sepia(.45) contrast(1.25) brightness(1.75) saturate(1.3) hue-rotate(-5deg);\n  //   }\n\n  //   .filter-xpro-ii::before {\n  //     background: radial-gradient(circle closest-corner, rgba(0, 91, 154, .35) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -o-radial-gradient(circle closest-corner, rgba(0, 91, 154, .35) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -moz-radial-gradient(circle closest-corner, rgba(0, 91, 154, .35) 0, rgba(0, 0, 0, .65) 100%);\n  //     background: -webkit-radial-gradient(circle closest-corner, rgba(0, 91, 154, .35) 0, rgba(0, 0, 0, .65) 100%);\n  //     content: '';\n  //     mix-blend-mode: multiply;\n  //   }\n};\n","import { filterPreset } from './FilterPreset';\nimport { linearInterpolate } from '../Utility/MathUtility';\nimport { Filters } from '../Enum/EnumExpressImage';\nexport const imageFilterByArray = (ctx: CanvasRenderingContext2D, img: HTMLCanvasElement | HTMLImageElement, filters: any, interpolation = 1.0) => {\n    if (filters === undefined) { return ctx; }\n    ctx.filter = getFiltersString(filters, interpolation);\n    ctx.drawImage(img, 0, 0);\n    ctx.filter = 'none';\n    return ctx;\n}\nexport const getFiltersString = (filters: any, interpolation = 1.0) => {\n    let filter = ''\n    for (let i = 0 ; i < filters.length; ++i) {\n        filter += getFilterString(filters[i][0], filters[i][1], interpolation)\n    }\n    return filter;\n}\nconst getFilterString = (key: string, value: number, interpolation = 1.0) => {\n    switch (key as Filters) {\n        case Filters.blur:\n            return `blur(${linearInterpolate(0, value, interpolation)}px)`\n        case Filters.sepia:\n            return `sepia(${linearInterpolate(0, value, interpolation)})`\n        case Filters.contrast:\n            return `contrast(${linearInterpolate(1, value, interpolation)})`\n        case Filters.brightness:\n            return `brightness(${linearInterpolate(1, value, interpolation)})`\n        case Filters.saturate:\n            return `saturate(${linearInterpolate(1, value, interpolation)})`\n        case Filters.hueRotate:\n            return `hue-rotate(${linearInterpolate(0, value, interpolation)}deg)`\n        default:\n            return '';\n    }\n}\nexport const imageTintByPreset = (ctx: CanvasRenderingContext2D, typePreset: string, cx: number = 0.5, cy: number = 0.5, ratio: number = 1) => {\n    const preset = filterPreset[typePreset];\n    if (preset === undefined) {\n        return;\n    }\n    // console.log(typeof(preset['tints']['mode']));\n    // console.log();\n    // console.log('preset', preset);\n    // imageFilter(ctx, imgCanvas, preset.filter.sepia, preset.filter.contrast, preset.filter.brightness, preset.filter.saturate, preset.filter.hueRotate , preset.filter.blur);\n\n    // if (typeof preset['tints']['mode'] === 'string'  ) {\n\n    // } else {\n    const tintArray = preset['tints'];\n    if (tintArray) {\n        imageTint(ctx, tintArray, cx, cy, ratio);\n    }\n    // }\n}\nexport const imageTint = (ctx: CanvasRenderingContext2D, tintArray: any, cx: number = 0.5, cy: number = 0.5, ratio: number = 1, interpolation: number = 1) => {\n    if (tintArray === undefined) {\n        return;\n    }\n    for (let i = 0 ; i < tintArray.length; ++i) {\n        const tint = tintArray[i];\n        if(tint) {\n            if (tint['bg1']) {\n                imageFilterPost(ctx, tint['mode'], true, tint['bg0'], interpolation, tint['bg1'], tint['in'], tint['out'], cx, cy, ratio);\n            } else {\n                imageFilterPost(ctx, tint['mode'], false, tint['bg0'], interpolation);\n            }\n        }\n    }\n}\nexport const imageFilterPost = (\n    ctx: CanvasRenderingContext2D, globalCompositeOperation = 'normal', RadialGradient = true, colInner: any = [], interpolation: number = 1, colOuter: any = [], inner = 0.0, outer = 1,\n    cx: number = 0.5, cy: number = 0.5, ratio: number = 1,\n) => {\n    ctx.globalCompositeOperation = globalCompositeOperation as GlobalCompositeOperation;\n    ctx.setTransform(ctx.canvas.width,0,0,ctx.canvas.height,0,0);\n    // for some reason, we need to apply scale factor from CSS(100%) to Canvas Filter(0.65)\n    // 100(CSS) === 0.65(CanvasGradient)\n    const scale = 0.65 * ratio;\n    if (RadialGradient) {\n        let grd = ctx.createRadialGradient(cx, cy, inner * scale , cx, cy, outer * scale);\n        grd.addColorStop(0, `rgba(${colInner[0]},${colInner[1]},${colInner[2]},${linearInterpolate(0, colInner[3], interpolation)})`);\n        grd.addColorStop(1, `rgba(${colOuter[0]},${colOuter[1]},${colOuter[2]},${linearInterpolate(0, colOuter[3], interpolation)})`);\n        ctx.fillStyle = grd;\n    } else {\n        ctx.fillStyle = `rgba(${colInner[0]},${colInner[1]},${colInner[2]},${linearInterpolate(0, colInner[3], interpolation)})`;\n    }\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.globalCompositeOperation = 'source-over';\n    return ctx;\n}\nexport const imageFilterReset = (ctx: CanvasRenderingContext2D) => {\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.filter =`none`;\n}\nexport const getFilterTypePresetByID = (id: number) => {\n    const index = [];\n    for (let i in filterPreset) {\n        index.push(i)\n    }\n    // console.log(index.length)\n    // console.trace();\n    const theIndex = 1 / index.length ;\n    const idPreset = (Math.floor(id / theIndex));\n    return index[idPreset];\n}\nexport const getParamsByPreset = (type: string = 'normal') => {\n    const params: any =  {\n        filters: [\n          ['blur', 0],\n          ['sepia', 0],\n          ['contrast', 1],\n          ['brightness', 1],\n          ['saturate', 1],\n          ['hue-rotate', 0],\n        ],\n      };\n\n    if (type === 'normal') {\n        return params;\n    }\n\n    const target = filterPreset[type];\n    if (target !== undefined && target.filters !== undefined ) {\n        for (let i = 0; i < target.filters.length; ++i) {\n            const key = target.filters[i][0]\n            for (let j = 0 ; j < params.filters.length; ++j) {\n                if (params.filters[j][0] === key) {\n                    params.filters[j][1] = target.filters[i][1];\n                    break;\n                }\n            }\n        }\n    }\n    // params.tints = structuredClone(target.tints);\n    params.tints = target.tints;\n\n    return params\n}\n","export enum ColorHex {\n    Black = '#000000',\n    White = '#ffffff',\n    Aqua = '#00ffff',\n    Azure = '#f0ffff',\n    Beige = '#f5f5dc',\n    Blue = '#0000ff',\n    Brown = '#a52a2a',\n    Cyan = '#00ffff',\n    DarkBlue = '#00008b',\n    DarkCyan = '#008b8b',\n    DarkGrey = '#a9a9a9',\n    DarkGreen = '#006400',\n    DarKhaki = '#bdb76b',\n    DarkMagenta = '#8b008b',\n    DarkOliveGreen = '#556b2f',\n    DarkOrange = '#ff8c00',\n    DarkOrchid = '#9932cc',\n    DarkRed = '#8b0000',\n    DarkSalmon = '#e9967a',\n    DarkViolet = '#9400d3',\n    Fuchsia = '#ff00ff',\n    Gold = '#ffd700',\n    Green = '#008000',\n    Indigo = '#4b0082',\n    Khaki = '#f0e68c',\n    LightBlue = '#add8e6',\n    LightCyan = '#e0ffff',\n    LightGreen = '#90ee90',\n    LightGrey = '#d3d3d3',\n    LightPink = '#ffb6c1',\n    LightYellow = '#ffffe0',\n    Lime = '#00ff00',\n    Magenta = '#ff00ff',\n    Maroon = '#800000',\n    Navy = '#000080',\n    Olive = '#808000',\n    Orange = '#ffa500',\n    Pink = '#ffc0cb',\n    Purple = '#800080',\n    Red = '#ff0000',\n    Silver = '#c0c0c0',\n    Yellow = '#ffff00'\n}\n  export enum ColorBlending {\n    SourceOver = 'source-over',\n    SourceIn = 'source-in',\n    SourceOut = 'source-out',\n    SourceAtop = 'source-atop',\n    Copy = 'copy',\n\n    DestinationOver = 'destination-over',\n    DestinationIn = 'destination-in',\n    DestinationOut = 'destination-out',\n    DestinationAtop = 'destination-atop',\n\n    Lighter = 'lighter',\n    Multiply = 'multiply',\n    Screen = 'screen',\n    Overlay = 'overlay',\n    Darken = 'darken',\n    Lighten = 'lighten',\n    ColorDodge = 'color-dodge',\n    ColorBurn = 'color-burn',\n    HardLight = 'hard-light',\n    SoftLight = 'soft-light',\n    Difference = 'difference',\n    Exclusion = 'exclusion',\n    Hue = 'hue',\n    Saturation = 'saturation',\n    Color = 'color',\n    Luminosity = 'luminosity'\n  }\n","export enum Apps {\n    GuidedTour = 'guidedTour',\n    AnnotationMap = 'annotationMap',\n\n    ExpressMapping = 'expressMapping',\n    ExpressCharting = 'expressCharting',\n    ExpressDrawing = 'expressDrawing',\n\n    AnnotationGlobe = 'annotationGlobe',\n    AnnotationTerrain = 'annotationTerrain',\n    VisualizationBin = 'visualizationBin',\n    Visualization = 'visualization',\n\n    VisualizationMapping = 'visualizationMapping',\n    VisualizationCharting = 'visualizationCharting',\n    ImageEditor = 'imageEditor',\n    Viewer3D = 'viewer3D',\n\n    AnnotationScene = 'annotationScene',\n\n    WallPaper2D = 'wallPaper2D',\n    Annotation3D = 'annotation3D',\n    WallPaper3D = 'wallPaper3D',\n    DrawingTool2D = 'drawingTool2D',\n    DrawingTool3D = 'drawingTool3D',\n}\nexport enum PROJECTION_TYPE {\n    Mercator = 'mercator',\n    SphericalProjection = 'sphericalProjection',\n\n    Orthographic = 'orthographic',\n    ConicEqualArea = 'conicEqualArea',\n    ConicEqualDistance = 'conicEqualDistance',\n    EqualEarth = 'equalEarth',\n    EquiRectangular = 'equiRectangular',\n    Gnomonic = 'gnomonic',\n    ConicConformal = 'conicConformal',\n    StereoGraphics = 'stereoGraphics',\n    AlbersUSA = 'albersUSA',\n}\nexport enum Cursor {\n    Default = 'default',\n    Auto = 'auto',\n    Crosshair = 'crosshair',\n    Move = 'move',\n    Pointer = 'pointer',\n    Text = 'text',\n    Wait = 'wait',\n    Help = 'help',\n    Progress = 'progress',\n    NWSEresize = 'nwse-resize',\n    NESWresize = 'nesw-resize',\n    NSresize = 'ns-resize',\n    EWresize = 'ew-resize',\n}\nexport enum  ActionType {\n    Select = 'select',\n    Undo = 'undo',\n    Redo = 'redo',\n    Deselect = 'deselect',\n    PointerOut = 'pointerOut',\n    SetDrawingMode = 'setDrawingMode',\n    ToggleMapfilter = 'toggleMapfilter',\n    ToggleQuickActions = 'toggleQuickActions',\n    ChangeTheme = 'changeTheme',\n    ToggleDrawingTooltips = 'toggleDrawingTooltips',\n    ToggleGrid = 'toggleGrid',\n    ToggleMeasure = 'toggleMeasure',\n    ShiftUnit = 'shiftUnit',\n    DumpIconsBase64s = 'dumpIconsBase64s',\n    AddIconBase64  = 'addIconBase64',\n    SelectIconBase64 = 'selectIconBase64',\n    ActiveColorId = 'activeColorId',\n    // DumpIcons = 'dumpIcons',\n    // AddBase64 = 'addBase64',\n    // SelectBase64 = 'selectBase64',\n    InclusiveSelect = 'inclusiveSelect',\n    InclusiveDeselect = 'inclusiveDeselect',\n    ExclusiveSelect = 'exclusiveSelect',\n    ExclusiveDeselect = 'exclusiveDeselect',\n    ReorderNumberedPoints = 'reorderNumberedPoints',\n    ReorderNumberedTourPoints = 'reorderNumberedTourPoints',\n    Remove = 'remove',\n    RemoveSelected = 'removeSelected',\n    Update = 'update',\n    Unhighlight = 'unhighlight',\n    Hover = 'hover',\n    Unhover = 'unhover',\n    Enter = 'enter',\n    Leave = 'leave',\n    Show = 'show',\n    Hide = 'hide',\n    HidePopup = 'hidePopup',\n    ShowPopup = 'showPopup',\n    Dump = 'dump',\n    InitGhost = 'initGhost',\n    EnterGhost = 'enterGhost',\n    LeaveGhost = 'leaveGhost',\n    ShowGhostPopup = 'showGhostPopup',\n    HideGhostPopup = 'hideGhostPopup',\n    AddGhost = 'addGhost',\n    Add = 'add',\n    Transform = 'transform',\n    RemoveGhost = 'removeGhost',\n    ShowText = 'showText',\n    HideText = 'hideText',\n    StartEditingText = 'startEditingText',\n    EndEditingText = 'endEditingText',\n    PolylineConstraintLength = 'polylineConstraintLength',\n    PolylineConstraintLengthPercentage = 'polylineConstraintLengthPercentage',\n    // .................................\n    /** Tour map specific: make any other geometries un-interactive (cannot hover, click, drag, etc.). Used in editor */\n    DisableExcept = 'disableExcept',\n    /** Tour map specific: highlight one single geometry on the map, while others are inactive. Used in viewer */\n    Highlight = 'highlight',\n    Style = 'style',\n    ClusteringPoint = 'clusteringPoint',\n    TEMPLoadImage = 'loadImage',\n}\nexport enum Linecap {\n    Round = 'round',\n    Butt = 'butt',\n    Square = 'square'\n}\nexport enum MLModelType {\n    None = 'none',\n    DeepLearning = 'deepLearning'\n}\nexport enum RendererType {\n    Svg = 'svg',\n    Canvas = 'canvas',\n    Three = 'three',\n    webgl = 'webgl',\n    Webgl2 = 'webgl2',\n    WebGPU = 'webGPU',\n}\nexport enum Optimizer {\n    Regular = 'regular', DouglasPeucker = 'douglasPeucker',\n}\nexport enum OptimizerTextleaderline {\n    None = 'none', Zoom = 'zoom', Collision = 'collision', Agent = 'agent',\n}\nexport enum OptimizerPoint {\n    None = 'none', Zoom = 'zoom', Collision = 'collision', Agent = 'agent', Grid = 'grid',\n}\nexport enum PointRenderType {\n    RpointA = 'rPointA', RpointB = 'rPointB', Image = 'image',\n}\n\nexport enum CompileMode {\n    Production = 'production', Development = 'development', Local = 'local'\n}\nexport enum InteractionMode {\n    Drawing = 'drawing', InteractiveViewer = 'interactiveViewer', ObserveViewer = 'observeViewer'\n}\n\nexport enum BrowserType {\n    Opera = 'opera',\n    Chrome = 'chrome',\n    Safari = 'safari',\n    Firefox = 'firefox',\n    Ie = 'ie',\n    Edge = 'edge',\n    Unknown = 'unknown',\n}\nexport enum PressType {\n    Up = 'up', Down = 'down'\n}\nexport enum ClickType {\n    Left = 'left', Middle = 'middle', Right = 'right', Wheel = 'wheel',\n    Drag = 'drag', DragLeft = 'dragLeft', DragMiddle = 'dragMiddle', DragRight = 'dragRight',\n    Move = 'move', Double = 'double', Up = 'up',\n    Down = 'down', DownMiddle = 'downMiddle', DownRight = 'downRight'\n}\nexport enum TouchType {\n    Start = 'start', End = 'end', Move = 'move', Cancel = 'cancel'\n}\nexport enum EventListenerType { Native = 'native', JSAPI4X = 'JSAPI4X' }\n// ..........................................................................................\nexport enum FHType {\n    Curve = 'curve', CurveClosed = 'curveClosed', Line = 'line', Polyline = 'polyline', PolylineBending = 'polylineBending',\n    Polygon = 'polygon', PolygonGraph = 'polygonGraph',\n    PolylineGon = 'polylineGon', Smooth = 'smooth', SmartDrawing = 'smartDrawing'\n}\nexport enum TextBox {\n    Wrap = 'Wrap', LineBreak = 'lineBreak', Normal = 'normal'\n}\nexport enum TextAlign {\n    Start = 'start', End = 'end', Left = 'left', Center = 'center', Right = 'right'\n}\n","export enum Environment {\n    AGSM ='agsm',\n    SMX ='smx',\n    Standalone = 'standalone'\n}\nexport enum Filters {\n    blur = 'blur',\n    sepia = 'sepia',\n    contrast = 'contrast',\n    brightness = 'brightness',\n    saturate = 'saturate',\n    hueRotate = 'hue-rotate',\n    none = 'none',\n}\nexport enum ExpressImageAppType {\n    Editing = 'editing',\n    Effecting = 'effecting',\n    Drawing = 'drawing',\n    Viewer = 'viewer',\n};\nexport enum ImageType {\n    Jpeg = 'jpeg',\n    Png = 'png',\n}\nexport enum ProcessorType {\n    Css = 'css',\n    Img = 'img',\n};\nexport enum FrameShapeType {\n    Circle = 'circle',\n    Rectangle = 'rectangle',\n    RectangleRounded = 'rectangleRounded',\n    Star = 'star',\n    Diamond = 'diamond',\n}\nexport enum FrameRatioPreset {\n    Freeform = 'freeform',\n    Original = 'original',\n    Square = 'square',\n    Portrait = 'portrait',\n    Landscape = 'landscape',\n\n    Fixed_3_2 = '3 x 2',\n    Fixed_4_3 = '4 x 3',\n    Fixed_16_9 = '16 x 9',\n}\n","export enum ActiveCommandMode {\n    // NONE = 'NONE', SELECT = 'SELECT', REMOVE = 'REMOVE', SELECT_RECT = 'SELECT_RECT', SELECT_LASSO = 'SELECT_LASSO', MOVE_EASEING = 'MOVE_EASEING', UNDO = 'UNDO', REDO = 'REDO',\n    // // .............................. shape\n    // POINT_REGULAR = 'POINT_REGULAR', POINT_NUMBERED = 'POINT_NUMBERED',\n    // POLYLINE = 'POLYLINE', POLYLINE_CONSTRAINT = 'POLYLINE_CONSTRAINT',\n    // POLYGON = 'POLYGON', POLYGON_MULTIPLE = 'POLYGON_MULTIPLE', POLYGON_CONSTRAINT = 'POLYGON_CONSTRAINT',\n    // POLYLINE_BENDING = 'POLYLINE_BENDING', LINE_GRAPH = 'LINE_GRAPH',\n    // CIRCLE = 'CIRCLE', CIRCLE_CONSTRAINT_AREA = 'CIRCLE_CONSTRAINT_AREA', CIRCLE_CONSTRAINT_CIRCUMFERENCE = 'CIRCLE_CONSTRAINT_CIRCUMFERENCE',\n    // RECTANGLE = 'RECTANGLE',\n    // POINT_ICON = 'POINT_ICON', TEXT = 'TEXT', TEXT_LEADERLINE = 'TEXT_LEADERLINE',\n    // ARROW_SINGLE = 'ARROW_SINGLE', ARROW_DOUBLE = 'ARROW_DOUBLE',\n    // CURVE = 'CURVE', CURVE_OPEN = 'CURVE_OPEN', CURVE_CLOSE = 'CURVE_CLOSE',\n    // FREEHAND_POLYLINE = 'FREEHAND_POLYLINE', FREEHAND_CURVE = 'FREEHAND_CURVE',\n    // SMARTDRAWING = 'SMARTDRAWING', SMARTDRAWING_DEEPLEARNING = 'SMARTDRAWING_DEEPLEARNING',\n    // LINE = 'LINE',\n    // // .............................. geometry\n    // CPOINT_REGULAR = 'CPOINT_REGULAR', CPOINT_NUMBERED = 'CPOINT_NUMBERED',\n    // CLINE = 'CLINE', CPOLYLINE = 'CPOLYLINE', CPOLYGON = 'CPOLYGON', CLINE_TOOGLE = 'CLINE_TOOGLE',\n    // CARC = 'CARC', CCIRCLE = 'CCIRCLE', CRECTANGLE = 'CRECTANGLE', CNGON = 'CNGON', CSTAR = 'CSTAR',\n    // CCURVE = 'CCURVE', CCURVE_CLOSE = 'CCURVE_CLOSE',\n    // CFREEHAND_POLYLINE = 'CFREEHAND_POLYLINE', CFREEHAND_CURVE = 'CFREEHAND_CURVE', CFREEHAND_LINE = 'CFREEHAND_LINE', CFREEHAND_SMARTDRAWING = 'CFREEHAND_SMARTDRAWING',\n    // CFREEHAND_SMOOTH = 'CFREEHAND_SMOOTH', CRECTANGLE_CROP = 'CRECTANGLE_CROP',\n    // // .............................. internal\n    // CPOINT = 'CPOINT', CNODE = 'CNODE', CEDGE = 'CEDGE',\n\n    NONE = 'NONE', SELECT = 'SELECT', REMOVE = 'REMOVE', SELECT_RECT = 'SELECT_RECT', SELECT_LASSO = 'SELECT_LASSO', MOVE_EASING = 'MOVE_EASING', UNDO = 'UNDO', REDO = 'REDO',\n    // .............................. shape\n    POINT_REGULAR = 'POINT_REGULAR', POINT_NUMBERED = 'POINT_NUMBERED',\n    POLYLINE = 'POLYLINE', FREEHAND_POLYLINE_BENDING = 'FREEHAND_POLYLINE_BENDING', POLYLINE_CONSTRAINT = 'POLYLINE_CONSTRAINT',\n    POLYGON = 'POLYGON', POLYGON_GRAPH = 'POLYGON_GRAPH',\n    POLYGON_MULTIPLE = 'POLYGON_MULTIPLE', POLYGON_CONSTRAINT = 'POLYGON_CONSTRAINT',\n    POLYLINE_BENDING = 'POLYLINE_BENDING', LINE_GRAPH = 'LINE_GRAPH',\n    CIRCLE = 'CIRCLE', CIRCLE_CONSTRAINT_AREA = 'CIRCLE_CONSTRAINT_AREA', CIRCLE_CONSTRAINT_CIRCUMFERENCE = 'CIRCLE_CONSTRAINT_CIRCUMFERENCE',\n    RECTANGLE = 'RECTANGLE',\n    POINT_ICON = 'POINT_ICON', TEXT = 'TEXT', TEXT_LEADERLINE = 'TEXT_LEADERLINE',\n    STAR = 'STAR',\n    ARROW_SINGLE = 'ARROW_SINGLE', ARROW_DOUBLE = 'ARROW_DOUBLE',\n    CURVE = 'CURVE', CURVE_OPEN = 'CURVE_OPEN', CURVE_CLOSE = 'CURVE_CLOSE',\n    FREEHAND_POLYLINE = 'FREEHAND_POLYLINE', FREEHAND_POLYGON = 'FREEHAND_POLYGON', FREEHAND_POLYGON_GRAPH = 'FREEHAND_POLYGON_GRAPH',\n    FREEHAND_CURVE = 'FREEHAND_CURVE', FREEHAND_CURVE_CLOSED = 'FREEHAND_CURVE_CLOSED',\n    SMARTDRAWING = 'SMARTDRAWING', SMARTDRAWING_DEEPLEARNING = 'SMARTDRAWING_DEEPLEARNING',\n    LINE = 'LINE',\n\n    APOINT = 'APOINT',\n    // .............................. geometry\n    CPOINT_REGULAR = 'CPOINT_REGULAR', CPOINT_NUMBERED = 'CPOINT_NUMBERED',\n    CLINE = 'CLINE', CPOLYLINE = 'CPOLYLINE', CPOLYGON = 'CPOLYGON', CLINE_TOOGLE = 'CLINE_TOOGLE',\n    CARC = 'CARC', CCIRCLE = 'CCIRCLE', CRECTANGLE = 'CRECTANGLE', CNGON = 'CNGON', CSTAR = 'CSTAR',\n    CCURVE = 'CCURVE', CCURVE_CLOSE = 'CCURVE_CLOSE',\n    CFREEHAND_POLYLINE = 'CFREEHAND_POLYLINE', CFREEHAND_CURVE = 'CFREEHAND_CURVE', CFREEHAND_LINE = 'CFREEHAND_LINE', CFREEHAND_SMARTDRAWING = 'CFREEHAND_SMARTDRAWING',\n\n    CFREEHAND_SMOOTH = 'CFREEHAND_SMOOTH', CRECTANGLE_CROP = 'CRECTANGLE_CROP',\n    // .............................. internal\n    CPOINT = 'CPOINT', CNODE = 'CNODE', CEDGE = 'CEDGE',\n    // ..............................\n    SVG_TOUR_POINT = 'SVG_TOUR_POINT', SVG_TOUR_LINE = 'SVG_TOUR_LINE',\n    // ..............................\n    LINE_SPIKE = 'LINE_SPIKE', CIRCLE_TRAJECTORY = 'CIRCLE_TRAJECTORY', ARC_SPIKE = 'ARC_SPIKE',\n    // .............................. Guided Tour\n    POINT_REGULAR_TOUR = 'POINT_REGULAR_TOUR', POINT_NUMBERED_TOUR = 'POINT_NUMBERED_TOUR',\n};\n// for persisted data\nexport enum GType {\n    POINT_REGULAR = 'POINT_REGULAR', POINT_NUMBERED = 'POINT_NUMBERED', POINT_ICON = 'POINT_ICON',\n    POINT_REGULAR_TOUR = 'POINT_REGULAR_TOUR', POINT_NUMBERED_TOUR = 'POINT_NUMBERED_TOUR',\n    POLYLINE = 'POLYLINE', POLYLINE_BENDING = 'POLYLINE_BENDING',\n    POLYGON = 'POLYGON', POLYGON_DEPRECATED = 'POLYGON_DEPRECATED', POLYGON_GRAPH = 'POLYGON_GRAPH', POLYGON_MULTIPLE = 'POLYGON_MULTIPLE',\n    CIRCLE = 'CIRCLE', RECTANGLE = 'RECTANGLE', AN_GON = 'AN_GON',\n    ARROW_SINGLE = 'ARROW_SINGLE', ARROW_DOUBLE = 'ARROW_DOUBLE', TEXT = 'TEXT', CATEXT = 'CATEXT',\n    TEXT_LEADERLINE = 'TEXT_LEADERLINE',\n\n    APOINT = 'APOINT', AMIDPOINT = 'AMIDPOINT', ANODE = 'ANODE', APOINT_PATH = 'APOINT_PATH', ANODE_RECT = 'ANODE_RECT',\n    ANODE_CIRCLE = 'ANODE_CIRCLE', ANODE_NGON = 'ANODE_NGON', ANODE_TEXT = 'ANODE_TEXT',\n    AMIDPOINT_ALINE = 'AMIDPOINT_ALINE',\n\n    CURVE = 'CURVE', CURVE_OPEN = 'CURVE_OPEN', CURVE_CLOSE = 'CURVE_CLOSE',\n    FREEHAND_POLYLINE = 'FREEHAND_POLYLINE', FREEHAND_CURVE = 'FREEHAND_CURVE',\n    SMARTDRAWING = 'SMARTDRAWING',\n    ALINE = 'ALINE',\n\n    CPOINT = 'CPOINT', CMIDPOINT = 'CMIDPOINT', CNODE = 'CNODE', CNODE_RECT = 'CNODE_RECT', CNODE_CIRCLE = 'CNODE_CIRCLE', CNODE_NGON = 'CNODE_NGON', CNODE_TEXT = 'CNODE_TEXT',\n    CPOINT_REGULAR = 'CPOINT_REGULAR', CPOINT_NUMBERED = 'CPOINT_NUMBERED',\n    CLINE = 'CLINE', CEDGE = 'CEDGE',\n    CPOLYLINE = 'CPOLYLINE', CPOLYGON = 'CPOLYGON', CRECTANGLE = 'CRECTANGLE', CN_GON = 'CN_GON', CN_STAR = 'CN_STAR',\n    CARC = 'CARC', CCIRCLE = 'CCIRCLE', CCURVE = 'CCURVE', CCURVE_OPEN = 'CCURVE_OPEN', CCURVE_CLOSED = 'CCURVE_CLOSED',\n    CBLACKHOLE = 'CBLACKHOLE', CFREEHAND = 'CFREEHAND', COTHERS = 'COTHERS'\n};\nexport enum Size {\n    SMALL = 'SMALL', MEDIUM = 'MEDIUM', LARGE = 'LARGE',\n};\nexport enum ENGINE {\n    Canvas = 'Canvas', // default\n    WebGL2 = 'WebGL2',\n    WebGPU = 'WebGPU',\n    WebAssembly = 'WebAssembly',\n};\n","export enum Unit {\n    Meter = 'meter', Kilometer = 'kilometer', Centimeter = 'centimeter',\n    Millimeter = 'millimeter', Micrometer = 'micrometer', Nanometer = 'nanometer',\n    Mile = 'mile', Yard = 'yard', Foot = 'foot', Inch = 'inch'\n  };\n","import { FrameShapeType } from '../Enum/EnumExpressImage'\nimport { getFiltersString } from '../Color/ImageFilterPreset';\nexport const trimContextByShape = (ctx: CanvasRenderingContext2D, frameShapeType: FrameShapeType, x: number, y: number, width: number, height: number, offset = true, invert = false) => {\n    if (!offset) {\n        x = 0;\n        y = 0;\n    }\n    ctx.beginPath();\n    if (!invert) {\n        ctx.rect(-1, -1, ctx.canvas.width + 2, ctx.canvas.height + 2);\n    }\n    switch (frameShapeType) {\n        case FrameShapeType.RectangleRounded:\n            const angle = 3.14 * 0.5;\n\n            // const r = 100; // const value\n            let r = (width + height) * 0.5 * 0.05; // dynamic value by the size of image\n            r = r > width * 0.5 ? width * 0.5 - 10 : r;\n            r = r > height * 0.5 ? height * 0.5 - 10 : r;\n\n            ctx.moveTo(x, y);\n            ctx.arc(x + width - r, y + r, r, angle * 3 , angle * 4 , false);\n            ctx.arc(x + width - r, y + height - r, r, angle * 0 , angle * 1 , false);\n            ctx.arc(x + r, y + height - r, r, angle * 1 , angle * 2 , false);\n            ctx.arc(x + r, y + r, r, angle * 2 , angle * 3 , false);\n            break;\n        case FrameShapeType.Circle:\n            const widthHalf = width * 0.5;\n            const heightHalf = height * 0.5;\n            ctx.ellipse(x +  widthHalf, y + heightHalf, widthHalf, heightHalf, 0, 0, Math.PI * 2);\n            break;\n        default:\n            ctx.rect(x, y, width, height);\n            break;\n        }\n    ctx.closePath();\n    ctx.fill('evenodd');\n};\nexport const cutOutContextByShape = (ctx: CanvasRenderingContext2D, frameShapeType: FrameShapeType, x: number, y: number, width: number, height: number, offset = true, invert = false) => {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n    trimContextByShape(ctx, frameShapeType, x, y, width, height, offset, invert);\n    ctx.globalCompositeOperation = 'source-over';\n    return ctx;\n};\nexport const maskOutContextByShape = (ctx: CanvasRenderingContext2D, frameShapeType: FrameShapeType, x: number, y: number, width: number, height: number, offset = true) => {\n    return cutOutContextByShape(ctx, frameShapeType, x, y, width, height, offset, true);\n};\nexport const canvasMergeImg = (img: HTMLImageElement, layerCanvas: HTMLCanvasElement, width: number, height: number) => {\n    const canvasOut = document.createElement('canvas');\n    // canvasOut.width = img.width;\n    // canvasOut.height = img.height;\n    canvasOut.width = width;\n    canvasOut.height = height;\n\n    const ctxOut = canvasOut.getContext('2d') as CanvasRenderingContext2D;\n    ctxOut.drawImage(img, 0, 0, width, height);\n    ctxOut.drawImage(layerCanvas, 0, 0, width, height);\n\n    const imgOut = new Image();\n    imgOut.src = canvasOut.toDataURL();\n    return imgOut;\n};\nexport const downloadImage = (img: HTMLImageElement, imgTitle: string = 'myImage') => {\n    const link = document.createElement('a');\n    link.download = `${imgTitle}.png`;\n    link.href = img.src;\n    link.click();\n};\nexport const canvasFilter = (ctx: CanvasRenderingContext2D, data: any, x: number, y: number) => {\n    const canvas = ctx.canvas;\n    // console.log(canvas, data)\n    const canvasOut = document.createElement('canvas');\n    canvasOut.width = canvas.width;\n    canvasOut.height = canvas.height;\n    const ctxOut = canvasOut.getContext('2d') as CanvasRenderingContext2D;\n    const filter = getFiltersString(data.filters, data.inter)\n    ctxOut.filter = filter;\n    ctxOut.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n    // ctxOut.filter = 'none';\n    return ctxOut;\n};\n","import { Cursor } from '../Enum/EnumCommon';\nexport class ActiveCursor {\n    public div: HTMLElement|undefined;\n    constructor(div?: HTMLElement) {\n        this.div = div;\n    }\n    public default() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.Default) { this.div.style.cursor = Cursor.Default; }\n        } else {\n            if (document.body.style.cursor !== Cursor.Default) { document.body.style.cursor = Cursor.Default; }\n        }\n    }\n    public auto() {\n      if (this.div) {\n          if (this.div.style.cursor !== Cursor.Auto) { this.div.style.cursor = Cursor.Auto; }\n      } else {\n          if (document.body.style.cursor !== Cursor.Auto) { document.body.style.cursor = Cursor.Auto; }\n      }\n  }\n    public creating() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.Crosshair) { this.div.style.cursor = Cursor.Crosshair; }\n        } else {\n            if (document.body.style.cursor !== Cursor.Crosshair) { document.body.style.cursor = Cursor.Crosshair; }\n        }\n    }\n    public dragging() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.Move) { this.div.style.cursor = Cursor.Move; }\n        } else {\n            if (document.body.style.cursor !== Cursor.Move) { document.body.style.cursor = Cursor.Move; }\n        }\n    }\n    public hovering() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.Pointer) { this.div.style.cursor = Cursor.Pointer; }\n        } else {\n            if (document.body.style.cursor !== Cursor.Pointer) { document.body.style.cursor = Cursor.Pointer; }\n        }\n    }\n    public texting() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.Text) { this.div.style.cursor = Cursor.Text; }\n        } else {\n            if (document.body.style.cursor !== Cursor.Text) { document.body.style.cursor = Cursor.Text; }\n        }\n    }\n    public set_nwse_resize() {\n    if (this.div) {\n        if (this.div.style.cursor !== Cursor.NWSEresize) { this.div.style.cursor = Cursor.NWSEresize; }\n    } else {\n        if (document.body.style.cursor !== Cursor.NWSEresize) { document.body.style.cursor = Cursor.NWSEresize; }\n    }\n    }\n    public set_nesw_resize() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.NESWresize) { this.div.style.cursor = Cursor.NESWresize; }\n        } else {\n            if (document.body.style.cursor !== Cursor.NESWresize) { document.body.style.cursor = Cursor.NESWresize; }\n        }\n    }\n    public set_ns_resize() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.NSresize) { this.div.style.cursor = Cursor.NSresize; }\n        } else {\n            if (document.body.style.cursor !== Cursor.NSresize) { document.body.style.cursor = Cursor.NSresize; }\n        }\n    }\n    public set_ew_resize() {\n        if (this.div) {\n            if (this.div.style.cursor !== Cursor.EWresize) { this.div.style.cursor = Cursor.EWresize; }\n        } else {\n            if (document.body.style.cursor !== Cursor.EWresize) { document.body.style.cursor = Cursor.EWresize; }\n        }\n    }\n}\n","export const eps: number = 0.0000001;\nexport class NVector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    constructor(x: number, y: number, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    public mult(v: number): NVector3 {\n        this.x *= v;\n        this.y *= v;\n        this.z *= v;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public divByVal(v: number): NVector3 {\n        this.x /= v;\n        this.y /= v;\n        this.z /= v;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public add(v: NVector3): NVector3 {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public sub(v: NVector3): NVector3 {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public unitize(): NVector3 {\n        return this.normalize();\n    }\n    public normalize(): NVector3 {\n        let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        if (len < 0.0001) {\n            return this;\n        }\n        this.x = this.x / len;\n        this.y = this.y / len;\n        this.z = this.z / len;\n        return this;\n    }\n}\n","import { Environment } from '../Enum/EnumExpressImage';\nimport { NVector3 } from '../Geometry/NVector3';\nimport { GType } from '../Enum/EnumPersisted';\nimport { readableColor } from 'polished';\nexport type Position = {\n    sx: number,\n    sy: number\n};\nexport const contextMergeImgDrawing = (ctx: CanvasRenderingContext2D, drawingDataSet: any, scale: number, x: number, y: number, environment: Environment | undefined, svgRPoint: Path2D | undefined,  svgNPoint: Path2D | undefined) => {\n    const canvasOut = document.createElement('canvas');\n    canvasOut.width = ctx.canvas.width;\n    canvasOut.height = ctx.canvas.height;\n    const ctxOut = canvasOut.getContext('2d') as CanvasRenderingContext2D;\n    ctxOut.imageSmoothingQuality = 'high';\n    ctxOut.drawImage(ctx.canvas, 0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // debugger\n    // console.log('=========== canvasMergeImgDrawing ===========');\n    // console.log(drawingDataSet, ctx.canvas.width, ctx.canvas.height, x, y)\n    // ctxOut.beginPath();\n    // ctxOut.arc(100 - x, 100 - y, 100, 0, 3.14 * 2);\n    // ctxOut.closePath();\n    // ctxOut.fillStyle = '#f00';\n    // ctxOut.fill();\n    const drawingData = drawingDataSet.geometry;\n\n    const offset = [x, y];\n    if (drawingData) {\n        let index = drawingData.length;\n        // console.log(index);\n        while(index--) {\n            const d = drawingData[index];\n            const scaleLocal = d.styles.width * scale * d.styles.scale\n            // console.log(d)\n            switch (d.type) {\n                case GType.POINT_REGULAR:\n                    renderRPoint(ctxOut, d.nodes, svgRPoint, d.styles.colorRgba, offset, scale * d.styles.scale, -36 * 0.25, -28);\n                    break;\n                case GType.POINT_NUMBERED:\n                    if (environment === Environment.AGSM) {\n                        renderNPointCircle(ctxOut, d.nodes, d.styles.colorRgba, d.styles.number, offset, scale * d.styles.scale, 0, 0);\n                    } else {\n                        renderNPoint(ctxOut, d.nodes, svgNPoint, d.styles.colorRgba, d.styles.number, offset, scale * d.styles.scale, -36 * 0.365, -28);\n                        // renderNPoint(ctxOut, d.nodes, svgNPoint, d.styles.colorRgba, offset, scale * d.styles.scale, -29 * 0.5, -29);\n                    }\n                    break;\n                case GType.POLYLINE_BENDING:\n                    if (d.nodes.length > 1) {\n                        renderPolyline(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    }\n                    break;\n                case GType.POLYGON_GRAPH:\n                    renderPolygon(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    break;\n                case GType.RECTANGLE:\n                    renderPolygon(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    break;\n                case GType.CIRCLE:\n                    renderCircle(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    break;\n                case GType.ARROW_SINGLE:\n                    renderArrowSingle(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    break;\n                case GType.ARROW_DOUBLE:\n                    renderArrowDouble(ctxOut, d.nodes, d.styles.colorRgba, offset, scaleLocal);\n                    break;\n                default:\n                    break;\n            }\n\n        }\n    }\n    return ctxOut;\n};\n\nexport const renderVertex = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, r: number = 0.5) => {\n    const angle = 3.14 * 0.5;\n    ctx.beginPath();\n    ctx.arc(x + width - r, y - height + r, r, angle * 3 , angle * 4 , false);\n    ctx.arc(x + width - r, y + height - r, r, angle * 0 , angle * 1 , false);\n    ctx.arc(x - width + r, y + height - r, r, angle * 1 , angle * 2 , false);\n    ctx.arc(x - width + r, y - height + r, r, angle * 2 , angle * 3 , false);\n    ctx.closePath();\n    ctx.strokeStyle  = '#000000';\n    ctx.fillStyle   = '#ffffff';\n    ctx.fill();\n    ctx.stroke();\n};\n\nexport const renderRPointProjected = (ctx: CanvasRenderingContext2D, pos: Position[], path: any, color: number[], offset: number[] =  [0, 0], scale: number = 1, xOff: number = -32 * 0.25, yOff: number = -32) => {\n    // let r = 32 * scale * 0.5;\n    ctx.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 1)`;\n    // ctx.beginPath();\n    // ctx.arc(pos[0].sx, pos[0].sy - r, r, 0, 3.14 * 2);\n    // ctx.closePath();\n    // console.log(path);\n    ctx.save();\n    ctx.translate(\n        pos[0].sx + xOff * scale - offset[0],\n        pos[0].sy + yOff * scale - offset[1]\n        );\n    ctx.scale(scale, scale);\n    ctx.fill(path);\n    ctx.restore();\n};\nexport const renderRPoint = (ctx: CanvasRenderingContext2D, pos: Position[], path: any, color: number[], offset: number[] =  [0, 0], scale: number = 1, xOff: number = -32 * 0.25, yOff: number = -32) => {\n    // let r = 32 * scale * 0.5;\n    ctx.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 1)`;\n    // ctx.beginPath();\n    // ctx.arc(pos[0].sx, pos[0].sy - r, r, 0, 3.14 * 2);\n    // ctx.closePath();\n    // console.log(path);\n    // console.log(scale)\n    ctx.save();\n    // scale = 1;\n    ctx.translate(\n        pos[0].sx + xOff * scale - offset[0],\n        pos[0].sy + yOff * scale - offset[1]\n    );\n    // ctx.translate(pos[0].sx + xOff * scale - offset[0] * scale, pos[0].sy + yOff * scale - offset[1] * scale);\n    ctx.scale(scale, scale)\n    ctx.fill(path);\n    ctx.restore();\n};\n\nexport const renderNPointCircle = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], indexNumber: number, offset: number[] =  [0, 0], scale: number = 1, xOff: number = -32 * 0.25, yOff: number = -32) => {\n    const height = 26 + scale; //this.shape.draw.renderer.imageAnnoApp.customization.themeCurrent.nPoint.height * scale;\n    // const scaleFactor = this.shape.draw.renderer.imageAnnoApp.customization.themeCurrent.nPoint.scale;\n    // console.log('height' ,height * scale * 0.5);\n\n    const bgColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.fillStyle = bgColor;\n    ctx.save();\n    ctx.translate(\n        pos[0].sx + xOff * scale - offset[0],\n        pos[0].sy + yOff * scale - offset[1]\n    );\n    ctx.scale(scale, scale);\n\n    ctx.beginPath();\n    ctx.arc(0, 0 - height * 0.5, height * 0.5, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n\n    drawText(ctx, pos, bgColor, indexNumber, offset, scale, 20);\n};\nexport const renderNPoint = (ctx: CanvasRenderingContext2D, pos: Position[], path: any, color: number[], indexNumber: number, offset: number[] =  [0, 0], scale: number = 1, xOff: number = -32 * 0.25, yOff: number = -32) => {\n    // let r = 32 * scale * 0.5;\n    // ctx.fillStyle = 'rgba(8, 127, 155, 1)';\n    // ctx.beginPath();\n    // ctx.arc(pos[0].sx - offset[0], pos[0].sy - offset[1] - r, r, 0, 3.14 * 2);\n    // ctx.closePath();\n    // ctx.fill();\n    const bgColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.fillStyle = bgColor;\n    ctx.save();\n    ctx.translate(\n        pos[0].sx + xOff * scale - offset[0],\n        pos[0].sy + yOff * scale - offset[1]\n    );\n    ctx.scale(scale, scale)\n    ctx.fill(path);\n\n    ctx.restore();\n    drawText(ctx, pos, bgColor, indexNumber, offset, scale);\n};\nconst drawText = (ctx: CanvasRenderingContext2D, pos: Position[], bgColor: string, indexNumber: number, offset: number[], scale: number = 1, yPosTune = 28) => {\n    const fontType = 'Avenir Next'\n    const fontScale = 10 * scale ;\n    // const theFont = `${this.geo.scene.annotationInstance.renderer.imageAnnoApp.customization.themeCurrent.nPoint.fontSize * scale }px ${this.geo.scene.annotationInstance.renderer.imageAnnoApp.customization.themeCurrent.nPoint.fontFamily}`;\n    const theFont = `${fontScale}px ${fontType}`;\n    // ctx.font = theFont; // '10px Arial';\n    // if (this.shape.preset.regularPointColorHover === '#ffffff') { ctx.fillStyle = ColorHex.Black; } else { ctx.fillStyle = '#ffffff'; }\n    // const col = this.geo.scene.annotationInstance.renderer.imageAnnoApp.customization.themeCurrent.nPoint.fontColorArray;\n    // if (this.host.isHoverValue || this.host.isSelectedValue) {\n    //   ctx.fillStyle = `rgba(${col[0]}, ${col[1]}, ${col[2]}, ${col[3]})`;\n    // } else {\n    //   ctx.fillStyle = `rgba(${col[0]}, ${col[1]}, ${col[2]}, ${col[3] - 0.3})`;\n    // }\n    // console.log('offset', offset);\n    ctx.textAlign = 'center'; // 'start', 'end', 'left', 'center', 'right';\n    // ctx.fillText(this.host.GetIndex().toString(), x - 1.5, y - (32 * scale  * 0.5) + 1);\n    ctx.fillStyle = readableColor(bgColor);\n    ctx.font = theFont\n    ctx.fillText(indexNumber.toString(),\n        pos[0].sx - offset[0], //- xOff * scale, // - offset[0],\n        pos[0].sy - offset[1] - (yPosTune * scale  * 0.5), // - yOff * scale, // - offset[1]\n    ); // 0 - (28 * scale  * 0.5)); // - (32 * scale  * 0.5) + 1);\n\n    // ctx.fillText(this.host.getIndex().toString(), x, y - (28 * scale  * 0.5));\n\n\n    // ctx.fillText('11', 0, 0);\n    // ctx.stroke()\n};\nexport const renderPolyline = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], offset: number[] =  [0, 0], scale: number = 1) => {\n    ctx.strokeStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.lineWidth = scale;\n    ctx.beginPath();\n    ctx.moveTo(pos[0].sx - offset[0], pos[0].sy - offset[1]);\n    for (let i = 1 ; i < pos.length; ++i) {\n        ctx.lineTo(pos[i].sx - offset[0], pos[i].sy - offset[1]);\n    }\n    ctx.lineCap = 'round';\n    ctx.stroke();\n    ctx.lineCap = 'butt';\n};\nexport const renderPolygon = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], offset: number[] =  [0, 0], scale: number = 1) => {\n    // console.log('renderPolygon', color);\n    ctx.fillStyle = 'rgba(8, 127, 155, 0.3)';\n    ctx.strokeStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.lineWidth = scale;\n    ctx.beginPath();\n    ctx.moveTo(pos[0].sx - offset[0], pos[0].sy - offset[1]);\n    for (let i = 1 ; i < pos.length; ++i) {\n        ctx.lineTo(pos[i].sx - offset[0], pos[i].sy - offset[1]);\n    }\n    ctx.closePath();\n    // ctx.fill();\n    ctx.stroke();\n};\nexport const renderCircle = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], offset: number[] =  [0, 0], scale: number = 1) => {\n    const col = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    // ctx.fillStyle = 'rgba(8, 127, 155, 0.3)';\n    ctx.strokeStyle = col;\n    ctx.lineWidth = scale;\n    const rX = (pos[2].sx - pos[0].sx) * 0.5 ;\n    const rY = (pos[2].sy - pos[0].sy) * 0.5 ;\n    const x = pos[0].sx + rX - offset[0];\n    const y = pos[0].sy + rY - offset[1];\n    ctx.beginPath();\n    ctx.ellipse(x,y, rX, rY, 0, 0, 2 * Math.PI);\n    ctx.closePath();\n    // ctx.fill();\n    ctx.stroke();\n};\nexport const renderArrowSingle = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], offset: number[] =  [0, 0], scale: number = 1) => {\n    const col = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.strokeStyle = col;\n    ctx.fillStyle = col;\n    ctx.lineWidth = scale;\n    arrow(ctx, pos, offset, scale, false);\n};\nexport const renderArrowDouble = (ctx: CanvasRenderingContext2D, pos: Position[], color: number[], offset: number[] =  [0, 0], scale: number = 1) => {\n    const col = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    ctx.strokeStyle = col;\n    ctx.fillStyle = col;\n    ctx.lineWidth = scale;\n    arrow(ctx, pos, offset, scale, true);\n};\nconst arrow = (ctx: CanvasRenderingContext2D, pos: Position[], offset: number[] =  [0, 0], scale: number = 1, single: boolean = false ) => {\n    const arrayVertices = [pos[0].sx - offset[0], pos[0].sy - offset[1], pos[1].sx - offset[0], pos[1].sy - offset[1], pos[2].sx - offset[0], pos[2].sy - offset[1]]\n    const weight: number[] = [];\n    for (let i = 0; i < pos.length; ++i) {\n      weight.push(0.5);\n    }\n    const pts: number[] = [];\n    for (const ii of arrayVertices) {\n      pts.push(ii);\n    }\n    let arrayControlPoint: number[] = [];\n    for (let i = 0; i < pts.length - 4; i += 2) {\n      arrayControlPoint = arrayControlPoint.concat(\n          getControlPoints( pts[i], pts[i + 1], pts[i + 2], pts[i + 3], pts[i + 4], pts[i + 5], weight[i])\n      );\n    }\n    drawSpline(ctx, arrayVertices, arrayControlPoint, scale, single);\n};\nconst getControlPoints = ( x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, t: number) => {\n    const d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n    const d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    const fa = (t * d01) / (d01 + d12);\n    const fb = t - fa;\n    const p1x = x1 + fa * (x0 - x2);\n    const p1y = y1 + fa * (y0 - y2);\n    const p2x = x1 - fb * (x0 - x2);\n    const p2y = y1 - fb * (y0 - y2);\n    return [p1x, p1y, p2x, p2y];\n};\nconst drawSpline = (ctx: CanvasRenderingContext2D, APoints: number[], cps: number[], scale: number = 1, single: boolean = true) => {\n    const pts = APoints;\n    const cp = cps;\n    const n = pts.length;\n    // const lineDashOffset = 3;\n    curveQuadraticArrow(ctx, pts[0], pts[1], cp[0], cp[1], pts[2], pts[3]);\n    curveQuadraticArrow(ctx, pts[n - 2], pts[n - 1], cp[2 * n - 10], cp[2 * n - 9], pts[n - 4], pts[n - 3]);\n    cArrowByTranslation(ctx, new NVector3(pts[4], pts[5]), new NVector3(cp[2], cp[3]), pts[4], pts[5], scale);\n    if (single) {\n        cArrowByTranslation(ctx, new NVector3(pts[0], pts[1]), new NVector3(cp[0], cp[1]), pts[0], pts[1], scale);\n    }\n};\nconst curveQuadraticArrow = (ctx: CanvasRenderingContext2D, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number) => {\n    ctx.beginPath();\n    ctx.moveTo(x2, y2);\n    ctx.quadraticCurveTo(x1, y1, x0, y0);\n    ctx.stroke();\n    ctx.setLineDash([]);\n};\nconst cArrowByTranslation = (ctx: CanvasRenderingContext2D, vec0: NVector3, vec1: NVector3, x0: number, y0: number, arrowScale: number = 1) => {\n    const degree = getRotationByWorldCoordinateByTwo(vec0, vec1);\n    ctx.save();\n    ctx.translate(x0, y0);\n    ctx.rotate(-((degree * Math.PI) / 180));\n    const height = 7.5 * 0.5; // this.shape.draw.renderer.imageAnnoApp.customization.themeCurrent.arrow.scale * scaleRender; // 7.5;\n    const depth = -12 * 0.5; // this.shape.draw.renderer.imageAnnoApp.customization.themeCurrent.arrow.scale * scaleRender; // 12;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(-(depth * arrowScale), -height * arrowScale);\n    ctx.lineTo(-(depth * arrowScale), height * arrowScale);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n};\nconst getRotationByWorldCoordinateByTwo = (v0: NVector3, v1: NVector3): number => {\n    const v = v1.sub(v0);\n    const origin = new NVector3(1, 0, 0);\n    if (v.y > 0) {\n        return getAngleByTwoVectors(origin, v) * -1;\n    }\n    return getAngleByTwoVectors(origin, v);\n};\nconst getAngleByTwoVectors = (v0: NVector3, v1: NVector3): number => {\n    return (getAngleByTwoVectorsRadian(v0, v1) * 180.0) / Math.PI;\n};\nconst getAngleByTwoVectorsRadian = (v0: NVector3, v1: NVector3): number => {\n    return Math.acos(getCosAngleByTwoVectors(v0, v1));\n};\nconst getCosAngleByTwoVectors = (v0: NVector3, v1: NVector3): number => {\n    return getDotProduct(normalize(v0), normalize(v1));\n};\nconst getDotProduct = (v1: NVector3, v2: NVector3): number => {\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n};\nconst normalize = (v: NVector3): NVector3 => {\n    const len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n    if (len < 0.0001) {\n      return new NVector3(v.x, v.y, v.z);\n    }\n    return new NVector3(v.x / len, v.y / len, v.z / len);\n};\n","export const getBtnBySVGPath = (fn: () => void, svgPath: string, scale = 1.0) => {\n\n    let btn = document.createElement('button');\n    btn.style.background = 'transparent';\n    btn.style.border = 'none';\n    // btn.style.fill = color;\n\n    // btn.innerHTML = `\n    // <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-cursor-fill\" viewBox=\"0 0 16 16\">\n    // <path d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z\"/>\n    // </svg>`\n    btn.innerHTML = svgPath;\n    btn.onclick = () => fn();\n    btn.style.transform = `scale(${scale})`;\n    return btn;\n};\nexport const debounce = (fn: any, timeout = 300) => {\n    let timer: NodeJS.Timer | number;\n    return (...args: any) => {\n      // @ts-ignore\n      clearTimeout(timer as NodeJS.Timer);\n      timer = setTimeout(() => { \n        fn.apply(timer , args); \n      }, \n      timeout);\n    };\n  };\n  // export const debounce = (fn: any, timeout = 300) => {\n  //   let timer: any;\n  //   return (...args: any) => {\n  //     clearTimeout(timer as NodeJS.Timer);\n  //     timer = setTimeout(() => { \n  //       fn.apply(this , args); \n  //     }, \n  //     timeout);\n  //   };\n  // };\n","import { Unit } from '../Enum/EnumUnit';\nexport const deg2rad = Math.PI / 180;\nexport const rad2deg = 180 / Math.PI;\nexport const distance = (x0: number, y0: number, x1: number, y1: number) => {\n  return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\n};\nexport const series = (s: number = 0, e: number = 10, step: number = 1) => {\n  let series: number[] = [];\n  for (let i = 0; i < e; i += step) { series.push(i); }\n  return series;\n};\nexport const range = (s: number = 0, e: number = 1, rNumber: number = 10) => {\n  let range: number[] = [];\n  let theStep = e / rNumber;\n  for (let i = 0; i < e; i += theStep) { range.push(i); }\n  return range;\n};\nexport const playground = () => {\n  // let d = this.DigitGenerator(1423);\n  // console.log(d);\n  // d = this.DigitGenerator(987);\n  // console.log(d);\n};\nexport const digitGenerator = (num: number) => { // 1423 + 1 + 4 + 2 + 3\n  let r  = num;\n  while (num) {\n      r += Math.floor((num % 10));\n      num = Math.floor(num / 10);\n  }\n  return r;\n};\n// ........................................................... data\n// region get ReMap Nomalize From 0.0 to 1.0\nexport const remapNomalize = (CValue: number[]) => {\n  let valueOut: number[] = [];\n  let domain: number[] = getDomain(CValue);\n  for (let d of CValue) { valueOut.push(((d - domain[0]) / (domain[1] - domain[0]))); }\n  return valueOut;\n};\n// endregion get ReMap Nomalize From 0.0 to 1.0\n\n// region get re-map\nexport const remaps = (CValue: number[], OldMin: number, OldMax: number, NewMin: number, NewMax: number) => {\n  let temp: number[] = [];\n  for (let d of CValue) { temp.push(remap(d, OldMin, OldMax, NewMin, NewMax)); }\n  return temp;\n};\nexport const remap = (CValue: number, OldMin: number, OldMax: number, NewMin: number, NewMax: number) => {\n  return (((CValue - OldMin) * (NewMax - NewMin)) / (OldMax - OldMin)) + NewMin;\n};\nexport const getDomain = (doubleList: number[]) => {\n  let Min: number = Number.MAX_VALUE; let Max: number = Number.MIN_VALUE;\n  for (let d of doubleList) { if (Min > d) { Min = d; } if (Max < d) { Max = d; } }\n  return [Min, Max];\n};\nexport const getIndexBySort = (d: number[]) => {\n  let len = d.length;\n  let indices = new Array(len);\n  for (let i = 0; i < len; ++i) { indices[i] = i; }\n  indices.sort((a, b) => { return d[a] < d[b] ? -1 : d[a] > d[b] ? 1 : 0; });\n  return indices;\n};\nexport const getMaxIndex = (d: number[]) => {\n  let index = -1;\n  let max = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < d.length; ++i) {\n      if (max < d[i]) { max = d[i]; index = i; }\n  }\n  return index;\n};\n// private static Heapify(d: number[], i: number) {\n//     let c = 2 * i + 1;\n//     if (c < d.length && d[c] < d[c + 1]) { c++; }\n//     if (d[i] < d[c]) {\n//         let temp = d[i];\n//         d[i] = d[c];\n//         d[c] = temp;\n//     }\n//     if (c <= Math.round(d.length / 2)) { this.Heapify(d, c); }\n// }\nexport const getRatioByWidthHidthByWidths = (originWidth: number, originHeight: number, newWidth: number) => {\n  return [newWidth, originHeight * (newWidth / originWidth)];\n};\nexport const getRatioByWidthHidthByHeight = (originWidth: number, originHeight: number, newHeight: number) => {\n  return [originWidth * (newHeight / originHeight), newHeight];\n};\nexport const getRatioByNewWidth = (originWidth: number, originHeight: number, newWidth: number) => {\n  return [newWidth, originHeight * (newWidth / originWidth)];\n};\nexport const getRatioByNewHeight = (originWidth: number, originHeight: number, newHeight: number) => {\n  return [originWidth * (newHeight / originHeight), newHeight];\n};\nexport const isContainNagativeNumber = (vs: number[]) => {\n  for (let i = 0; i < vs.length; ++i) { if (vs[i] < 0.0) { return true; } }\n  return false;\n};\n// ......................................................... geo\n// #region remap geo utility\nexport const remapMeterFromGPSPos = (lat1: number, lon1: number, lat2: number, lon2: number) => {  // generally used geo measurement function\n  let R = 6378.137; // Radius of earth in KM\n  let dLat = lat2 * Math.PI / 180 - lat1 * Math.PI / 180;\n  let dLon = lon2 * Math.PI / 180 - lon1 * Math.PI / 180;\n  let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  let d = R * c;\n  return d * 1000; // meters\n};\nexport const getKilogramFromNewton = (w: number): number => { return w * 0.10197162129779283; };\nexport const getNewtonFromKilogram = (w: number): number => { return w * 9.80665; };\nexport const remapMileFromMeter = (meter: number): number => { return meter * 0.000621371; };\nexport const remapMeterFromMile = (meter: number): number => { return meter * 1609.34; };\nexport const converterUnitLength = (value: number, from: Unit, to: Unit) => {\n  // ConverterUnitLengthFromMeter\n  switch (from) {\n      case Unit.Nanometer: return value * 1000000000;\n      case Unit.Micrometer: return value * 1000000;\n      case Unit.Millimeter: return value * 1000;\n      case Unit.Centimeter: return value * 100;\n      case Unit.Meter: return value;\n      case Unit.Inch: return value * 39.37007874;\n      case Unit.Foot: return value * 3.280839895;\n      case Unit.Yard: return value * 1.0936132983;\n      case Unit.Mile: return value * 0.0006213689;\n      case Unit.Kilometer: return value * 0.001;\n      default: return value;\n  }\n};\nexport const converterUnitLengthFromMeter = (value: number, unitLength: Unit) => {\n  switch (unitLength) {\n      case Unit.Nanometer: return value * 1000000000;\n      case Unit.Micrometer: return value * 1000000;\n      case Unit.Millimeter: return value * 1000;\n      case Unit.Centimeter: return value * 100;\n      case Unit.Meter: return value;\n      case Unit.Inch: return value * 39.37007874;\n      case Unit.Foot: return value * 3.280839895;\n      case Unit.Yard: return value * 1.0936132983;\n      case Unit.Mile: return value * 0.0006213689;\n      case Unit.Kilometer: return value * 0.001;\n      default: return value;\n  }\n};\nexport const milesFromMeters = (m: number) => { return m * 0.00062137; };\nexport const milesFromKM = (m: number) => { return m * 0.62137119; };\n// ........................................................... geometry\nexport const toRadians = (degrees: number): number => {\n  return (degrees * (Math.PI / 180.0)); // myDegree *=  3.141592 / 180 // degrees to radians\n};\nexport const toDegrees = (radians: number): number => {\n  return (radians * (180.0 / Math.PI));  // myRadian *= 180 / 3.141592 //  radian to degrees\n};\n// ........................................................... random\nexport const getRandom = () => {\n  return Math.random();\n};\nexport const getRandomArbitrary = (min: number, max: number) => {\n  return Math.random() * (max - min) + min;\n};\nexport const getRandomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\nexport const getRandomIntFromRenage = (range: number) => {\n  return Math.floor(Math.random() * range);\n};\nexport const getRandomIntsInclusive = (min: number, max: number, total: number) => {\n  let out = [];\n  for (let i = 0; i < total; ++i) {\n      out.push(getRandomIntInclusive(min, max));\n  }\n  return out;\n};\nexport const getRandomIntInclusive = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const getRandomItemWithStringList = (array: string[]) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\nexport const getUUID = () => {   // reference : https://jsfiddle.net/briguy37/2MVFd/\n  let d = new Date().getTime();\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\n      // eslint-disable-next-line\n      let r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      // eslint-disable-next-line\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n  return uuid;\n};\n// reference https://github.com/sketchpunk/FunWithWebGL2\nexport const clamp = (v: number, min: number, max: number) => { return Math.max(min, Math.min(max, v)); };\nexport const smoothStep = (edge1: number, edge2: number, val: number) => { // https://en.wikipedia.org/wiki/Smoothstep\n  let x = Math.max(0, Math.min(1, (val - edge1) / (edge2 - edge1)));\n  return x * x * (3 - 2 * x);\n};\n// Get a number between A and B from a normalized number.\nexport const lerp = (a: number, b: number, t: number) => { return a + t * (b - a); };\n\n// From a point in space, closest spot to a 2D line\nexport const closestPointToLine2D = (x0: number, y0: number, x1: number, y1: number, px: number, py: number) => {\n  let dx = x1 - x0,\n      dy = y1 - y0,\n      t = ((px - x0) * dx + (py - y0) * dy) / (dx * dx + dy * dy),\n      x = x0 + (dx * t), // Util.lerp(x0, x1, t),\n      y = y0 + (dy * t); // Util.lerp(y0, y1, t);\n  return [x, y];\n};\n// http://hevi.info/do-it-yourself/interpolating-and-array-to-fit-another-size/\nexport const linearInterpolate = (before: number, after: number, atPoint: number) => {\n  return before + (after - before) * atPoint;\n};\nexport const getInterpolatedArray = (data: number[], fitCount: number): number[] =>  {\n  let newData = [];\n  let springFactor = (data.length - 1) / (fitCount - 1);\n  newData[0] = data[0]; // for new allocation\n  for (let i = 1; i < fitCount - 1; i++) {\n      let tmp: number = i * springFactor;\n      let before: number = +(Math.floor(tmp)).toFixed();\n      let after: number = +(Math.ceil(tmp)).toFixed();\n      let atPoint: number = tmp - before;\n      newData[i] = linearInterpolate(data[before], data[after], atPoint);\n  }\n  newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n  return newData;\n};\nexport const findIndexOfMin = (array: number[]) => {\n  let i: number = 1;\n  let mi: number = 0;\n  while (i < array.length) {\n    if (!(array[i] > array[mi])) { mi = i; }\n    i += 1;\n  }\n  return mi;\n};\nexport const remapLongToSurface = (CValue: number, min: number, max: number) => { return (((CValue - (-180)) * (max - min)) / (180 - (-180)) + min); };\nexport const remapLatToSurface = (CValue: number, min: number, max: number) => { return (((CValue - (-90)) * (max - min)) / (90 - (-90)) + min); };\nexport const remapLongToSurfaceNormal = (CValue: number) => { return ((CValue - (-180)) * (1.0 - 0)) / (180 - (-180)); }; // 0 to 1\nexport const remapLatToSurfaceNormal = (CValue: number) => { return ((CValue - (-90)) * (1.0 - 0)) / (90 - (-90)); }; // 0 to 1\nexport const remapLong = (CValue: number) => { return (CValue + 180) * Math.PI * 2 / 360 * -1; }; // -1 for reversing direction\nexport const remapLat = (CValue: number) => { return (CValue + 90) * Math.PI / 180; };\n// .. circle\nexport const getRadiusByArea = (area: number) => { return Math.sqrt(area / Math.PI); };\nexport const getRadiusByCircumference = (circumference: number) => { return circumference / Math.PI * 0.5; };\n\n","const path: string = '/ngraphics';\nexport  const urnFn = async (url: string) => {\n    return fetch(url)\n    .then((response: Response) => {\n        return response.text();\n    })\n    .catch((err: Error) => {\n        console.log(err);\n    });\n};\nexport const xml2json = (xml: any) => {\n    const el = xml.nodeType === 9 ? xml.documentElement : xml;\n    const h  = {name: el.nodeName};\n    // @ts-ignore\n    h.content    = Array.from(el.childNodes || []).filter(e => e.nodeType === 3).map(e => e.textContent).join('').trim();\n    // @ts-ignore\n    h.attributes = Array.from(el.attributes || []).filter(a => a).reduce((h, a) => { h[a.name] = a.value; return h; }, {});\n    // @ts-ignore\n    h.children   = Array.from(el.childNodes || []).filter(e => e.nodeType === 1).map(c => h[c.nodeName] = xml2json(c));\n    return h\n}\nexport  const openOBJ = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    let file = 'torus.obj';\n    return fetch(`${path}/3dData/${file}`)\n        .then((response: Response) => {\n            return response.text();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // if (NGraphics.app.appVisGL3D) {\n            //     NGraphics.app.appVisGL3D.activeCommands.LoadOBJ(d);\n            // }\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openOBJForExternalRenderer = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    // console.log(path);\n    return fetch(path, { mode: 'no-cors' })\n        .then((response: Response) => {\n            // console.log(response.text());\n            return response.text();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // if (NGraphics.app.appVisGL3D) {\n            //     NGraphics.app.appVisGL3D.activeCommands.LoadOBJ(d);\n            // }\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openGeoJsonEx01 = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    let file = 'weektest.geojson';\n    return fetch(`${path}/json/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // NGraphics.app.dataUtilities.SetData(d);\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openGeoJsonEx02 = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    let file = 'BusRoute.geojson';\n    return fetch(`${path}/json/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // NGraphics.app.dataUtilities.SetData(d);\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openGeoJsonEx03 = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    let file = 'globeMap.geojson';\n    return fetch(`${path}/json/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // NGraphics.app.dataUtilities.SetData(d);\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openGeoJson = async (file: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    return fetch(`${path}/json/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // NGraphics.app.dataUtilities.SetData(d);\n            return d;\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openJson = async (file: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    return fetch(`${path}/json/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            // NGraphics.app.dataUtilities.SetData(d);\n            return d;\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openJsonAnnotationTheme = async (file: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    return fetch(`${path}/theme/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openThemeJSON = async (file: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    return fetch(`${path}/theme/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const openDataJSON = async (file: string) => {\n    return fetch(`${path}/${file}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const loadImg = async (path: string) => {\n    return fetch(`${path}/${path}`)\n        .then((response: Response) => {\n            return response.blob();\n        })\n        // eslint:disable-next-line:no-any\n        .then((d: any) => {\n            const objectURL = URL.createObjectURL(d);\n            return objectURL;\n        })\n        .catch((err: Error) => {\n            console.log(err);\n        });\n\n};\nexport const loadSVG = async (path: string) => {\n    return fetch(`${path}/${path}`)\n        .then((response: Response) => {\n            return response.text();\n        }).catch((err: Error) => {\n            console.log(err);\n        });\n\n};\nexport const loadSVGFromLocal = async (path: string) => {\n    return fetch(`${path}/images/${path}`)\n        .then((response: Response) => {\n            return response.text();\n        }).catch((err: Error) => {\n            console.log(err);\n        });\n\n};\nexport const loadSVGFromHTTP = async (path: string) => {\n    return fetch(path, { mode: 'no-cors' })\n        .then((response: Response) => {\n            return response.text();\n        }).catch((err: Error) => {\n            console.log(err);\n        });\n};\nexport const pointRegular = async () => {\n    // const path = await require('../../../../assets/svg-mercator-graphic/point.svg');\n};\nexport const openXML = async (path: string) => {\n    // if (NGraphics.app) { if (NGraphics.app.isProduction) { return; } }\n    // let parser = new DOMParser();\n    // let response = await fetch(path);\n    // let text = await response.text();\n    // let xml = await parser.parseFromString(text, 'text/xml');\n    // let d = await this.XmlToJson(xml);\n    // return d;\n};\nexport const openCSV = async (path: string) => {\n    /* */\n};\nexport const openTXT = async (path: string) => {\n    /* */\n};\n// reference https://davidwalsh.name/convert-xml-json\n// static XmlToJson(xml: XMLDocument | any) {\n// let obj = new Object; // Create the return object\n// if (xml.nodeType === 1) { // element\n//     if (xml.[attributes].length > 0) {// do attributes\n//         obj['@attributes'] = {};\n//         for (let j = 0; j < xml.attributes.length; j++) {\n//             let attribute = xml.attributes.item(j);\n//             obj['@attributes'][attribute.nodeName] = attribute.nodeValue;\n//         }\n//     }\n// } else if (xml.nodeType === 3) { // text\n//     if (xml.nodeValue) { obj = xml.nodeValue; }\n// }\n// if (xml.hasChildNodes()) { // do children\n//     for (let i = 0; i < xml.childNodes.length; i++) {\n//         let item = xml.childNodes.item(i) as XMLDocument;\n//         let nodeName = item.nodeName;\n//         if (typeof (obj[nodeName]) === 'undefined') {\n//             obj[nodeName] = this.XmlToJson(item);\n//         } else {\n//             if (typeof (obj[nodeName].push) === 'undefined') {\n//                 let old = obj[nodeName];\n//                 obj[nodeName] = [];\n//                 obj[nodeName].push(old);\n//             }\n//             obj[nodeName].push(this.XmlToJson(item));\n//         }\n//     }\n// }\n// return obj;\n// }\n// static XmlToJson(xml: XMLDocument | any) {\n//     let obj = new Object(); // Create the return object\n//     if (xml.nodeType === 1) { // element\n//         // eslint:disable-next-line:no-string-literal\n//         if (xml['attributes'].length > 0) {// do attributes\n//             obj['@attributes'] = {};\n//             // eslint:disable-next-line:no-string-literal\n//             for (let j = 0; j < xml['attributes'].length; j++) {\n//                 // eslint:disable-next-line:no-string-literal\n//                 let attribute = xml['attributes'].item(j);\n//                 obj['@attributes'][attribute.nodeName] = attribute.nodeValue;\n//             }\n//         }\n//     } else if (xml.nodeType === 3) { // text\n//         if (xml.nodeValue) { obj = xml.nodeValue; }\n//     }\n//     if (xml.hasChildNodes()) { // do children\n//         for (let i = 0; i < xml.childNodes.length; i++) {\n//             // eslint:disable-next-line:no-any\n//             let item = xml.childNodes.item(i) as any;\n//             let nodeName = item.nodeName;\n//             if (typeof (obj[nodeName]) === 'undefined') {\n//                 obj[nodeName] = this.XmlToJson(item);\n//             } else {\n//                 if (typeof (obj[nodeName].push) === 'undefined') {\n//                     let old = obj[nodeName];\n//                     obj[nodeName] = [];\n//                     obj[nodeName].push(old);\n//                 }\n//                 obj[nodeName].push(this.XmlToJson(item));\n//             }\n//         }\n//     }\n//     return obj;\n// }\nexport const getObjectFromSVGPath = async (path: string) => {\n    let parser = new DOMParser();\n    let response = await fetch(path);\n    let text = await response.text();\n    let xml = await parser.parseFromString(text, 'text/xml');\n    let d = xmlToJson(xml);\n    return d;\n};\nexport const getObjectFromSVGImporting = async (content: string) => {\n    let parser = new DOMParser();\n    let xml = await parser.parseFromString(content, 'text/xml');\n    let d = xmlToJson(xml);\n    return d;\n};\nexport const xmlToJson = (xml: XMLDocument) => {\n    let obj: any = {}; // Create the return object\n    if (xml.nodeType === 1) { // element\n        // eslint:disable-next-line:no-string-literal\n        if (xml['attributes'].length > 0) {// do attributes\n            obj['@attributes'] = {};\n            // eslint:disable-next-line:no-string-literal\n            for (let j = 0; j < xml['attributes'].length; j++) {\n                // eslint:disable-next-line:no-string-literal\n                let attribute = xml['attributes'].item(j);\n                obj['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    } else if (xml.nodeType === 3) { // text\n        if (xml.nodeValue) { obj = xml.nodeValue; }\n    }\n    if (xml.hasChildNodes()) { // do children\n        for (let i = 0; i < xml.childNodes.length; i++) {\n            // eslint:disable-next-line:no-any\n            let item = xml.childNodes.item(i) as any;\n            let nodeName = item.nodeName;\n            if (typeof (obj[nodeName]) === 'undefined') {\n                obj[nodeName] = xmlToJson(item);\n            } else {\n                if (typeof (obj[nodeName].push) === 'undefined') {\n                    let old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(xmlToJson(item));\n            }\n        }\n    }\n    return obj;\n};\n","import { xmlToJson, loadSVGFromHTTP, xml2json } from './NJSLoader';\n\nconst pathPointA = 'M9 0a9.022 9.022 0 00-9 9.041c0 4.992 5 11.761 9 19.421 4-7.659 9-14.428 9-19.42A9.022 9.022 0 009 .001V0zm0 12.652a3.85 3.85 0 113.833-3.85A3.841 3.841 0 019 12.652z';\n// const pathPointB = 'M16 0c7 0 12 5.6 12 11.7C28 18 18.8 28.5 16 32 13.2 28.5 4 18 4 11.7 4 5.7 9 0 16 0z';\n// const pathNPoint = 'M26 2a2 2 0 00-2-2H2a2 2 0 00-2 2v17a2 2 0 002 2h6.757l4.276 6.33L17.31 21H24a2 2 0 002-2V2z';\n\n\n// export enum TypePoint {\n//     RegularPoint = 'RegularPoint',\n//     NumberedPoint = 'numberedPoint',\n// }\n// export const Graphic = () => {\n\n// };\nexport interface ISVGPackageForCanvas {\n    rPoint: ISVGForCanvas\n    rnoint: ISVGForCanvas\n}\nexport interface ISVGForCanvas {\n    type: string;\n    width: number;\n    height: number;\n    path2D: Path2D;\n    path?: IctxShape[];\n};\nexport class IctxShape {\n    public type: string;\n    public pos: number[] = [];\n};\n\nexport const getObjectFromSVGXML = async (xmlString: string) => {\n    const parser = new DOMParser();\n    const xml = await parser.parseFromString(xmlString, 'text/xml');\n    const d = xmlToJson(xml);\n    return d;\n};\n// eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromString = (svg: any, scale: number = 1) => {\n    // console.log(svg);\n    // const shapePath = shapeString.split(',');\n    // this is for edge\n    let pathes: string[] = ['M8.5,0', 'C3.806,0', '0,1.817', '0,6.543', 'L0,23.444', 'L8.5,32', 'L17,23.444', 'L17,6.543', 'C17,1.817', '13.194,0', '8.5,0', 'Z', 'M8.5,15.1', 'C5.95949015,15.1', '3.9,13.0405098', '3.9,10.5', 'C3.9,7.95949015', '5.95949015,5.9', '8.5,5.9', 'C11.0405098,5.9', '13.1,7.95949015', '13.1,10.5', 'C13.1002653,11.7200772', '12.6157091,12.8902593', '11.7529842,13.7529842', 'C10.8902593,14.6157091', '9.72007717,15.1002653', '8.5,15.1', 'Z']; // svg.svg.path['@attributes'].d.split(' ');\n    // let pathes: string[] = ['M15.44', 'C22.21.37', '27.62', '5.42', '28', '11.73', '28', '17.92', '18.28', '28.46', '15.44', '32', '12.6', '28.46', '4', '17.94', '4', '11.75', '9.31', '0,15.44', 'Z' ] ;\n    // let pathes: string[] = ['M15.44', 'C22.21.37', '27.62', '5.42', '28', '11.73', '28', '17.92', '18.28', '28.46', '15.44', '32', '12.6', '28.46', '4', '17.94', '4', '11.75', '9.31', '0,15.44', 'Z' ] ;\n    // console.log(pathes);\n    let theI: number = 0;\n    let ctxShape: IctxShape[] = [];\n    for (let i = 0; i < pathes.length; ++i) {\n        // console.log(pathes[i]);\n        if (pathes[i][0] === 'M') {\n            ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'C') {\n            theI = i;\n            ctxShape[theI + ' C'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'L') {\n            theI = i;\n            ctxShape[theI + ' L'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n            let d = pathes[i].split(',').map(Number);\n            ctxShape[theI + ' C'].push(d[0], d[1]);\n        }\n    }\n    // const scaler = (value: string) => parseFloat(value) * scale;\n\n    let region = new Path2D();\n    Object.keys(ctxShape).map(key => {\n        let g = ctxShape[key];\n        if (g) {\n            let ii = key.split(' ')[1];\n            if (ii === 'M') {\n                region.moveTo(g[0] * scale, g[1] * scale);\n            } else if (ii === 'C') {\n                region.bezierCurveTo(g[0] * scale, g[1] * scale, g[2] * scale, g[3] * scale, g[4] * scale, g[5] * scale);\n            } else if (ii === 'L') {\n                // console.log(g[0] * scale, g[1] * scale);\n                region.lineTo(g[0] * scale, g[1] * scale);\n            }\n            // console.log(ii);\n        }\n        return 0\n    });\n    region.closePath();\n\n    let sVGForCanvas: ISVGForCanvas = {\n        type: 'path',\n        height: parseInt(svg.svg['@attributes'].height, 10) * scale,\n        width: parseInt(svg.svg['@attributes'].width, 10) * scale,\n        path: ctxShape,\n        path2D : new Path2D(pathPointA),\n    };\n    return sVGForCanvas;\n};\nexport const getCanvaseShapePathFromStringWithScale = (pathes: string[], scale: number ): Path2D => {\n    let theI: number = 0;\n    let ctxShape: IctxShape[] = [];\n    // const scaler = (value: string) => parseFloat(value) * scale;\n    for (let i = 0; i < pathes.length; ++i) {\n        // console.log(pathes[i]);\n        if (pathes[i][0] === 'M') {\n            // ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(scaler));\n            ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'C') {\n            theI = i;\n            ctxShape[theI + ' C'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'L') {\n            theI = i;\n            ctxShape[theI + ' L'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n            let d = pathes[i].split(',').map(Number);\n            ctxShape[theI + ' C'].push(d[0], d[1]);\n        }\n    }\n\n    let region = new Path2D();\n    Object.keys(ctxShape).map(key => {\n        let g = ctxShape[key];\n        if (g) {\n            let ii = key.split(' ')[1];\n            if (ii === 'M') {\n                region.moveTo(g[0] * scale, g[1] * scale);\n            } else if (ii === 'C') {\n                region.bezierCurveTo(g[0] * scale, g[1] * scale, g[2] * scale, g[3] * scale, g[4] * scale, g[5] * scale);\n            } else if (ii === 'L') {\n                // console.log(g[0] * scale, g[1] * scale);\n                region.lineTo(g[0] * scale, g[1] * scale);\n            }\n            // console.log(ii);\n        }\n        return 0\n    });\n    region.closePath();\n    return region;\n};\n// eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromSVGXML = (svg: any): ISVGForCanvas => {\n    svg = JSON.parse(JSON.stringify(svg));\n    let ctxShape: IctxShape[] = [];\n    // console.log(svg);\n    let pathes: string[] = svg.svg.g.g.path['@attributes'].d.split(' ');\n    let theI: number = 0;\n    for (let i = 0; i < pathes.length; ++i) {\n        // console.log(pathes[i]);\n        if (pathes[i][0] === 'M') {\n            ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'C') {\n            theI = i;\n            ctxShape[theI + ' C'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'L') {\n            theI = i;\n            ctxShape[theI + ' L'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n            let d = pathes[i].split(',').map(Number);\n            ctxShape[theI + ' C'].push(d[0], d[1]);\n        }\n    }\n    let region = new Path2D();\n    Object.keys(ctxShape).map(key => {\n        let g = ctxShape[key];\n        if (g) {\n            let ii = key.split(' ')[1];\n            if (ii === 'M') {\n                region.moveTo(g[0], g[1]);\n            } else if (ii === 'C') {\n                region.bezierCurveTo(g[0], g[1], g[2], g[3], g[4], g[5]);\n            } else if (ii === 'L') {\n                // console.log(g[0], g[1]);\n                region.lineTo(g[0], g[1]);\n            }\n            // console.log(ii);\n        }\n        return 0\n    });\n    region.closePath();\n    // console.log(ctxShape);\n    let sVGForCanvas: ISVGForCanvas = {\n        type: 'path',\n        height: parseInt(svg.svg['@attributes'].height, 10),\n        width: parseInt(svg.svg['@attributes'].width, 10),\n        path: ctxShape,\n        path2D : new Path2D(pathPointA),\n    };\n    return sVGForCanvas;\n};\n// eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromOptiSVGXML = (svg: any): ISVGForCanvas | undefined => {\n    svg = JSON.parse(JSON.stringify(svg));\n    // console.log(svg);\n    if (svg.svg && svg.svg.path) {\n        let ctxShape: IctxShape[] = [];\n        // console.log(svg);\n        let pathes: string[] = svg.svg.path['@attributes'].d;\n        // console.log(pathes);\n        let stringData = '';\n        for (let s of pathes) {\n        if (s.toLowerCase() === 'c' || s === '-') {\n            stringData += ' ';\n        }\n        if (s.toLowerCase() === 's') {\n            stringData += ' ';\n        }\n        stringData += s;\n        }\n        pathes = stringData.split(' ');\n        let newPath = '';\n        for (let i = 0; i < pathes.length; i += 2) {\n        newPath += `${pathes[i]},${pathes[i + 1]} `;\n        }\n        pathes = newPath.split(' ');\n\n        let theI: number = 0;\n        for (let i = 0; i < pathes.length; ++i) {\n        // console.log(pathes[i]);\n        try {\n            if (pathes[i][0] === 'M') {\n            ctxShape[i + ' M'] = pathes[i]\n                .slice(1)\n                .split(',')\n                .map(Number);\n            continue;\n            } else if (pathes[i][0] === 'C' || pathes[i][0] === 'c' || pathes[i].includes('c')) {\n            theI = i;\n            ctxShape[theI + ' C'] = pathes[i]\n                .slice(1)\n                .split(',')\n                .map(Number);\n            continue;\n            } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n            let d = pathes[i].split(',').map(Number);\n            ctxShape[theI + ' C'].push(d[0], d[1]);\n            }\n        } catch (error) {\n            //\n        }\n        }\n        let region = new Path2D();\n        Object.keys(ctxShape).map(key => {\n            let g = ctxShape[key];\n            if (g) {\n                let ii = key.split(' ')[1];\n                if (ii === 'M') {\n                    region.moveTo(g[0], g[1]);\n                } else if (ii === 'C') {\n                    region.bezierCurveTo(g[0], g[1], g[2], g[3], g[4], g[5]);\n                } else if (ii === 'L') {\n                    // console.log(g[0], g[1]);\n                    region.lineTo(g[0], g[1]);\n                }\n                // console.log(ii);\n            }\n            return 0\n        });\n        region.closePath();\n        // console.log(ctxShape);\n        let sVGForCanvas: ISVGForCanvas = {\n        type: 'path',\n        height: parseInt(svg.svg['@attributes'].height, 10),\n        width: parseInt(svg.svg['@attributes'].width, 10),\n        path: ctxShape,\n        path2D : new Path2D(pathPointA),\n        };\n        return sVGForCanvas;\n    } else if (svg.svg && svg.svg.circle) {\n        let ctxShape: IctxShape[] = [];\n        // let region = new Path2D();\n        /*\n        console.log(svg.svg.circle['@attributes']);\n        ctxShape.push({ fill: svg.svg.circle['@attributes'].fill });\n        ctxShape.push({ stroke: svg.svg.circle['@attributes'].stroke });\n    */\n        let sVGForCanvas: ISVGForCanvas = {\n        type: 'circle',\n        height: parseInt(svg.svg['@attributes'].height, 10),\n        width: parseInt(svg.svg['@attributes'].width, 10),\n        path: ctxShape,\n        path2D : new Path2D(pathPointA),\n        };\n        return sVGForCanvas;\n    }\n    return undefined;\n};\n        // eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromOptiSVGXMLPath = (svg: any): any => {\n    svg = JSON.parse(JSON.stringify(svg));\n    // console.log(svg);\n    if (svg.svg && svg.svg.path) {\n        // let ctxShape: IctxShape[] = [];\n        // console.log(svg);\n        let pathes: string[] = svg.svg.path['@attributes'].d;\n        // console.log(pathes);\n        return pathes;\n    }\n};\n// eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromOptiSVGXMLStorymaps = (svg: any): ISVGForCanvas | undefined => {\n    svg = JSON.parse(JSON.stringify(svg));\n    // console.log(svg);\n    if (svg.svg && svg.svg.path) {\n        // let ctxShape: IctxShape[] = [];\n        // console.log(svg);\n        let pathes: string[] = svg.svg.path['@attributes'].d;\n        // console.log(pathes);\n        let stringData = '';\n        for (let s of pathes) {\n            if (s.toLowerCase() === 'c' || s === '-') {\n                stringData += ' ';\n            }\n            if (s.toLowerCase() === 's') {\n                stringData += ' ';\n            }\n            if (s.toLowerCase() === 'l') {\n                stringData += ' ';\n            }\n            stringData += s;\n        }\n        pathes = stringData.split(' ');\n        // let newPath = '';\n        // for (let i = 0 ; i < pathes.length; i += 2 ) {\n        //     newPath += `${pathes[i]},${pathes[i + 1]} `;\n        // }\n        // pathes = newPath.split(' ');\n\n        // console.log(pathes);\n        let ctxShape: IctxShape[] = [];\n        for (let i = 0; i < pathes.length; ++i) {\n            // index++;\n            const line = pathes[i];\n            if (line) {\n                if (pathes[i].includes('C')) {\n                    let shape = new IctxShape();\n                    shape.type = 'C';\n                    let theRemain = pathes[i].substr(1, pathes[i].length);\n\n                    let pos = theRemain.split(',');\n                    shape.pos.push(+pos[0]); shape.pos.push(+pos[1]);\n\n                    pos = pathes[++i].split(',');\n                    shape.pos.push(+pos[0]); shape.pos.push(+pos[1]);\n\n                    pos = pathes[++i].split(',');\n                    shape.pos.push(+pos[0]); shape.pos.push(+pos[1]);\n\n                    ctxShape.push(shape);\n                } else if (pathes[i].includes('L')) {\n                    let shape = new IctxShape();\n                    shape.type = 'L';\n                    let theRemain = pathes[i].substr(1, pathes[i].length);\n\n                    let pos = theRemain.split(',');\n                    shape.pos.push(+pos[0]); shape.pos.push(+pos[1]);\n                    ctxShape.push(shape);\n                } else if (pathes[i].includes('M')) {\n                    let shape = new IctxShape();\n                    shape.type = 'M';\n                    let theRemain = pathes[i].substr(1, pathes[i].length);\n\n                    let pos = theRemain.split(',');\n                    shape.pos.push(+pos[0]); shape.pos.push(+pos[1]);\n                    ctxShape.push(shape);\n                } else if (pathes[i].includes('Z')) {\n                    let shape = new IctxShape();\n                    shape.type = 'Z';\n                    ctxShape.push(shape);\n                } else {\n\n                    // ctxShape.push(pathes[i].substr(0, 1));\n                    // let theRemain = pathes[i].substr(1, pathes[i].length);\n                    // ctxShape[ctxShape.length - 1] += (' ' + theRemain);\n                }\n                // console.log(pathes[i]);\n            } else {\n                // ctxShape.push(pathes[i]);\n                // console.log('-----------------------------');\n            }\n        }\n\n        // console.log(ctxShape);\n\n        // for (let i = 0; i < ctxShape.length; ++i) {\n            // console.log(pathes[i]);\n\n            /*\n            try {\n\n                if (pathes[i][0] === 'M') {\n                    ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(Number));\n                    continue;\n                } else if (pathes[i][0] === 'C' || pathes[i][0] === 'c' || pathes[i].includes('c') ) {\n                    theI = i;\n                    ctxShape[theI + ' C'] = (pathes[i].slice(1).split(',').map(Number));\n                    continue;\n                } else if (pathes[i][0] === 'L' || pathes[i][0] === 'l' || pathes[i].includes('l') ) {\n                    theI = i;\n\n                    const ddd = pathes[i].split(',');\n                    console.log(ddd);\n                    for (let i = 0; i < ddd.length; ++i ) {\n                        console.log(ddd[i]);\n                    }\n                    ctxShape[theI + ' L'] = (pathes[i].slice(1).split(',').map((n) => {\n                        //\n                        console.log(n);\n                    }));\n                    continue;\n                } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n                    let d = pathes[i].split(',').map(Number);\n                    ctxShape[theI + ' C'].push(d[0], d[1]);\n                }\n            } catch (error) {\n                //\n            }\n            */\n        // }\n        let region = new Path2D();\n        Object.keys(ctxShape).map(key => {\n            let g = ctxShape[key];\n            if (g) {\n                let ii = key.split(' ')[1];\n                if (ii === 'M') {\n                    region.moveTo(g[0], g[1]);\n                } else if (ii === 'C') {\n                    region.bezierCurveTo(g[0], g[1], g[2], g[3], g[4], g[5]);\n                } else if (ii === 'L') {\n                    // console.log(g[0], g[1]);\n                    region.lineTo(g[0], g[1]);\n                }\n                // console.log(ii);\n            }\n            return 0\n        });\n        region.closePath();\n        // console.log(ctxShape);\n        let sVGForCanvas: ISVGForCanvas = {\n            type: 'path',\n            height: parseInt(svg.svg['@attributes'].height, 10),\n            width: parseInt(svg.svg['@attributes'].width, 10),\n            path: ctxShape,\n            path2D : new Path2D(pathPointA),\n        };\n        return sVGForCanvas;\n    } else if (svg.svg && svg.svg.circle) {\n        let ctxShape: IctxShape[] = [];\n        // console.log(svg.svg.circle['@attributes']);\n\n        // ctxShape.push({ 'fill': svg.svg.circle['@attributes'].fill });\n        // ctxShape.push({ 'stroke': svg.svg.circle['@attributes'].stroke });\n        let region = new Path2D();\n        Object.keys(ctxShape).map(key => {\n            let g = ctxShape[key];\n            if (g) {\n                let ii = key.split(' ')[1];\n                if (ii === 'M') {\n                    region.moveTo(g[0], g[1]);\n                } else if (ii === 'C') {\n                    region.bezierCurveTo(g[0], g[1], g[2], g[3], g[4], g[5]);\n                } else if (ii === 'L') {\n                    // console.log(g[0], g[1]);\n                    region.lineTo(g[0], g[1]);\n                }\n                // console.log(ii);\n            }\n            return 0\n        });\n        region.closePath();\n\n        let sVGForCanvas: ISVGForCanvas = {\n            type: 'circle',\n            height: parseInt(svg.svg['@attributes'].height, 10),\n            width: parseInt(svg.svg['@attributes'].width, 10),\n            path: ctxShape,\n            path2D : new Path2D(pathPointA),\n        };\n        return sVGForCanvas;\n    }\n    return undefined;\n};\n// eslint:disable-next-line:no-any\nexport const getCanvaseShapePathFromSVGXMLIcon = (svg: any): ISVGForCanvas => {\n    svg = JSON.parse(JSON.stringify(svg));\n    let ctxShape: IctxShape[] = [];\n    let pathes: string[] = svg.svg.g.path['@attributes'].d.split(' ');\n    let theI: number = 0;\n    // console.log(pathes);\n    for (let i = 0; i < pathes.length; ++i) {\n        // console.log(pathes[i]);\n        if (pathes[i][0] === 'M') {\n            ctxShape[i + ' M'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'L' || Number(pathes[i][0])) {\n            ctxShape[i + ' L'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === 'Z' || Number(pathes[i][0])) {\n            ctxShape[i + ' Z'] = '';\n            continue;\n        } else if (pathes[i][0] === 'C') {\n            theI = i;\n            ctxShape[theI + ' C'] = (pathes[i].slice(1).split(',').map(Number));\n            continue;\n        } else if (pathes[i][0] === '0' || Number(pathes[i][0])) {\n            let d = pathes[i].split(',').map(Number);\n            ctxShape[theI + ' C'].push(d[0], d[1]);\n        }\n    }\n    let region = new Path2D();\n    Object.keys(ctxShape).map(key => {\n        let g = ctxShape[key];\n        if (g) {\n            let ii = key.split(' ')[1];\n            if (ii === 'M') {\n                region.moveTo(g[0], g[1]);\n            } else if (ii === 'C') {\n                region.bezierCurveTo(g[0], g[1], g[2], g[3], g[4], g[5]);\n            } else if (ii === 'L') {\n                // console.log(g[0], g[1]);\n                region.lineTo(g[0], g[1]);\n            }\n            // console.log(ii);\n        }\n        return 0\n    });\n    region.closePath();\n    // console.log(ctxShape);\n    let sVGForCanvas: ISVGForCanvas = {\n        type: 'path',\n        height: parseInt(svg.svg['@attributes'].height, 10),\n        width: parseInt(svg.svg['@attributes'].width, 10),\n        path: ctxShape,\n        path2D : new Path2D(pathPointA),\n    };\n    return sVGForCanvas;\n};\nexport const getBtnBySVGPath = (fn: () => void, svgPath: string, scale = 1.0) => {\n\n    let btn = document.createElement('button');\n    btn.style.background = 'transparent';\n    btn.style.border = 'none';\n    // btn.style.fill = color;\n\n    // btn.innerHTML = `\n    // <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-cursor-fill' viewBox='0 0 16 16'>\n    // <path d='M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z'/>\n    // </svg>`\n    btn.innerHTML = svgPath;\n    btn.onclick = () => fn();\n    btn.style.transform = `scale(${scale})`;\n    return btn;\n};\nexport const getRectSVG = (width: number = 8, height: number = 8, fillet: number = 2, fillStyle: string = '#ffffff', strokeWidth: number = 1, strokeStyle: string = '#CBDAE2' ) => {\n    let rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rect.setAttribute('x','1');\n    rect.setAttribute('y','1');\n    rect.setAttribute('width', `${width}`);\n    rect.setAttribute('height',`${height}`);\n    rect.setAttribute('stroke-width', `${strokeWidth}`);\n    rect.setAttribute('rx', `${fillet}`);\n    rect.setAttribute('fill', `${fillStyle}`);\n    rect.setAttribute('stroke', `${strokeStyle}`);\n\n\n    let rectSVG = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    rectSVG.appendChild(rect);\n    rectSVG.setAttribute('width', `${width + strokeWidth * 2}`);\n    rectSVG.setAttribute('height', `${height + strokeWidth * 2}`);\n    rectSVG.style.position = 'absolute';\n    return rectSVG;\n};\n\nexport interface ISvgPin {\n    width: number,\n    height: number,\n    path2D: Path2D | undefined,\n    path: (base: string) => string,\n};\nconst regularPointAGSM: ISvgPin = {\n    width: 10,\n    height: 10,\n    path2D: undefined,\n    path: (baseUrl: string) => `njslabSandboxStatic/pointSVG/point.svg`,\n};\nconst regularPointSMX: ISvgPin = {\n    width: 10,\n    height: 10,\n    path2D: undefined,\n    path: (baseUrl: string) => `njslabSandboxStatic/pointSVG/point.svg`,\n};\nconst numberedPointSMX: ISvgPin = {\n    width: 10,\n    height: 10,\n    path2D: undefined,\n    path: (baseUrl: string) => `njslabSandboxStatic/pointSVG/unnumbered-pin.svg`,\n};\nexport const getRegularPointAGSM = () => {\n    return regularPointAGSM;\n};\n\nexport const getRegularPointSMX = () => {\n    return regularPointSMX;\n};\nexport const getNumberedPointSMX = () => {\n    return numberedPointSMX;\n};\nexport const importPointAssets = async (baseUrl: string = '') => {\n    const pins = [regularPointAGSM, regularPointSMX, numberedPointSMX ];\n    const parser = new DOMParser();\n    try {\n        for (let i = 0 ; i < pins.length; ++i) {\n            let svgXML = await loadSVGFromHTTP(pins[i].path(baseUrl));\n            if (svgXML) {\n                const xmlDoc = parser.parseFromString(svgXML as any,'text/xml');\n                const obj = xml2json(xmlDoc);\n                pins[i].width = obj['attributes']['height'];\n                pins[i].height = obj['attributes']['width'];\n                pins[i].path2D = new Path2D(obj['children'][0]['attributes']['d']);\n            }\n        }\n        return true;\n    } catch (error) {\n        console.debug(error);\n        return false;\n    }\n};\n"],"names":["API","constructor","app","this","undo","ExpressImageAppType","implementation","imageWrapper","tools","editingTool","api","onClickUndo","drawingTool","redo","onClickRedo","rotateCropping","degree","onRotateCropping","zoomCropping","level","onZoomLevel","setScaleGraphics","v","absolute","undoNeeded","scaleUpGraphics","scaleDownGraphics","activateEffectEnv","fromApp","deactivateEffectEnv","setColor","appType","color","onClickSetColor","setDrawingMode","action","pushAction","revertToOriginal","onClickRevertToOriginal","shiftShape","type","onClickShiftShape","shiftShapeRatio","onClickShiftShapeRatio","shiftFilterPreset","filterName","reset","resizeByWindow","destroy","modelController","divHost","removeChild","div","error","destroyEditing","onClickPlace","destroyDrawing","dataSet","paramDrawing","updateDrawingData","getDataGeometry","scale","getScaleFactor","getData","computeImgCtx","appClosingBySave","resizeDiv","updateSizeDiv","onClickImportImgByURL","url","needEditingApp","importImgByURL","onClickAppendApp","appendApp","onClickDownload","commonProcess","downloadImage","onToggleInteractionMode","toggleInteractionMode","View","imgOrigin","_img","widthOrigin","heightOrigin","divImg","processorType","ProcessorType","style","width","resetImageSize","height","initDivForImgModified","img","maxWidth","maxHeight","divImgContainer","document","createElement","textAlign","display","justifyContent","append","id","initDivForCSS","objectFit","updateImage","clear","clearData","clearImgElement","exImageViewer","console","debug","ParamCropping","x","y","rotation","isCropGraphics","shape","FrameShapeType","aspectRatio","FrameRatioPreset","toJSON","toString","JSON","stringify","update","shapeType","ParamDrawing","canvas","data","geometry","updateDrawingCanvas","getDrawingCanvas","ParamEffecting","typePreset","filters","tints","inter","d","ExpressImageData","paramCropping","paramEffecting","typeImageCompression","ImageType","ctx","ctxFiltered","init","initData","param","drawing","geometryWithNoId","geometryWithId","map","geom","getUUID","effecting","resetData","view","updateParamCrop","updateEffecting","updateData","dataSync","editing","io","emitAction","isOriginalImage","activeApp","needRevertBaseImage","checkUpdateDrawingData","rPt","environment","Environment","getRegularPointAGSM","getRegularPointSMX","nPt","getNumberedPointSMX","contextMergeImgDrawing","params","path2D","cutOutContextByShape","rotationRadian","getGeometryLength","dataDrawing","DrawingTool","then","AppImageDrawing","InteractionMode","divUpdatePre","UI","ui","interactionMode","Drawing","config","BASE_URL","themeUI","theme","themeData","geo","from","initImageByImg","colorCover","catch","err","dataIn","index","indexOf","delimiter","substring","length","appDestroy","parse","updateGeomData","updateCropping","updateFrameParam","dataGeo","getAllGeometries","dataScale","getCanvas","EditingTool","expressImageAppType","AppImageEditing","undefined","coverColor","setTypeImageCompression","pushDrawingData","setScaleGlobal","initEffect","getParamCrop","initFrame","getDrawing","filter","cropData","crop","updateImgCropByCSS","getImage","updateImgCropByImg","updateCanvasSize","updateDrawing","ExImageViewer","renderScale","ExpressImageViewer","log","ImageTools","divUpdatePost","toLowerCase","clientWidth","clientHeight","updateEnvironment","shiftEnvironment","ImageWrapper","importImage","e","objectPosition","transform","Math","PI","updateImgCrop","updateViewMode","mode","updateMode","CommonProcess","canvasSaving","imgSaving","Image","canvasMergeImg","renderer","Implementation","StateProcessing","actionIn","controller","destroyApp","ActionType","command","ActiveCommandMode","IO","stateProcessing","split","postUpdate","appDefault","parameter","switchEnvironment","pushActionMarkup","pushActionCropFilter","Theme","background","top","iconFill","marginBottom","padding","bottom","divMenu","divURL","border","margin","setAttribute","addEventListener","event","keyCode","preventDefault","value","colorText","divTitle","textContent","fontSize","fontWeight","divEditing","onclick","onmouseenter","onmouseleave","divEffecting","divDrawing","imgElementSize","min","max","step","oninput","colorFill","btn","getBtnBySVGPath","marginTop","svg","firstElementChild","fill","btnDownload","svgDownload","ModelController","getElementById","position","ExpressImageApp","debugMode","_environment","importPointAssets","bindActionEmitting","initApp","body","k","shiftKey","key","ImageUI","imageAnnoApp","hostDiv","main","divTop","divContainer","zIndex","backgroundColor","appendChild","appendButton","ACTIVECOMMAND_MODE","ImageAnnoApp","static","host","imageUI","emit","Solution","firstChild","warn","SceneManager","history","currentIndex","push","splice","getIndexCurrent","getLengthHistory","getCurrentState","historyNum","getRandomRGB","round","random","getColorDistance","r0","g0","b0","r1","g1","b1","sqrt","rgb2Hex","r","g","b","hex","join","hex2CanvasColor","thecol","visibility","isGray","replace","parseInt","rgbByA","c","visiblity","col","hex2rgba","rgb2hsl","h","s","l","hsl2rgb","hue2rgb","pp","qq","t","q","p","linearColorInterpolation","c0","c1","interpolation","cOut","i","rgbaHueSaturationLightness","Hue","Saturation","Lightness","hls","colOut","async","Promise","resolve","reject","crossOrigin","src","filterPreset","normal","film1","bg0","film2","film3","film4","highSaturation","in","out","bg1","bw1","bw2","sepia","imageFilterByArray","getFiltersString","drawImage","getFilterString","Filters","linearInterpolate","imageTint","tintArray","cx","cy","ratio","tint","imageFilterPost","globalCompositeOperation","RadialGradient","colInner","colOuter","inner","outer","setTransform","grd","createRadialGradient","addColorStop","fillStyle","fillRect","getFilterTypePresetByID","theIndex","floor","getParamsByPreset","target","j","ColorHex","ColorBlending","Apps","PROJECTION_TYPE","Cursor","Linecap","MLModelType","RendererType","Optimizer","OptimizerTextleaderline","OptimizerPoint","PointRenderType","CompileMode","BrowserType","PressType","ClickType","TouchType","EventListenerType","FHType","TextBox","TextAlign","GType","Size","ENGINE","Unit","trimContextByShape","frameShapeType","invert","beginPath","rect","angle","moveTo","arc","widthHalf","heightHalf","ellipse","closePath","offset","maskOutContextByShape","layerCanvas","canvasOut","ctxOut","getContext","imgOut","toDataURL","imgTitle","link","download","href","click","ActiveCursor","default","cursor","auto","creating","dragging","hovering","texting","set_nwse_resize","set_nesw_resize","set_ns_resize","set_ew_resize","NVector3","z","mult","divByVal","add","sub","unitize","normalize","len","drawingDataSet","svgRPoint","svgNPoint","imageSmoothingQuality","drawingData","scaleLocal","styles","renderRPoint","nodes","colorRgba","renderNPointCircle","number","renderNPoint","renderPolyline","renderPolygon","renderCircle","renderArrowSingle","renderArrowDouble","renderVertex","strokeStyle","stroke","renderRPointProjected","pos","path","xOff","yOff","save","translate","sx","sy","restore","indexNumber","bgColor","drawText","yPosTune","theFont","readableColor","font","fillText","lineWidth","lineTo","lineCap","rX","rY","arrow","single","arrayVertices","weight","pts","ii","arrayControlPoint","concat","getControlPoints","drawSpline","x0","y0","x1","y1","x2","y2","d01","pow","fa","fb","APoints","cps","cp","n","curveQuadraticArrow","cArrowByTranslation","quadraticCurveTo","setLineDash","vec0","vec1","arrowScale","getRotationByWorldCoordinateByTwo","rotate","v0","v1","origin","getAngleByTwoVectors","getAngleByTwoVectorsRadian","acos","getCosAngleByTwoVectors","getDotProduct","v2","fn","svgPath","innerHTML","debounce","timer","timeout","args","clearTimeout","setTimeout","apply","distance","getRatioByWidthHidthByHeight","originWidth","originHeight","newHeight","getRatioByNewWidth","newWidth","getRatioByNewHeight","isContainNagativeNumber","vs","toRadians","degrees","Date","getTime","before","after","atPoint","getInterpolatedArray","fitCount","newData","springFactor","tmp","toFixed","ceil","findIndexOfMin","array","mi","getRadiusByArea","area","getRadiusByCircumference","circumference","xml2json","xml","el","nodeType","documentElement","name","nodeName","content","Array","childNodes","trim","attributes","a","reduce","children","loadSVGFromHTTP","fetch","response","text","getObjectFromSVGImporting","parser","DOMParser","parseFromString","xmlToJson","obj","attribute","item","nodeValue","hasChildNodes","old","pathPointA","getCanvaseShapePathFromSVGXML","ctxShape","pathes","theI","Number","slice","region","Path2D","Object","keys","bezierCurveTo","getRectSVG","fillet","strokeWidth","createElementNS","rectSVG","regularPointAGSM","baseUrl","regularPointSMX","numberedPointSMX","pins","svgXML","xmlDoc"],"sourceRoot":""}
{"version":3,"file":"static/js/37966.3693af60.chunk.js","mappings":"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","sources":["njslab/LabStarter/Starter-Mapbox-Three/MapboxGLWrapper/index.ts","njslab/LabStarter/Starter-Mapbox-Three/index.ts"],"sourcesContent":["import mapboxgl from \"mapbox-gl\";\r\n\r\nexport class MapboxGLWrapper {\r\n    public map: mapboxgl.Map\r\n    constructor(id: string) {\r\n\r\n        this.initMap(id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        // mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            container: id,\r\n            zoom: 15,\r\n            // zoom: 16,\r\n            pitch: 60,\r\n            bearing: 120,\r\n            // minZoom: 10,\r\n            center: [-71.093161, 42.358871],\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n        });\r\n        // this.map.dragRotate.disable();\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e) => { this.mouseMove(e); });\r\n        this.map.on('click', (e) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e) => { this.mouseDown(e); });\r\n        this.map.on('dblclick', (e) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e) => { this.mouseUp(e); });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n        \r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n\r\n\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lon, lat);\r\n        // console.log(v);\r\n        this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({x, y} as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        const p = this.map.project([lon, lat])\r\n        return [p.x, p.y];\r\n    }\r\n    public mouseDown = (e) => {\r\n        // console.log(this.toScreen(-71.093161, 42.358871))\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseUp = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseMove = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseClick = (e) => {\r\n        // console.log(e)\r\n        \r\n        // console.log(this.toMap(100, 100));\r\n        // console.log(e.point)\r\n        // this.center()\r\n        // this.map.zoomTo(0)\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseDClick = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n}\r\n\r\n\r\n","import { MapboxGLWrapper } from './MapboxGLWrapper';\r\nimport { RendererCanvas } from '../../../lib'\r\n\r\n// import {TransformControls} from 'three-addons'\r\n\r\nimport { TransformControls } from 'threejs-transformcontrols'\r\n\r\n// import { TransformControls } from 'threejs_transformcontrols';\r\n\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\n// 'addons/controls/TransformControls.js';\r\n\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nimport * as THREE from 'three'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public mapboxWrapper: MapboxGLWrapper;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n        this.divHost.style.position = 'relative';\r\n\r\n        this.mapboxWrapper = new MapboxGLWrapper(this.divHost.id);\r\n        this.mapboxWrapper.mouseDown = this.mouseDown\r\n        this.mapboxWrapper.mouseUp = this.mouseUp\r\n        this.mapboxWrapper.mouseClick = this.mouseClick\r\n        this.mapboxWrapper.mouseMove = this.mouseMove\r\n\r\n        setTimeout(() => {\r\n            this.renderer = new Renderer(this.divHost, this);\r\n\r\n            let boxLayer = new BoxCustomLayer('box')\r\n\r\n            this.mapboxWrapper.map.on('load', () => {\r\n                // @ts-ignore\r\n                this.mapboxWrapper.map.addLayer(boxLayer);\r\n            });\r\n\r\n\r\n\r\n            this.mapboxWrapper.map.addLayer({\r\n                id: 'custom-threebox-model',\r\n                type: 'custom',\r\n                renderingMode: '3d',\r\n                onAdd: function () {\r\n                    // Creative Commons License attribution:  Metlife Building model by https://sketchfab.com/NanoRay\r\n                    // https://sketchfab.com/3d-models/metlife-building-32d3a4a1810a4d64abb9547bb661f7f3\r\n                    const scale = 3.2;\r\n                    const options = {\r\n                        obj: 'https://docs.mapbox.com/mapbox-gl-js/assets/metlife-building.gltf',\r\n                        type: 'gltf',\r\n                        scale: { x: scale, y: scale, z: 2.7 },\r\n                        units: 'meters',\r\n                        rotation: { x: 90, y: -90, z: 0 }\r\n                    };\r\n\r\n                    // tb.loadObj(options, (model) => {\r\n                    //     model.setCoords([-73.976799, 40.754145]);\r\n                    //     model.setRotation({ x: 0, y: 0, z: 241 });\r\n                    //     tb.add(model);\r\n                    // });\r\n                },\r\n\r\n                render: function () {\r\n                    // tb.update();\r\n                }\r\n            });\r\n\r\n        }, 200);\r\n\r\n    }\r\n    public mouseDown = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseUp = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseDrag = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseClick = (e) => {\r\n        // TODO\r\n        // console.log('dddd');\r\n        // console.log(e);\r\n        // console.log(e['lngLat']);\r\n        this.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\r\n    }\r\n    public mouseMove = (e) => {\r\n        // TODO\r\n    }\r\n    public keyDown(k: KeyboardEvent) {\r\n        // TODO\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\nexport class Renderer extends RendererCanvas {\r\n    public app: Solution\r\n    public time: number = 0.0;\r\n    public pts: number[][] = [];\r\n    constructor(div: any, app: Solution) {\r\n        super(div);\r\n        this.app = app;\r\n        this.canvas.id = 'mapboxCustom'\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n        this.canvas.style.pointerEvents = 'none';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        this.pts.push([-71.093161, 42.358871]);\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseUp = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseDrag = (x: number, y: number): void => {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.time += 0.1;\r\n\r\n        for (let i = 0; i < this.pts.length; ++i) {\r\n            const pt = this.pts[i];\r\n            const p = this.app.mapboxWrapper.toScreen(pt[0], pt[1]);\r\n            // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(p[0], p[1], Math.sin(this.time) * 3 + 15, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fillStyle = '#0f0';\r\n            ctx.fill();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nclass BoxCustomLayer {\r\n    type = 'custom';\r\n    renderingMode = '3d';\r\n    id;\r\n\r\n    camera;\r\n    center;\r\n    cameraTransform;\r\n    map;\r\n    scene;\r\n    ball\r\n\r\n    controls;\r\n    renderer;\r\n\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    async onAdd(map, gl) {\r\n        this.camera = new THREE.PerspectiveCamera(28, window.innerWidth / window.innerHeight, 0.1, 1e6);\r\n\r\n        const { MercatorCoordinate } = mapboxgl;\r\n\r\n        const centerLngLat = map.getCenter();\r\n        this.center = MercatorCoordinate.fromLngLat(centerLngLat, 0);\r\n        const { x, y, z } = this.center;\r\n\r\n        // console.log(x, y, z)\r\n\r\n        const s = this.center.meterInMercatorCoordinateUnits();\r\n\r\n        const scale = new THREE.Matrix4().makeScale(s, s, -s);\r\n        const rotation = new THREE.Matrix4().multiplyMatrices(\r\n            new THREE.Matrix4().makeRotationX(-0.5 * Math.PI),\r\n            new THREE.Matrix4().makeRotationY(Math.PI));\r\n\r\n        this.cameraTransform = new THREE.Matrix4().multiplyMatrices(scale, rotation).setPosition(x, y, z);\r\n\r\n        this.map = map;\r\n\r\n        this.scene = this.makeScene();\r\n\r\n        // this.scene.add(new THREE.AxesHelper(1000));\r\n\r\n\r\n\r\n        // parameters to ensure the model is georeferenced correctly on the map\r\n        var modelOrigin = [126.735901, 37.348980];\r\n        var modelAltitude = 0;\r\n        var modelRotate = [Math.PI / 2, 0, 0];\r\n\r\n        // @ts-ignore\r\n        var modelAsMercatorCoordinate = mapboxgl.MercatorCoordinate.fromLngLat(modelOrigin, modelAltitude);\r\n        // transformation parameters to position, rotate and scale the 3D model onto the map\r\n        var modelTransform = {\r\n            translateX: modelAsMercatorCoordinate.x,\r\n            translateY: modelAsMercatorCoordinate.y,\r\n            translateZ: modelAsMercatorCoordinate.z,\r\n            rotateX: modelRotate[0],\r\n            rotateY: modelRotate[1],\r\n            rotateZ: modelRotate[2],\r\n            /* Since our 3D model is in real world meters, a scale transform needs to be\r\n             * applied since the CustomLayerInterface expects units in MercatorCoordinates.\r\n             */\r\n            scale: modelAsMercatorCoordinate.meterInMercatorCoordinateUnits()\r\n        };\r\n\r\n        console.log(modelTransform)\r\n\r\n\r\n\r\n\r\n\r\n        this.ball = new THREE.Mesh(new THREE.SphereGeometry(100, 8, 8), new THREE.MeshBasicMaterial({ color: 'red' }));\r\n        this.ball.position.set(0, 0, 0);\r\n        this.scene.add(this.ball);\r\n\r\n\r\n        // use the Mapbox GL JS map canvas for three.js\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            canvas: map.getCanvas(),\r\n            context: gl,\r\n            antialias: true,\r\n        });\r\n\r\n        this.renderer.autoClear = false;\r\n\r\n        // this.controls = new TransformControls(this.camera, this.renderer.domElement);\r\n        // this.controls.size = 50;\r\n        // this.scene.add(this.controls);\r\n        // this.controls.attach(this.ball);\r\n\r\n    }\r\n\r\n    makeScene() {\r\n        const scene = new THREE.Scene();\r\n        const skyColor = 0xb1e1ff; // light blue\r\n        const groundColor = 0xb97a20; // brownish orange\r\n\r\n        scene.add(new THREE.AmbientLight(0xffffff, 0.25));\r\n        scene.add(new THREE.HemisphereLight(skyColor, groundColor, 0.25));\r\n\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n        directionalLight.position.set(-70, -70, 100).normalize();\r\n        scene.add(directionalLight);\r\n\r\n        return scene;\r\n    }\r\n\r\n    render(gl, matrix) {\r\n        this.camera.projectionMatrix = new THREE.Matrix4()\r\n            .fromArray(matrix)\r\n            .multiply(this.cameraTransform);\r\n        this.renderer.state.reset();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.map.triggerRepaint();\r\n    }\r\n}\r\n"],"names":["MapboxGLWrapper","constructor","id","map","center","lng","lat","setCenter","toMap","x","y","p","this","unproject","toScreen","lon","project","mouseDown","e","mouseUp","mouseMove","mouseClick","mouseDClick","initMap","mapboxgl","process","container","zoom","pitch","bearing","style","on","div","document","getElementsByClassName","position","display","Solution","divHost","mapboxWrapper","renderer","mouseDrag","pts","push","getElementById","setTimeout","Renderer","boxLayer","BoxCustomLayer","addLayer","type","renderingMode","onAdd","render","keyDown","k","destroy","lastElementChild","removeChild","RendererCanvas","app","super","time","canvas","width","height","pointerEvents","start","ctx","i","length","pt","beginPath","arc","Math","sin","PI","closePath","fillStyle","fill","camera","cameraTransform","scene","ball","controls","async","gl","THREE","window","innerWidth","innerHeight","MercatorCoordinate","centerLngLat","getCenter","fromLngLat","z","s","meterInMercatorCoordinateUnits","scale","makeScale","rotation","multiplyMatrices","makeRotationX","makeRotationY","setPosition","makeScene","modelRotate","modelAsMercatorCoordinate","modelTransform","translateX","translateY","translateZ","rotateX","rotateY","rotateZ","console","log","color","set","add","getCanvas","context","antialias","autoClear","directionalLight","normalize","matrix","projectionMatrix","fromArray","multiply","state","reset","triggerRepaint"],"sourceRoot":""}
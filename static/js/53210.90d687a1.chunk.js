"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[53210],{53210:(t,e,n)=>{n.r(e),n.d(e,{Solution:()=>i});class i{constructor(t){this.div=void 0,this.renderer=void 0,this.pts=[],this.t=0,this.div=document.getElementById(t),this.renderer=new h(t),this.pts=s(),this.renderer.pts=this.pts,this.upadte()}upadte(){requestAnimationFrame((()=>{this.upadte()}));for(let t=0;t<this.pts.length;++t)this.pts[t].z+=2*Math.cos((this.pts[t].x+this.pts[t].y)*this.t);this.t+=.001}destroy(){try{for(;this.div&&this.div.lastElementChild;){const t=this.div.lastElementChild;this.div.removeChild(t)}}catch(t){console.error("Error removing child elements:",t)}}}const s=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;const e=[];for(let n=0;n<t;n++)e.push({x:500*(Math.random()-.5),y:500*(Math.random()-.5),z:500*(Math.random()-.5)});return e};class h{constructor(t){this.pts=[];const e=document.getElementById(t),n=e.getBoundingClientRect(),i=document.createElement("canvas");i.width=n.width,i.height=n.height,e.appendChild(i);const s=i.getContext("2d");let h=-Math.PI/2,o=0,c=!1,l=!1,d=1,r=0,a=0,u=0,m=0,p=0,v=0,g=500;const y=()=>{requestAnimationFrame((()=>{y()})),s.clearRect(0,0,i.width,i.height),this.pts.forEach((t=>{const e=((t,e,n)=>{const i=Math.cos(e),s=Math.sin(e),h=Math.cos(n),o=Math.sin(n);let c=t.x*h-t.y*o,l=t.x*o+t.y*h,d=t.z*i-l*s;return l=t.z*s+l*i,{x:c,y:l,z:d}})(t,h,o),n=(t=>{const e=g/(g+t.y)*d;return{x:t.x*e+i.width/2+u,y:-t.z*e+i.height/2+m}})(e);let c=2*(g/(g+e.y)*d);c=c<.1?.1:c,s.beginPath(),s.arc(n.x,n.y,c,0,2*Math.PI),s.fillStyle="#f00",s.fill()}))};i.addEventListener("mousedown",(t=>{0===t.button?c=!0:2===t.button&&(l=!0,p=t.clientX-u,v=t.clientY-m),r=t.clientX,a=t.clientY})),i.addEventListener("mousemove",(t=>{if(c){const e=t.clientX-r,n=t.clientY-a;h-=.01*n,o+=.01*e,r=t.clientX,a=t.clientY,y()}else l&&(u=t.clientX-p,m=t.clientY-v,y())})),i.addEventListener("mouseup",(()=>{c=!1,l=!1})),i.addEventListener("contextmenu",(t=>{t.preventDefault()})),i.addEventListener("wheel",(t=>{const e=t.clientX-i.getBoundingClientRect().left,n=t.clientY-i.getBoundingClientRect().top,s=d,h=Math.max(.001,.02*d);d+=t.deltaY*-h,d=Math.min(Math.max(d,.1),50);const o=d/s;u-=(e-i.width/2-u)*(o-1),m-=(n-i.height/2-m)*(o-1),y()})),y()}}}}]);
//# sourceMappingURL=53210.90d687a1.chunk.js.map
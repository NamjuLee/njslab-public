{"version":3,"file":"static/js/58009.c8576f0a.chunk.js","mappings":"qHAAO,MAAMA,EAcTC,YAAYC,GAAsB,KAb3BC,aAAO,OACPC,YAAM,OACNC,SAAG,OACHC,QAAkB,EAAM,KACxBC,WAAqB,EAAM,KAC3BC,UAAoB,EAAM,KAC1BC,EAAc,CAAC,EAAE,GAAG,KAEnBC,SAAmB,EAAM,KACzBC,MAAgB,IAAI,KACpBC,WAAK,OACLC,QAAkB,EAAM,KAyDxBC,OAAS,KACb,MAAMC,EAAWC,KAAKb,QAAQc,wBAC9BD,KAAKZ,OAAOc,MAAQH,EAASG,MAC7BF,KAAKZ,OAAOe,OAASJ,EAASI,MAAM,EAzDpCH,KAAKb,QAAUD,EACf,MAAMa,EAAWC,KAAKb,QAAQc,wBAC9BD,KAAKZ,OAASgB,SAASC,cAAc,UAErCL,KAAKZ,OAAOc,MAAQH,EAASG,MAC7BF,KAAKZ,OAAOe,OAASJ,EAASI,OAC9BH,KAAKb,QAAQmB,YAAYN,KAAKZ,QAC9BY,KAAKX,IAAMW,KAAKZ,OAAOmB,WAAW,MAClCP,KAAKZ,OAAOoB,QAAWC,IACnBT,KAAKJ,MAAQc,YAAW,KACfV,KAAKN,SACNM,KAAKW,WAAWF,EAAEG,QAASH,EAAEI,SAEjCb,KAAKH,QAAS,EACdG,KAAKN,SAAU,CAAK,GAEpBM,KAAKL,MAAM,EAEnBK,KAAKZ,OAAO0B,QAAWL,IACnBT,KAAKe,WAAWN,EAAE,EAEtBT,KAAKZ,OAAO4B,WAAcP,IACtBT,KAAKiB,YAAYR,EAAEG,QAASH,EAAEI,SAC9BK,aAAalB,KAAKJ,OAClBI,KAAKN,SAAU,EACfM,KAAKmB,iBAAiBV,EAAEG,QAASH,EAAEI,QAAQ,EAE/Cb,KAAKZ,OAAOgC,YAAeX,IACvBT,KAAKiB,YAAYR,EAAEG,QAASH,EAAEI,SAC9Bb,KAAKV,QAAS,EACdU,KAAKqB,UAAUZ,EAAEG,QAASH,EAAEI,QAAQ,EAExCb,KAAKZ,OAAOkC,UAAab,IACrBT,KAAKiB,YAAYR,EAAEG,QAASH,EAAEI,SAC9Bb,KAAKV,QAAS,EACdU,KAAKH,QAAS,EACdG,KAAKuB,QAAQd,EAAEG,QAASH,EAAEI,QAAQ,EAEtCb,KAAKZ,OAAOoC,YAAef,IACvBT,KAAKiB,YAAYR,EAAEG,QAASH,EAAEI,SAC1Bb,KAAKV,QACLU,KAAKH,QAAS,EACdG,KAAKN,SAAU,EACfM,KAAKyB,UAAUhB,EAAEG,QAASH,EAAEI,UAE5Bb,KAAK0B,UAAUjB,EAAEG,QAASH,EAAEI,QAChC,EAEJc,OAAOC,iBAAiB,SAAU5B,KAAKF,OAE3C,CACO+B,QACH7B,KAAK8B,KAAK9B,KAAKX,IACnB,CAMO0C,UACHJ,OAAOK,oBAAoB,SAAUhC,KAAKF,QAC1CE,KAAKR,UAAW,EAChB,IACI,KAAOQ,KAAKb,SAAWa,KAAKb,QAAQ8C,kBAAkB,CAClD,MAAMC,EAAYlC,KAAKb,QAAQ8C,iBAC/BjC,KAAKb,QAAQgD,YAAYD,EAC7B,CACc,CAAhB,MAAOE,GAAS,CAClBpC,KAAKqC,aACT,CACOA,cAEP,CACOP,KAAKzC,GACJW,KAAKR,WACT8C,uBAAsB,KAAQtC,KAAK8B,KAAKzC,EAAI,IAC5CA,EAAIkD,WAA8B,GAApBlD,EAAID,OAAOc,OAAmC,GAArBb,EAAID,OAAOe,OAAed,EAAID,OAAOc,MAAOb,EAAID,OAAOe,QAC9FH,KAAKwC,OAAOnD,GACZW,KAAKyC,aACT,CACOA,aACHzC,KAAK0C,YAAY1C,KAAKX,IAAKW,KAAKP,EAAE,GAAIO,KAAKP,EAAE,GACjD,CACO+C,OAAOnD,GACV,CAEGsB,WAAWgC,EAAWC,GAErB5C,KAAKT,WAAasD,QAAQC,IAAI,QACtC,CACO3B,iBAAiBwB,EAAWC,GAE3B5C,KAAKT,WAAasD,QAAQC,IAAI,UACtC,CACOzB,UAAUsB,EAAWC,GAEpB5C,KAAKT,WAAasD,QAAQC,IAAI,OACtC,CACOvB,QAAQoB,EAAWC,GAElB5C,KAAKT,WAAasD,QAAQC,IAAI,KACtC,CACOpB,UAAUiB,EAAWC,GAGpB5C,KAAKT,WAAasD,QAAQC,IAAI,OACtC,CACOrB,UAAUkB,EAAWC,GAEpB5C,KAAKT,WAAasD,QAAQC,IAAI,OACtC,CACO/B,WAAWgC,GAEV/C,KAAKT,WAAasD,QAAQC,IAAI,QAASC,EAC/C,CACOL,YAAYrD,EAA+BsD,EAAWC,GACzDvD,EAAI2D,UAAY,OAChB3D,EAAI4D,YACJ5D,EAAI6D,IAAIlD,KAAKP,EAAE,GAAIO,KAAKP,EAAE,GAAI,EAAG,EAAa,EAAV0D,KAAKC,IACzC/D,EAAIgE,SAAS,MAAD,OAAOrD,KAAKP,EAAE,GAAE,eAAOO,KAAKP,EAAE,IAAKO,KAAKP,EAAE,GAAK,GAAIO,KAAKP,EAAE,GAAK,GAC3EJ,EAAIiE,YACJjE,EAAIkE,MACR,CACOtC,YAAY0B,EAAWC,GAC1B5C,KAAKP,EAAE,GAAK0D,KAAKK,MAAMb,EAAwB,GAApB3C,KAAKZ,OAAOc,OACvCF,KAAKP,EAAE,GAAK0D,KAAKK,MAAMZ,EAAyB,GAArB5C,KAAKZ,OAAOe,OAC3C,E,gEC3IG,MAAMsD,UAAiBzE,EAAAA,EAI1BC,YAAYyE,GACRC,MAAMvD,SAASwD,eAAeF,IAC9B,KALJG,GAAc,IAAIC,EAAQ,EAAG,EAAG,GAAG,KACnCC,EAAY,EAAI,KAChBC,IAAe,GAIXhE,KAAKX,IAAI4E,UAAkC,GAAxBjE,KAAKX,IAAID,OAAOc,MAAsC,GAAzBF,KAAKX,IAAID,OAAOe,QAEhEH,KAAKkE,MACT,CACOA,OACHlE,KAAK6B,QACL7B,KAAKgE,IAAIG,KAAK,IAAIC,EAAM,EAAG,EAAG,GAClC,CACO5B,OAAOnD,GACVA,EAAI2D,UAAY,OAEhB,MAAMqB,GAAK,GAEXrE,KAAKgE,IAAIM,SAASvB,IAEd,MAAMwB,EAAKC,EAAOxE,KAAK6D,GAAId,EAAE0B,KACvBC,EAAIH,EAAGI,SACbJ,EAAGK,UACH7B,EAAE8B,MAAMlC,EAAI4B,EAAG5B,EAAIQ,KAAK2B,KAAK,KAAQJ,EAAIA,GAAK,GAAM,EACpD3B,EAAE8B,MAAMjC,EAAI2B,EAAG3B,EAAIO,KAAK2B,KAAK,KAAQJ,EAAIA,GAAK,GAAM,EAAIL,EACxDtB,EAAE8B,MAAME,EAAIR,EAAGQ,EAAI5B,KAAK2B,KAAK,KAAQJ,EAAIA,GAAK,GAAM,EAIpD3B,EAAEiC,KAAK,IACPjC,EAAEP,OAAOnD,EAAI,IAGjBW,KAAK+D,GAAK,EAGd,CACOrC,UAAUiB,EAAWC,GACxB5C,KAAK6D,GAAG,GAAKlB,EAAwB,GAApB3C,KAAKZ,OAAOc,MAC7BF,KAAK6D,GAAG,GAAKjB,EAAyB,GAArB5C,KAAKZ,OAAOe,MACjC,CAEOQ,WAAWgC,EAAWC,GACzB,MAAMG,EAAI,IAAIqB,EAAMzB,EAAwB,GAApB3C,KAAKZ,OAAOc,MAAa0C,EAAyB,GAArB5C,KAAKZ,OAAOe,OAAc,GAC/EH,KAAKgE,IAAIG,KAAKpB,EAClB,EAGJ,MAAMqB,EAQFnF,YAAY0D,EAAGC,EAAGmC,GAAI,KAPfN,SAAG,OACHQ,cAAQ,OACRJ,WAAK,OACLK,KAAO,EAAE,KACTC,EAAY,GAAG,KACfC,GAAK,EAGRpF,KAAKyE,IAAW,IAAIX,EAAQnB,EAAGC,EAAGmC,GAClC/E,KAAKiF,SAAW,IAAInB,EAAQ,EAAG,EAAG,GAClC9D,KAAK6E,MAAW,IAAIf,EAAQ,EAAG,EAAG,EACtC,CACOkB,OAA6B,IAAxBK,EAAe,uDAAG,GAK1BrF,KAAKiF,SAAStC,GAAK0C,EACnBrF,KAAKiF,SAASrC,GAAKyC,EACnBrF,KAAKiF,SAASF,GAAKM,EAGnBrF,KAAKiF,SAAStC,GAAK3C,KAAK6E,MAAMlC,GAAK3C,KAAKoF,GAAKpF,KAAKkF,MAClDlF,KAAKiF,SAASrC,GAAK5C,KAAK6E,MAAMjC,GAAK5C,KAAKoF,GAAKpF,KAAKkF,MAAQ,GAC1DlF,KAAKiF,SAASF,GAAK/E,KAAK6E,MAAME,GAAK/E,KAAKoF,GAAKpF,KAAKkF,MAMlDlF,KAAKyE,IAAI9B,GAAK3C,KAAKiF,SAAStC,EAAI3C,KAAKoF,GACrCpF,KAAKyE,IAAI7B,GAAK5C,KAAKiF,SAASrC,EAAI5C,KAAKoF,GACrCpF,KAAKyE,IAAIM,GAAK/E,KAAKiF,SAASF,EAAI/E,KAAKoF,GAIjCpF,KAAKyE,IAAI7B,EAAI,IACb5C,KAAKyE,IAAI7B,EAAI,EAGT5C,KAAKiF,SAASrC,EAAI,IAClB5C,KAAKiF,SAASrC,IAAM,EACpB5C,KAAK6E,MAAMjC,IAAM,IAkBzB5C,KAAKoF,IAAM,EACf,CACO5C,OAAOnD,GACVA,EAAI2D,UAAY,OAChB3D,EAAI4D,YACJ5D,EAAI6D,IAAIlD,KAAKyE,IAAI9B,EAAG3C,KAAKyE,IAAI7B,EAAG5C,KAAKmF,EAAG,EAAa,EAAVhC,KAAKC,IAChD/D,EAAIiE,YACJjE,EAAIkE,OAEJlE,EAAI2D,UAAY,OAChB3D,EAAIgE,SAAS,GAAD,OAAIrD,KAAKyE,IAAI9B,EAAC,YAAI3C,KAAKyE,IAAI7B,GAAK5C,KAAKyE,IAAI9B,EAAI,GAAI3C,KAAKyE,IAAI7B,EAAI,GAC9E,EAIJ,MAGM4B,EAAS,CAACc,EAAYC,IACjB,IAAIzB,EAAQwB,EAAE3C,EAAI4C,EAAE5C,EAAG2C,EAAE3C,EAAI4C,EAAE3C,EAAG0C,EAAEP,EAAIQ,EAAER,GAMrD,MAAMjB,EAIF7E,YAAY0D,EAAGC,EAAGmC,GAAI,KAHfpC,EAAY,EAAI,KAChBC,EAAY,EAAI,KAChBmC,EAAY,EAEf/E,KAAK2C,EAAIA,EACT3C,KAAK4C,EAAIA,EACT5C,KAAK+E,EAAIA,CACb,CACOS,SAASzC,GACZ/C,KAAK2C,GAAKI,EACV/C,KAAK4C,GAAKG,EACV/C,KAAK+E,GAAKhC,CACd,CACO0C,IAAI1C,GACP/C,KAAK2C,GAAKI,EAAEJ,EACZ3C,KAAK4C,GAAKG,EAAEH,EACZ5C,KAAK+E,GAAKhC,EAAEgC,CAChB,CACOJ,SACH,MAAMe,EAAMvC,KAAKwC,KAAK3F,KAAK2C,EAAI3C,KAAK2C,EAAI3C,KAAK4C,EAAI5C,KAAK4C,EAAI5C,KAAK+E,EAAI/E,KAAK+E,GACxE,OAAIW,EAAM,KACC,KAEJA,CACX,CACOd,UACH,IAAIc,EAAcvC,KAAKwC,KAAK3F,KAAK2C,EAAI3C,KAAK2C,EAAI3C,KAAK4C,EAAI5C,KAAK4C,EAAI5C,KAAK+E,EAAI/E,KAAK+E,GAC9E,OAAIW,EAAM,OAGV1F,KAAK2C,EAAI3C,KAAK2C,EAAI+C,EAClB1F,KAAK4C,EAAI5C,KAAK4C,EAAI8C,EAClB1F,KAAK+E,EAAI/E,KAAK+E,EAAIW,GAJP1F,IAMf,E","sources":["njslab/Workshop/workshop-vector/base/RendererCanvas.ts","njslab/Workshop/workshop-vector/workshop-vector-10.ts"],"sourcesContent":["export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost && this.divHost.lastElementChild) {\r\n                const lastChild = this.divHost.lastElementChild as Node;\r\n                this.divHost.removeChild(lastChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}","import { RendererCanvas } from './base/RendererCanvas';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    mv: Vector3 = new Vector3(0, 0, 0);\r\n    t: number = 0.0;\r\n    pts: Point[] = [];\r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        // this.canvas.style.background = '#fff';\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        this.start();\r\n        this.pts.push(new Point(0, 0, 0))\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        ctx.fillStyle = '#f00';\r\n\r\n        const g = -0.9\r\n\r\n        this.pts.forEach((v) => {\r\n\r\n            const dv = divide(this.mv, v.vec);\r\n            const L = dv.length();\r\n            dv.unitize();\r\n            v.force.x = dv.x * Math.exp(-0.001 * L * L) * 0.1 + 0 * g;\r\n            v.force.y = dv.y * Math.exp(-0.001 * L * L) * 0.1 + 1 * g;\r\n            v.force.z = dv.z * Math.exp(-0.001 * L * L) * 0.1 + 0 * g;\r\n\r\n\r\n            // v.force.y = -.0000095;\r\n            v.move(0.9);\r\n            v.render(ctx);\r\n        });\r\n\r\n        this.t += 0.1;\r\n\r\n        // console.log(this.t);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.mv[0] = x - this.canvas.width * 0.5;\r\n        this.mv[1] = y - this.canvas.height * 0.5;\r\n    }\r\n\r\n    public mouseClick(x: number, y: number): void {\r\n        const v = new Point(x - this.canvas.width * 0.5, y - this.canvas.height * 0.5, 0);\r\n        this.pts.push(v);\r\n    }\r\n}\r\n\r\nclass Point {\r\n    public vec: Vector3;\r\n    public velocity: Vector3;\r\n    public force: Vector3;\r\n    public mass = 1;\r\n    public r: number = 10;\r\n    public dt = 0.0;\r\n\r\n    constructor(x, y, z) {\r\n        this.vec =      new Vector3(x, y, z);\r\n        this.velocity = new Vector3(0, 0, 0);\r\n        this.force =    new Vector3(0, 0, 0);\r\n    }\r\n    public move(damping: number = 0.5) {\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        this.velocity.x *= damping;\r\n        this.velocity.y *= damping;\r\n        this.velocity.z *= damping;\r\n\r\n\r\n        this.velocity.x += this.force.x * (this.dt / this.mass);\r\n        this.velocity.y += this.force.y * (this.dt / this.mass) - 0.9;\r\n        this.velocity.z += this.force.z * (this.dt / this.mass);\r\n\r\n        // if (this.vec.y < 0) {\r\n        //     this.force.y *= -1.0\r\n        // }\r\n\r\n        this.vec.x += this.velocity.x * this.dt\r\n        this.vec.y += this.velocity.y * this.dt \r\n        this.vec.z += this.velocity.z * this.dt\r\n\r\n\r\n        \r\n        if (this.vec.y < 0) {\r\n            this.vec.y = 0.0\r\n            // this.velocity.y = 0.0;\r\n\r\n            if (this.velocity.y < 0.0) {\r\n                this.velocity.y *= -1;\r\n                this.force.y *= -1;\r\n            }\r\n            // this.force.y =-0.95 * this.force.y ;\r\n        }\r\n\r\n        // if (p.Z < 0.0) {\r\n        //     p.Z = 0.0;\r\n        //     if (u.Z < 0.0) u.Z = -u.Z;\r\n        //   }\r\n\r\n\r\n        // this.velocity.multiply(damping);\r\n        // this.force.multiply(this.dt / this.mass)\r\n        // this.velocity.add(this.force)\r\n        // this.velocity.multiply(this.dt)\r\n        // this.vec.add(this.velocity);\r\n\r\n\r\n        this.dt += 0.1;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = '#eee';\r\n        ctx.fillText(`${this.vec.x} ${this.vec.y}`, this.vec.x - 10, this.vec.y - 15);\r\n    }\r\n\r\n}\r\n\r\nconst add = (a: Vector3, b: Vector3) => {\r\n    return new Vector3(a.x + b.x, a.x + b.y, a.z + b.z);\r\n}\r\nconst divide = (a: Vector3, b: Vector3) => {\r\n    return new Vector3(a.x - b.x, a.x - b.y, a.z - b.z);\r\n}\r\nconst multiply = (a: Vector3, b: number) => {\r\n    return new Vector3(a.x * b, a.x * b, a.z * b);\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    public multiply(v: number) {\r\n        this.x *= v;\r\n        this.y *= v;\r\n        this.z *= v;\r\n    }\r\n    public add(v: Vector3) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n    }\r\n    public length() {\r\n        const len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        if (len < 0.00001) {\r\n            return 0.00001;\r\n        }\r\n        return len;\r\n    }\r\n    public unitize() {\r\n        let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        if (len < 0.0001) {\r\n            return this;\r\n        }\r\n        this.x = this.x / len;\r\n        this.y = this.y / len;\r\n        this.z = this.z / len;\r\n        return this;\r\n    }\r\n}\r\n"],"names":["RendererCanvas","constructor","div","divHost","canvas","ctx","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","this","getBoundingClientRect","width","height","document","createElement","appendChild","getContext","onclick","e","setTimeout","mouseClick","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","mouseMove","window","addEventListener","start","loop","destroy","removeEventListener","lastElementChild","lastChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","render","renderPost","renderMouse","x","y","console","log","v","fillStyle","beginPath","arc","Math","PI","fillText","closePath","fill","floor","Solution","id","super","getElementById","mv","Vector3","t","pts","translate","init","push","Point","g","forEach","dv","divide","vec","L","length","unitize","force","exp","z","move","velocity","mass","r","dt","damping","a","b","multiply","add","len","sqrt"],"sourceRoot":""}
{"version":3,"file":"static/js/58359.78a45188.chunk.js","mappings":"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","sources":["njslab/Raster/image-color-correction/CFilter.ts","njslab/Raster/image-color-correction/index.ts"],"sourcesContent":["\nclass CoreWebGL2 {\n    private positionBuffer: WebGLBuffer;\n    private texCoordBuffer: WebGLBuffer;\n    private vertexShader: WebGLShader;\n    private fragmentShader: WebGLShader;\n    private texture: WebGLTexture;\n    private canvasGL: HTMLCanvasElement;\n    private img: HTMLImageElement;\n    public program: WebGLProgram;\n    public gl: WebGLRenderingContext;\n    constructor(img: HTMLImageElement, vertexShaderSource: string, fragmentShaderSource: string) {\n        this.canvasGL = document.createElement('canvas');\n        this.canvasGL.width = img.width;\n        this.canvasGL.height = img.height;\n        this.gl = this.canvasGL.getContext('webgl2');\n        this.img = img;\n        this.init(vertexShaderSource, fragmentShaderSource )\n    }\n    public get canvas() {\n        return this.canvasGL;\n    }\n    private init(vertexShaderSource: string, fragmentShaderSource: string) {\n        const gl = this.gl;\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.img);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n        this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(this.vertexShader, vertexShaderSource);\n        gl.compileShader(this.vertexShader);\n\n        this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(this.fragmentShader, fragmentShaderSource);\n        gl.compileShader(this.fragmentShader);\n\n        this.program = gl.createProgram() as WebGLProgram;\n        gl.attachShader(this.program, this.vertexShader);\n        gl.attachShader(this.program, this.fragmentShader);\n        gl.linkProgram(this.program);\n        gl.useProgram(this.program);\n\n        const positionAttributeLocation: number = gl.getAttribLocation(this.program, 'a_position');\n        const texCoordAttributeLocation: number = gl.getAttribLocation(this.program, 'a_texCoord');\n        const textureUniformLocation: WebGLUniformLocation = gl.getUniformLocation(this.program, 'u_texture');\n        gl.uniform1i(textureUniformLocation, 0);\n\n        this.positionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(positionAttributeLocation);\n        gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n\n        this.texCoordBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(texCoordAttributeLocation);\n        gl.vertexAttribPointer(texCoordAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n    public destroy() {\n        this.gl.deleteProgram(this.program);\n        this.gl.deleteTexture(this.texture);\n        this.gl.deleteShader(this.vertexShader);\n        this.gl.deleteShader(this.fragmentShader);\n        this.gl.deleteBuffer(this.positionBuffer);\n        this.gl.deleteBuffer(this.texCoordBuffer);\n        // console.log('removed');\n    }\n}\n\nexport class CFilter {\n    private vertexShaderSource = `\n        attribute vec2 a_position;\n        attribute vec2 a_texCoord;\n        varying vec2 v_texCoord;\n\n        void main() {\n            gl_Position = vec4(a_position, 0, 1);\n            v_texCoord = a_texCoord;\n        }\n    `;\n\n    private fragmentShaderSource = `\n        precision mediump float;\n        \n        uniform vec2 u_resolution;\n        uniform float u_blurRadius;\n        uniform float u_sepia;\n        uniform float u_contrast;\n        uniform float u_brightness;\n        uniform float u_saturation;\n        uniform float u_hueRotation;\n        uniform sampler2D u_texture;\n        varying vec2 v_texCoord;\n\n        vec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n            vec4 color = vec4(0.0);\n            vec2 off1 = vec2(1.3333333333333333) * direction;\n            color += texture2D(image, uv) * 0.29411764705882354;\n            color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n            color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n            return color; \n        }\n\n        void main() {\n            vec2 flippedTexCoord = vec2(v_texCoord.x, 1.0 - v_texCoord.y);\n            vec4 color = texture2D(u_texture, flippedTexCoord);\n\n            float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n\n            // ..................\n            if (u_sepia > .0) {\n                vec3 sepia = vec3(1.0, 0.95, 0.82);\n                color = mix(color, vec4(gray * sepia, color.a), u_sepia);\n            }\n\n\n            // ..................\n            // if ((u_brightness != 1.0) || (u_contrast != 1.0)) {\n                vec3 colorRgb = color.rgb * u_brightness;\n                colorRgb = (colorRgb - vec3(0.5)) * max(u_contrast, 0.0) + vec3(0.5);\n                color = vec4(colorRgb, color.a);\n            // }\n\n\n            // ..................\n            color = vec4(mix(vec3(gray), color.rgb, u_saturation), color.a);\n\n            \n            // ..................\n            if (u_hueRotation != .0){\n                float angle = u_hueRotation * 3.14159265358979323846264 / 180.0;\n                float s = sin(angle);\n                float c = cos(angle);\n                mat3 hueRotationMatrix = mat3(\n                    0.213 + 0.787 * c - 0.213 * s, 0.715 - 0.715 * c - 0.715 * s, 0.072 - 0.072 * c + 0.928 * s,\n                    0.213 - 0.213 * c + 0.143 * s, 0.715 + 0.285 * c + 0.140 * s, 0.072 - 0.072 * c - 0.283 * s,\n                    0.213 - 0.213 * c - 0.787 * s, 0.715 - 0.715 * c + 0.715 * s, 0.072 + 0.928 * c + 0.072 * s\n                );\n                colorRgb = color.rgb * hueRotationMatrix;\n                color = vec4(colorRgb, color.a);\n            }\n\n            // ..................\n            gl_FragColor = color;\n        }\n    `;\n    private img: HTMLImageElement;\n    private params = {\n        \"blur\": 0,\n        \"sepia\": 0,\n        \"contrast\": 1,\n        \"brightness\": 1,\n        \"saturate\": 1,\n        \"hueRotate\": 0,\n    };\n    private core: CoreWebGL2;\n    constructor(img: HTMLImageElement) {\n        this.img = img;\n        this.core = new CoreWebGL2(img, this.vertexShaderSource, this.fragmentShaderSource);\n    }\n    public applyFilter(ctx: CanvasRenderingContext2D, param: any) {\n        this.params = param;\n        const gl = this.core.gl;\n\n        const sepiaUniformLocation = gl.getUniformLocation(this.core.program, 'u_sepia');\n        gl.uniform1f(sepiaUniformLocation, this.params.sepia);\n        const saturationUniformLocation = gl.getUniformLocation(this.core.program, 'u_saturation');\n        gl.uniform1f(saturationUniformLocation, this.params.saturate);\n        const brightnessUniformLocation = gl.getUniformLocation(this.core.program, 'u_brightness');\n        gl.uniform1f(brightnessUniformLocation, this.params.brightness);\n        const contrastUniformLocation = gl.getUniformLocation(this.core.program, 'u_contrast');\n        gl.uniform1f(contrastUniformLocation, this.params.contrast);\n        const hueRotationUniformLocation = gl.getUniformLocation(this.core.program, 'u_hueRotation');\n        gl.uniform1f(hueRotationUniformLocation, this.params.hueRotate);\n        const blurUniformLocation = gl.getUniformLocation(this.core.program, 'u_blurRadius');\n        gl.uniform1f(blurUniformLocation, 1.8);\n        const resolutionUniform = gl.getUniformLocation(this.core.program, 'u_resolution');\n        gl.uniform2f(resolutionUniform, gl.canvas.width, gl.canvas.height);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.drawImage(this.core.canvas, 0, 0);\n    }\n    public destroy() {\n        this.core.destroy();\n    }\n}","import { RendererCanvas, getImgFromURL } from '../../../lib';\r\n\r\nimport { loadSVGFromHTTP } from '../../../lib/njscore-package/src';\r\n\r\nimport { CFilter } from './CFilter';\r\nexport enum ColorCorrection {\r\n    AutoContrast = 'autoContrast',\r\n    None = 'None'\r\n};\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id)\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.margin = '50px';\r\n        div.style.background = 'rgba(0,0,0,0)';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n};\r\nexport class Renderer extends RendererCanvas {\r\n    img: HTMLImageElement | undefined = undefined;\r\n    rotation = 0.0;\r\n    m: number[] = [0, 0];\r\n\r\n    switch = true;\r\n    isDithering = false;\r\n    typeCorrection: ColorCorrection = ColorCorrection.AutoContrast;\r\n\r\n    params = {\r\n        'blur': 0,\r\n        'sepia': 0,\r\n        'contrast': 1,\r\n        'brightness': 1,\r\n        'saturate': 1,\r\n        'hueRotate': 0,\r\n    };\r\n    public cFilter: CFilter;\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.ctx = this.canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n\r\n        this.isStatic = true;\r\n\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n\r\n        let imgSVG = new Image(20, 20);\r\n        imgSVG.src = process.env.PUBLIC_URL + '/static/svg/moon.svg'; // d as string;\r\n        div.appendChild(imgSVG);\r\n\r\n        getImgFromURL('https://www.glenstone.org/wp-content/uploads/2018/07/AV_Landscape-Hero-Contour-2993-1276x800.jpg').then((img: HTMLImageElement | void) => {\r\n            // getImgFromURL('https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png').then((img: HTMLImageElement) => {\r\n            if (!img) return;\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.update(img);\r\n            };\r\n        });\r\n\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement | void) => {\r\n                    if (!img) return;\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.update(img);\r\n                    };\r\n                });\r\n            }\r\n        });\r\n        this.divHost.appendChild(divInput);\r\n\r\n\r\n        const callBack = (img) => {\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.update(img);\r\n            };\r\n        };\r\n        const divFileInput = getImageUploader(callBack);\r\n        this.divHost.appendChild(divFileInput);\r\n\r\n        const slType = getSlider('saturate', 0, 200)\r\n        slType.slider.defaultValue = '100';\r\n        this.divHost.appendChild(slType.div);\r\n        slType.slider.oninput = () => {\r\n            const value = parseInt(slType.slider.value) * 0.01;\r\n            // console.log(value);\r\n            this.params.saturate = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType2 = getSlider('hueRotate', -360, 360)\r\n        slType2.slider.defaultValue = '0';\r\n        this.divHost.appendChild(slType2.div);\r\n        slType2.slider.oninput = () => {\r\n            const value = parseInt(slType2.slider.value) * 1;\r\n            // console.log(value);\r\n            this.params.hueRotate = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType3 = getSlider('contrast', 0, 20)\r\n        slType3.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType3.div);\r\n        slType3.slider.oninput = () => {\r\n            const value = parseInt(slType3.slider.value) * .1;\r\n            // console.log(value);\r\n            this.params.contrast = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType4 = getSlider('brightness', 0, 20)\r\n        slType4.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType4.div);\r\n        slType4.slider.oninput = () => {\r\n            const value = parseInt(slType4.slider.value) * .1;\r\n            // console.log(value);\r\n            this.params.brightness = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType5 = getSlider('sepia', 0, 100)\r\n        slType5.slider.defaultValue = '0';\r\n        this.divHost.appendChild(slType5.div);\r\n        slType5.slider.oninput = () => {\r\n            const value = parseInt(slType5.slider.value) * .01;\r\n            // console.log(value);\r\n            this.params.sepia = value;\r\n            this.render(this.ctx);\r\n        };\r\n\r\n        const reset = document.createElement('button');\r\n        this.divHost.appendChild(reset);\r\n        reset.style.width = '50px';\r\n        reset.style.height = '50px';\r\n        reset.textContent = 'Reset';\r\n        reset.onclick = () => {\r\n            this.resetParam();\r\n            this.render(this.ctx);\r\n        }\r\n\r\n        const preset = document.createElement('button');\r\n        this.divHost.appendChild(preset);\r\n        preset.style.width = '50px';\r\n        preset.style.height = '50px';\r\n        preset.textContent = 'preset';\r\n        preset.onclick = () => {\r\n            this.renderWithPreset();\r\n            this.render(this.ctx);\r\n        }\r\n\r\n        this.start();\r\n    }\r\n    public update(img: HTMLImageElement) {\r\n        this.img = img;\r\n        this.canvas.width = this.img.width;\r\n        this.canvas.height = this.img.height;\r\n\r\n        if (this.cFilter) { this.cFilter.destroy() }\r\n        this.cFilter = new CFilter(this.img);\r\n\r\n        this.render(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if (this.img === undefined || this.cFilter === undefined) { return; }\r\n\r\n        const params = this.params;\r\n        this.cFilter.applyFilter(ctx, params)\r\n\r\n    }\r\n    public renderWithPreset(preset: string = 'inkwell') {\r\n        this.resetParam();\r\n        for (let i in PRESET[preset]) {\r\n            this.params[i] = PRESET[preset][i];\r\n        }\r\n        // console.log('done');        \r\n    }\r\n    public resetParam() {\r\n        this.params = {\r\n            'blur': 0,\r\n            'sepia': 0,\r\n            'contrast': 1,\r\n            'brightness': 1,\r\n            'saturate': 1,\r\n            'hueRotate': 0,\r\n        };\r\n    }\r\n    public destroyPost() {\r\n        this.cFilter.destroy();\r\n    }\r\n};\r\n\r\nexport const PRESET_TYPE = {\r\n    aden: 'aden',\r\n    poprocket: 'poprocket',\r\n    inkwell: 'inkwell',\r\n\r\n}\r\n\r\nexport const PRESET = {\r\n    aden: {\r\n        sepia: .35,\r\n        contrast: 1.1,\r\n        brightness: 1.2\r\n    },\r\n    poprocket: {\r\n        sepia: .15,\r\n        brightness: 1.2\r\n    },\r\n    inkwell: {\r\n        saturate: 0,\r\n        contrast: 0.85,\r\n        brightness: 1.25\r\n    },\r\n}\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type='range' min='1' max='100' value='50' class='slider' id='myRange'>\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};\r\n\r\nconst getImageUploader = (callBack: (img: HTMLImageElement) => void) => {\r\n    const divInputFile = document.createElement('input');\r\n    divInputFile.type = 'file';\r\n    divInputFile.addEventListener('change', (event) => { \r\n       // @ts-ignore\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                const img = new Image();\r\n                img.src = e.target.result as string;\r\n                callBack(img)      \r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    });\r\n    return divInputFile\r\n};"],"names":["CoreWebGL2","constructor","img","vertexShaderSource","fragmentShaderSource","positionBuffer","texCoordBuffer","vertexShader","fragmentShader","texture","canvasGL","program","gl","this","document","createElement","width","height","getContext","init","canvas","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createShader","VERTEX_SHADER","shaderSource","compileShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","positionAttributeLocation","getAttribLocation","texCoordAttributeLocation","textureUniformLocation","getUniformLocation","uniform1i","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","destroy","deleteProgram","deleteTexture","deleteShader","deleteBuffer","CFilter","params","core","applyFilter","ctx","param","sepiaUniformLocation","uniform1f","sepia","saturationUniformLocation","saturate","brightnessUniformLocation","brightness","contrastUniformLocation","contrast","hueRotationUniformLocation","hueRotate","blurUniformLocation","resolutionUniform","uniform2f","drawArrays","TRIANGLE_STRIP","clearRect","drawImage","ColorCorrection","Solution","id","divHost","renderer","getElementById","style","display","alignItems","div","marginLeft","marginRight","backgroundColor","margin","background","appendChild","Renderer","lastElementChild","removeChild","RendererCanvas","super","undefined","rotation","m","switch","isDithering","typeCorrection","AutoContrast","cFilter","willReadFrequently","isStatic","position","imgSVG","Image","src","process","getImgFromURL","then","onload","ev","update","divInput","value","addEventListener","e","code","divFileInput","getImageUploader","slType","getSlider","slider","defaultValue","oninput","parseInt","render","slType2","slType3","slType4","slType5","reset","textContent","onclick","resetParam","preset","renderWithPreset","start","i","PRESET","destroyPost","PRESET_TYPE","aden","poprocket","inkwell","title","min","max","type","text","color","callBack","divInputFile","event","file","target","files","reader","FileReader","result","readAsDataURL"],"sourceRoot":""}
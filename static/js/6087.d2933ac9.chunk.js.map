{"version":3,"file":"static/js/6087.d2933ac9.chunk.js","mappings":"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","sources":["lib/NJSCore/IO/FilesURL/EsriFeatureService.ts","njslab/Env/AppThreeGlobeEnv/IO/Mouseinteraction/MouseInteraction.ts","njslab/Env/AppThreeGlobeEnv/IO/index.ts","njslab/Env/AppThreeGlobeEnv/Asset/index.ts","njslab/Env/AppThreeGlobeEnv/ViewWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/Env/AppThreeGlobeEnv/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/Env/AppThreeGlobeEnv/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/GraphicsCoreWrapper/ThemeWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/GraphicsCoreWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/Base/GeometryGlobeBase.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/RPointThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/LineThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/LineSpikeThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/ArcSpikeThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/CircleTrajectoryThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/CircleThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/PolylineThreeGlobe.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/ActiveCommand/ActiveCommandImplementation.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/Light/LightingController.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/Definition/Base/WallPaperBase.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/Definition/Globe/GlobeWrapperThreeDark.ts","njslab/Env/AppThreeGlobeEnv/SceneWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/NUIWrapper/index.ts","njslab/Env/AppThreeGlobeEnv/index.ts"],"sourcesContent":["\r\nexport class EsriFeatureService {\r\n    // getDataFromFeatureService().then((json) => { console.log(json);}).catch();\r\n    // tslint:disable-next-line:no-any\r\n    public static getDataFromFeatureService(url: string): Promise<any> {\r\n        // const url = `http://services.arcgis.com/As5CFN3ThbQpy8Ph/ArcGIS/rest/services/NaturalEvents_TEST/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=`;\r\n        // const url = 'http://services.arcgis.com/As5CFN3ThbQpy8Ph/ArcGIS/rest/services/NaturalEvents_TEST/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pgeojson&token=';\r\n        return fetch(url)\r\n            .then((response: Response) => {\r\n                return response.json();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((json: any) => {\r\n                return json;\r\n            })\r\n            .catch((error: Error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    public static async GetDataFromFeatureServiceForDataSlot(url: string): Promise<any> {\r\n        let urlPost = url + '/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=';\r\n        return fetch(urlPost)\r\n            .then((response: Response) => {\r\n                return response.json();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((json: any) => {\r\n                return json;\r\n            })\r\n            .catch((error: Error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    public static async GetDataFromFeatureServiceForDataSlotByDirectURL(url: string): Promise<any> {\r\n        // const url = `http://services.arcgis.com/As5CFN3ThbQpy8Ph/ArcGIS/rest/services/NaturalEvents_TEST/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=`;\r\n        return fetch(url)\r\n            .then((response: Response) => {\r\n                return response.json();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((json: any) => {\r\n                return json;\r\n            })\r\n            .catch((error: Error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n    constructor() {/* */ }\r\n}","import { CLICK_TYPE, ActiveCommandBase } from '../../lib';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { AppThreeEnv } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\n\r\nexport class MouseEventData {\r\n  model: AppThreeEnv;\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(model?: AppThreeEnv) {\r\n    if (model !== null && model !== undefined) { this.model = model; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.model);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  model: AppThreeEnv;\r\n\r\n  isEnable: boolean = true;\r\n\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(model: AppThreeEnv) {\r\n    this.model = model;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.model);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.model.graphicsCoreWrapper.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { AppThreeEnv } from '..';\r\n\r\nimport { MouseInteraction } from './Mouseinteraction/MouseInteraction';\r\n\r\nexport class IO {\r\n    app: AppThreeEnv;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n        if (!this.app.isVR) { this.mouseInteraction.InitNativeMouseEvent(this.app.divHost); }\r\n    }\r\n}","\r\nconst rPoint = require('./obj/rPoint.json');\r\n\r\nexport class Asset {\r\n\r\n    // tslint:disable-next-line:no-any\r\n    rPoint: any;\r\n\r\n    constructor() {\r\n        this.rPoint = rPoint;\r\n    }\r\n}","import { AppThreeEnv } from '..';\r\n\r\n\r\nimport { IndependentPanel } from '../lib';\r\n\r\nexport class ViewWrapper {\r\n    app: AppThreeEnv;\r\n    independentPanel: IndependentPanel;\r\n    div: HTMLElement;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        if (this.app.isVR) {\r\n            this.div = this.app.nUIWrapper.nUI.divHost;\r\n        } else {\r\n            this.independentPanel = new IndependentPanel(this.app.nUIWrapper.nUI.independentPanelWrapper, 100, 100, 450, 350, true);\r\n            this.independentPanel.title = 'Globe Network B ';\r\n            this.independentPanel.btnHam.isHidden = true;\r\n            this.independentPanel.btnMini.isHidden = true;\r\n            this.independentPanel.setTopColorTheme(this.app.nUIWrapper.nUI.themeType);\r\n            this.div = this.independentPanel.bodyDiv.div;\r\n\r\n            this.independentPanel.RemovePost = () => this.app.Dispose();\r\n            this.independentPanel.btnResize.ResizePropagation = (width: number, height: number) => { this.app.Resize(width, height); };\r\n        }\r\n        // this.div.style.pointerEvents = 'auto';\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { MouseEventData, CLICK_TYPE } from '../../../../lib';\r\nimport { CanvasThree } from '../CanvasThree';\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 2.3, 4);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\n\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n\r\n        this.renderer.domElement.id = 'THREE_WALLPAPER';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        // console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","import { GraphicsCoreWrapper } from '..';\r\n\r\nexport class ThemeWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n    }\r\n}","\r\nimport { AppThreeEnv } from '..';\r\n\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nimport { ThemeWrapper } from './ThemeWrapper';\r\n\r\nexport class GraphicsCoreWrapper {\r\n    app: AppThreeEnv;\r\n    canvasWrapper: CanvasWrapper;\r\n    themeWrapper: ThemeWrapper;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n        this.themeWrapper = new ThemeWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","export class GeometryGlobeBase {\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { MouseEventData } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class RPointThreeGlobe extends GeometryGlobeBase {\r\n    sceneWrapper: SceneWrapper;\r\n    geometry: THREE.BufferGeometry;\r\n    material: THREE.MeshPhongMaterial;\r\n    mesh: THREE.Mesh;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const p = new RPointThreeGlobe(sceneWrapper, e.x, e.y);\r\n        console.log(p);\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const json = this.sceneWrapper.app.asset.rPoint;\r\n\r\n        const vertices = new Float32Array(json['v'].flat());\r\n        const faces = new Uint32Array(json['f'].flat());\r\n        const colors = new Float32Array(json['vc'].flat());\r\n\r\n        this.geometry = new THREE.BufferGeometry();\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n        this.geometry.setIndex(new THREE.BufferAttribute(faces, 1));\r\n        this.geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n        // Applying transformations\r\n        const scaleMatrix = new THREE.Matrix4().makeScale(0.03, 0.03, 0.03);\r\n        this.geometry.applyMatrix4(scaleMatrix);\r\n\r\n        this.geometry.computeVertexNormals();\r\n        this.geometry.computeBoundingBox();\r\n\r\n        this.material = new THREE.MeshPhongMaterial({ color: 0x00ff00, vertexColors: true });\r\n\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n        this.mesh.castShadow = true;\r\n        this.mesh.receiveShadow = true;\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        this.mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(this.mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class LineThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n        console.log(this.vs);\r\n        if (this.vs.length > 1) {\r\n            const m = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            sceneWrapper.scene.add(m);\r\n            this.vs = [];\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // Calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // Get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(...pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({ color: color });\r\n        const arc = new THREE.Line(geometry, material);\r\n        return arc;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class LineSpikeThreeGlobe extends GeometryGlobeBase {\r\n\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v1 = new THREE.Vector3(0, 0, 0);\r\n        v1.applyMatrix4(matrix);\r\n        v1.multiplyScalar(1.01);\r\n        console.log(v1);\r\n\r\n        const v2 = v1.clone();\r\n        v2.multiplyScalar(Math.random() * 2 + 1.1);\r\n\r\n        const col = ColorUtility.GetRandomHex();\r\n\r\n        const m = this.LineSpike(v1, v2, col);\r\n        sceneWrapper.scene.add(m);\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: col });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static LineSpike(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, color: string) {\r\n        const vertices = new Float32Array([\r\n            pointStart.x, pointStart.y, pointStart.z,\r\n            pointEnd.x, pointEnd.y, pointEnd.z,\r\n        ]);\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        return new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class ArcSpikeThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        const col = ColorUtility.GetRandomColor();\r\n        v.applyMatrix4(matrix);\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const p0 = this.vs[0].clone();\r\n            const p3 = this.vs[1].clone();\r\n\r\n            const p1 = p0.clone().multiplyScalar(2.4);\r\n            const p2 = p3.clone().multiplyScalar(2.4);\r\n\r\n            const p9 = new THREE.Vector3().addVectors(p1, p2).multiplyScalar(0.5);\r\n\r\n            const curve = new THREE.QuadraticBezierCurve3(p0, p9, p3);\r\n            const points = curve.getPoints(50);\r\n            const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n            const material = new THREE.LineBasicMaterial({ color: col });\r\n            const curveObject = new THREE.Line(geometry, material);\r\n\r\n            sceneWrapper.scene.add(curveObject);\r\n            this.vs = [];\r\n        }\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class CircleTrajectoryThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        const col = ColorUtility.GetRandomColor();\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01 + Math.random());\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const m0 = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, col, false);\r\n            const m1 = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, col, true);\r\n            sceneWrapper.scene.add(m0);\r\n            sceneWrapper.scene.add(m1);\r\n            this.vs = [];\r\n        }\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const flatVertices = vertices.flat();\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(flatVertices, 3));\r\n\r\n        return new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class CircleThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const m0 = this.setCircle3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            const m1 = this.setCircle3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', true);\r\n            sceneWrapper.scene.add(m0);\r\n            sceneWrapper.scene.add(m1);\r\n            this.vs = [];\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    static setCircle3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // calculate center point\r\n        const center = new THREE.Vector3().addVectors(pointStart, pointEnd).multiplyScalar(0.5);\r\n\r\n        // calculate normal vector\r\n        const normal = new THREE.Vector3().subVectors(pointEnd, pointStart).normalize();\r\n\r\n        // get angle between vectors\r\n        let angle = Math.PI;\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        const angleDelta = angle / (smoothness - 1);\r\n\r\n        // create vertices for the circle\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            const angle = angleDelta * i;\r\n            const x = center.x + normal.x * Math.cos(angle) - normal.y * Math.sin(angle);\r\n            const y = center.y + normal.y * Math.cos(angle) + normal.x * Math.sin(angle);\r\n            const z = center.z;\r\n            vertices.push(x, y, z);\r\n        }\r\n\r\n        // create BufferGeometry\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        // create line mesh\r\n        const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n\r\n        return line;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../lib';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class PolylineThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n        console.log(this.vs);\r\n        if (this.vs.length > 1) {\r\n            const m = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            sceneWrapper.scene.add(m);\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // Calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // Get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(...pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({ color: color, linewidth: 3 });\r\n        const arc = new THREE.Line(geometry, material);\r\n        return arc;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { CLICK_TYPE, MouseEventData } from '../../lib';\r\n\r\nimport { ActiveCommandController } from './ActiveCommandController';\r\n\r\nimport { RPointThreeGlobe } from '../GeometryCommon/GeometryGlobe/RPointThreeGlobe';\r\nimport { LineThreeGlobe } from '../GeometryCommon/GeometryGlobe/LineThreeGlobe';\r\nimport { LineSpikeThreeGlobe } from '../GeometryCommon/GeometryGlobe/LineSpikeThreeGlobe';\r\nimport { ArcSpikeThreeGlobe } from '../GeometryCommon/GeometryGlobe/ArcSpikeThreeGlobe';\r\nimport { CircleTrajectoryThreeGlobe } from '../GeometryCommon/GeometryGlobe/CircleTrajectoryThreeGlobe';\r\nimport { CircleThreeGlobe } from '../GeometryCommon/GeometryGlobe/CircleThreeGlobe';\r\nimport { PolylineThreeGlobe } from '../GeometryCommon/GeometryGlobe/PolylineThreeGlobe';\r\n\r\nexport class ActiveCommandCommon {\r\n    acs: ActiveCommandController;\r\n    num = 0;\r\n    constructor(acs: ActiveCommandController) {\r\n        // super();\r\n        this.acs = acs;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n\r\n        this.MouseDrag(e);\r\n    }\r\n\r\n}\r\n\r\n// ..............................................................\r\nexport class ActiveCommandNone extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n}\r\nexport class ActiveCommandRPoint extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        RPointThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        // APolyline.MouseMove(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        // APolyline.MouseDoubleClick(this.acs.annotationInstance.scene, e);\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        // APolyline.MouseDown(this.acs.annotationInstance.scene, e);\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        // APolyline.Undo(this.acs.annotationInstance.scene, this.acs.m);\r\n    }\r\n}\r\nexport class ActiveCommandLine extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        LineThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class ActiveCommandArcSpike extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        ArcSpikeThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandLineSpike extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        LineSpikeThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandCircleTrajectory extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        CircleTrajectoryThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandCircle extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        CircleThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandPolyline extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        PolylineThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}","import { MouseEventData, ACTIVECOMMAND_MODE } from '../../lib';\r\n\r\nimport {\r\n    ActiveCommandNone,\r\n    ActiveCommandCommon,\r\n    ActiveCommandRPoint,\r\n    ActiveCommandLine,\r\n    ActiveCommandCircleTrajectory,\r\n    ActiveCommandLineSpike,\r\n    ActiveCommandArcSpike,\r\n    ActiveCommandCircle,\r\n    ActiveCommandPolyline\r\n} from './ActiveCommandImplementation';\r\n\r\nimport { SceneWrapper } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    commands: any;\r\n    activeCommand: ActiveCommandCommon;\r\n    type: ACTIVECOMMAND_MODE = ACTIVECOMMAND_MODE.NONE;\r\n    m: MouseEventData;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.commands = {\r\n            // ........................................................................................................................ drawing annotation\r\n            POINT_REGULAR: new ActiveCommandRPoint(this),\r\n\r\n            // ARROW_SINGLE: new CActiveCommandArrow(this), ARROW_DOUBLE: new CActiveCommandArrowDouble(this),\r\n            // CURVE_OPEN: new CActiveCommandANCurve(this), CURVE_CLOSE: new CActiveCommandANCurveClosed(this),\r\n\r\n            CIRCLE: new ActiveCommandCircle(this),\r\n            // CIRCLE_CONSTRAINT_AREA: new CActiveANCommandCircleConstraintArea(this), CIRCLE_CONSTRAINT_CIRCUMFERENCE: new CActiveANCommandCircleConstraintCircumference(this),\r\n            // RECTANGLE: new CActiveANCommandRect(this),\r\n            // POLYLINE: new CActiveANCommandPolyline(this), POLYLINE_CONSTRAINT: new CActiveANCommandPolylineConstraint(this),\r\n            // POLYLINE_BENDING: new CActiveANCommandBendingPolylineGraph(this),\r\n            // LINE_GRAPH: new CActiveANCommandLineGraph(this),\r\n\r\n            LINE: new ActiveCommandLine(this),\r\n            LINE_SPIKE: new ActiveCommandLineSpike(this), ARC_SPIKE: new ActiveCommandArcSpike(this),\r\n            CIRCLE_TRAJECTORY: new ActiveCommandCircleTrajectory(this),\r\n            POLYLINE: new ActiveCommandPolyline(this),\r\n            // POLYGON_CONSTRAINT: new CActiveANCommandPolygonConstraint(this),\r\n            // POLYGON_MULTIPLE: new CActiveANCommandPolygonMultiple(this),\r\n\r\n            // TEXT: new CActiveCommandText(this),\r\n            // TEXT_LEADERLINE: new CActiveCommandTextLederline(this),\r\n\r\n            // FREEHAND_POLYLINE: new CActiveCommandANFHPolyline(this), FREEHAND_CURVE: new CActiveCommandANFHCurve(this),\r\n\r\n            // SMARTDRAWING: new CActiveCommandANSmartDrawing(this), SMARTDRAWING_DEEPLEARNING: new CActiveCommandANSmartDrawingDeepLearning(this),\r\n            // LINE: new CActiveCommandANLine(this),\r\n\r\n            // ........................................................................................................................ drawing graphic\r\n\r\n            // NONE: new CActiveCommandNone(this), SELECT: new CActiveCommandSelection(this),\r\n            // REMOVE: new CActiveCommandRemove(this),\r\n            // SELECT_RECT: new CActiveCommandSelectionRect(this), SELECT_LASSO: new CActiveCommandSelectionLasso(this),\r\n            // MOVE_EASEING: new CActiveCommandMoveEasing(this), UNDO: new CActiveCommandUndo(this), REDO: new CActiveCommandRedo(this),\r\n            NONE: new ActiveCommandNone(this)\r\n        };\r\n        this.type = ACTIVECOMMAND_MODE.SELECT;\r\n        this.m = new MouseEventData();\r\n        this.activeCommand = new ActiveCommandNone(this);\r\n    }\r\n    SetActiveCommand(theAC: ACTIVECOMMAND_MODE) {\r\n\r\n        this.CancelAC();\r\n        // AText.ESC();\r\n        // this.activeCommand = this.commands[theAC];\r\n        // this.type = theAC;\r\n        // if (this.type === ACTIVECOMMAND_MODE.TEXT) {\r\n        //     document.body.style.cursor = 'text';\r\n        // } else { document.body.style.cursor = 'auto'; }\r\n\r\n        this.activeCommand = this.commands[theAC];\r\n        return;\r\n\r\n        // if (this.type === ACTIVECOMMAND_MODE.SELECT_LASSO || this.type === ACTIVECOMMAND_MODE.SELECT_RECT) { ASelection.isTooltipRenderable = true; }\r\n        // if (this.type === ACTIVECOMMAND_MODE.FREEHAND_CURVE || this.type === ACTIVECOMMAND_MODE.FREEHAND_POLYLINE) { AFreehand.isTooltipRenderable = true; }\r\n        // if (this.type === ACTIVECOMMAND_MODE.SMARTDRAWING) { AFreehandSmartDrawing.isTooltipRenderable = true; }\r\n\r\n        // if (this.type === ACTIVECOMMAND_MODE.POINT_REGULAR || this.type === ACTIVECOMMAND_MODE.POINT_ICON || this.type === ACTIVECOMMAND_MODE.POINT_NUMBERED || this.type === ACTIVECOMMAND_MODE.LINE) {\r\n        //     this.showTooltipPoint = true;\r\n        // } else {\r\n        //     this.showTooltipPoint = false;\r\n        // }\r\n    }\r\n    CancelAC() {\r\n        // if (this.annotationInstance.app.app.model.appCoreWrapper.appAccessibility.mode === INTERACTION_MODE.OBSERVE_VIEWER) { return; }\r\n        // APolylineGraph.Cancel(); APolygon.Cancel(); ACircle.Cancel(); ARectangle.Cancel();\r\n        // CPolyline.Cancel(); CPolygon.Cancel(); CCircle.Cancel(); CNGon.Cancel(); CCurve.Cancel();\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n        this.activeCommand.MouseEventController(e);\r\n    }\r\n    ShiftMap() {\r\n        console.log(this.sceneWrapper);\r\n        this.sceneWrapper.definition.ShiftShader(); // .sceneWrapper.definition.ShiftShader();\r\n    }\r\n    ShiftBasemap() {\r\n        this.sceneWrapper.ShiftBasemap();\r\n    }\r\n}","import { NVector3 } from '../../lib';\r\n\r\nimport { CanvasThree } from '../../GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree';\r\n\r\nimport { WallPaperBase } from '../Definition/Base/WallPaperBase';\r\n\r\n// import { Ground } from '../Scene/Ground';\r\n// import { Grid } from '../Scene/Grid';\r\n\r\n// import { GeometryWrapperBase } from '../Geometry/BaseClass/GeometryWrapperBase';\r\n\r\n// import { GlobeWrapperThree } from '../Geometry/GeometryThreeWrapper/GlobeWrapperThree';\r\n// import { TerrainMapThree } from '../Geometry/GeometryThreeWrapper/TerrainMapThree';\r\n\r\n// import {GeometryWrapperBase} from '../Geometry/BaseClass/GeometryWrapperBase';\r\n\r\n// import { createHashHistory } from 'history';\r\nimport * as THREE from 'three';\r\n\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\n\r\nexport class GeometryCommon {\r\n\r\n    static list: WallPaperBase[] = [];\r\n    static listMesh: THREE.Object3D[] = [];\r\n\r\n    canvas: CanvasThree;\r\n\r\n    raycaster: THREE.Raycaster;\r\n    m: THREE.Vector2;\r\n    m3: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    capture: WallPaperBase;\r\n\r\n    constructor(canvas: CanvasThree) {\r\n        this.canvas = canvas;\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n\r\n        // if (this.raycaster.params.Points) {\r\n        //     this.raycaster.params.Points.threshold = 0.1;\r\n        //     console.log('==================');\r\n        // }\r\n\r\n        this.m = new THREE.Vector2();\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.grid = new Grid(this);\r\n        // this.ground = new Ground(this, 0, 0, 0);\r\n\r\n    }\r\n    get Capture() {\r\n        // if (this.capture) { return this.capture; } else { return this.capture; }\r\n        return this.capture;\r\n    }\r\n    set Capture(v: WallPaperBase) {\r\n        // if (this.capture !== undefined) {\r\n        //     this.capture.isSelected = false;\r\n        // }\r\n        this.capture = v;\r\n        // this.capture.isSelected = true;\r\n\r\n        // console.log(this.capture.uuid);\r\n    }\r\n    Add(g: WallPaperBase) {\r\n        GeometryCommon.list.push(g);\r\n        GeometryCommon.listMesh.push(g.mesh);\r\n        this.canvas.scene.add(g.mesh);\r\n        // console.log(this.canvas.scene);\r\n    }\r\n    Remove(g: WallPaperBase) {\r\n        this.canvas.scene.remove(g.mesh);\r\n        g.geometry.dispose();\r\n        GeometryCommon.listMesh.splice(GeometryCommon.listMesh.indexOf(g.mesh), 1);\r\n        GeometryCommon.list.splice(GeometryCommon.list.indexOf(g), 1);\r\n    }\r\n    Update() {\r\n        let i = GeometryCommon.list.length;\r\n        while (i--) { GeometryCommon.list[i].Update(); }\r\n        // GeometryWrapperBase.Update();\r\n    }\r\n    RaycastForVec(x: number, y: number) {\r\n        this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n        this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n        const intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n\r\n            this.m3 = new THREE.Vector3(this.point.vec.x, this.point.vec.y, this.point.vec.z);\r\n\r\n            console.log(this.point);\r\n            return this.point.vec;\r\n        }\r\n        return undefined;\r\n    }\r\n    Raycast(x: number, y: number) {\r\n        console.log(GeometryCommon.listMesh);\r\n        this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n        this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n        // let i = GeometryCommon.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n        const intersects: any = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            console.log(this.point);\r\n            this.m3 = new THREE.Vector3(this.point.vec.x, this.point.vec.y, this.point.vec.z);\r\n\r\n            // tslint:disable-next-line:no-string-literal\r\n            let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            this.Capture = geo;\r\n            // helper.position.set(0, 0, 0);\r\n            // helper.lookAt(intersects[0].face.normal);\r\n            // helper.position.copy(intersects[0].point);\r\n            return this.Capture;\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n    }\r\n    // RaycastHover(x: number, y: number) {\r\n    //     this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n    //     this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n    //     this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n    //     const intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n    //     if (intersects.length > 0) {\r\n    //         // tslint:disable-next-line:no-string-literal\r\n    //         let geo = intersects[0].object['geo'] as WallPaperBase;\r\n    //         geo.isHover = true;\r\n    //     }\r\n    // }\r\n\r\n    // ...............................................................\r\n\r\n    // InitLighting() {\r\n    //     this.canvas.scene.add(new THREE.AmbientLight(0xf0f0f0));\r\n    //     let light = new THREE.SpotLight(0xffffff, 1.5);\r\n    //     light.position.set(0, 1500, 200);\r\n    //     light.castShadow = true;\r\n    //     // light.shadow  // shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(70, 1, 200, 2000));\r\n    //     light.shadow.bias = -0.000222;\r\n    //     light.shadow.mapSize.width = 1024;\r\n    //     light.shadow.mapSize.height = 1024;\r\n    //     this.canvas.scene.add(light);\r\n    //     // spotlight = light;\r\n\r\n    // }\r\n    RemoveAllMesh() {\r\n        let i = GeometryCommon.list.length;\r\n        while (i--) { this.Remove(GeometryCommon.list[i]); }\r\n        // i = GeometryWrapperBase.list.length;\r\n        // while (i--) { GeometryWrapperBase.list[i].Remove(); }\r\n    }\r\n\r\n    getMatrixAtScreenCoordinates(x: number, y: number) {\r\n        let p = this.getPointAtScreenCoordinates(x, y) || this.m3;\r\n        let px0 = this.getPointAtScreenCoordinates(x - 1, y) || p;\r\n        let px1 = this.getPointAtScreenCoordinates(x + 1, y) || p;\r\n\r\n        let py0 = this.getPointAtScreenCoordinates(x, y - 1) || p;\r\n        let py1 = this.getPointAtScreenCoordinates(x, y + 1) || p;\r\n\r\n        px1.sub(px0);\r\n        py1.sub(py0);\r\n\r\n        let normal = new THREE.Vector3().crossVectors(px1, py1);\r\n        normal.normalize();\r\n\r\n        let tp = new THREE.Vector3().addVectors(p, normal);\r\n        let matrix = new THREE.Matrix4().lookAt(p, tp, new THREE.Vector3(0, 1, 0));\r\n        matrix.setPosition(p);\r\n\r\n        return matrix;\r\n    }\r\n    private getPointAtScreenCoordinates(x: number, y: number) {\r\n        let intersects = this.getIntersectionAtScreenCoordinates(x, y);\r\n        if (intersects) { return intersects.point; }\r\n        return undefined;\r\n    }\r\n    private getIntersectionAtScreenCoordinates(x: number, y: number) {\r\n\r\n\r\n\r\n        const recursiveFlag = false;\r\n\r\n        this.m.x = (x / this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        let vector: any = new THREE.Vector3(this.m.x, this.m.y, 0.5);\r\n\r\n        this.raycaster.setFromCamera(vector, this.canvas.camera.camera);\r\n\r\n        let intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh, recursiveFlag);\r\n\r\n        // const camera = this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.cameraP;\r\n        // const projector = new THREE.Projector();\r\n        // projector.unprojectVector(vector, camera);\r\n        // let raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\r\n\r\n        // let intersects = raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n        if (intersects.length > 0) { return intersects[0]; }\r\n        return undefined;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        // const hemiLightHelper = new THREE.HemisphereLightHelper( this.hemiLight, 10 );\r\n        // this.scene.scene.add( hemiLightHelper );\r\n\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 2;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 2;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        // this.dirLightHeper = new THREE.DirectionalLightHelper( this.dirLight, 10 );\r\n        // this.scene.scene.add( dirLightHeper );\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\n\r\n// import { SceneWrapper } from '../../';\r\n\r\n// import { MouseEventData } from '../../../../../NJSCore/IO/EventInteraction/MouseInteraction';\r\n\r\n// import { AppWallPaperGL } from '../../AppWallPaperGL';\r\n\r\n// import { Renderer } from '../../Core/Renderer';\r\n\r\nexport abstract class WallPaperBase {\r\n\r\n    geometry: THREE.BufferGeometry | THREE.BufferGeometry;\r\n    mesh: THREE.Object3D | any;\r\n    material: THREE.Material;\r\n\r\n    uuid: string;\r\n    isHover: boolean = false;\r\n    isLeave: boolean = false;\r\n    isSelected: boolean = false;\r\n    isDrag: boolean = false;\r\n    isMove: boolean = false;\r\n\r\n    hasPopup: boolean = false;\r\n\r\n    vec: NVector3 = new NVector3(0, 0, 0);\r\n    scale: NVector3 = new NVector3(1, 1, 1);\r\n\r\n    t: number = 0.0;\r\n    tOver: number = 0.0;\r\n    tDown1: number = 0.0;\r\n    tDown2: number = 0.0;\r\n    tUp: number = 0.0;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n    get IsMove() {\r\n        return this.isMove;\r\n    }\r\n    set IsMove(v: boolean) {\r\n        this.isMove = v;\r\n    }\r\n    abstract UpdatePost(): void;\r\n    abstract Dispose(): void;\r\n    Dummy() {/* */ }\r\n    Add() {\r\n        // console.log(AppVisThree.app.canvasThree);\r\n        this.uuid = this.mesh.uuid;\r\n        // tslint:disable-next-line:no-string-literal\r\n        this.mesh['geo'] = this;\r\n        // this.sceneGlobeNetwork.geometryCommon.Add(this);\r\n        // console.log(this);\r\n    }\r\n    Update() {\r\n\r\n        this.t += 0.1;\r\n        this.UpdatePost();\r\n    }\r\n    Remove() {\r\n        // this.sceneGlobeNetwork.geometryCommon.Remove(this);\r\n    }\r\n    ShiftShader() {\r\n        //\r\n    }\r\n    // MouseDown(m: MouseEventData) {\r\n    //     //\r\n    // }\r\n    // MouseMove(m: MouseEventData) {\r\n    //     //\r\n    // }\r\n}","import { NVector3, NVectorUtility, MathUtility, PixelMapGlobe, NGeoJSONFeatureService, EsriFeatureService } from '../../../lib';\r\n\r\nimport { GeometryCommon } from '../../GeometryCommon/GeometryCommon';\r\nimport { WallPaperBase } from '../Base/WallPaperBase';\r\n\r\n// const earthNoclouds4k = require('./2_no_clouds_4k.jpg');\r\n// const nightDarkLevel2 = require('./night-dark-level2.jpg');\r\n// const galaxyStarfield = require('./galaxy_starfield.png');\r\n// const fairClouds4k = require('./fair_clouds_4k.png');\r\n\r\nimport * as THREE from 'three';\r\nexport class GlobeWrapperThreeDark extends WallPaperBase {\r\n\r\n    envirGeometry: any;\r\n    envirMat: THREE.MeshPhongMaterial;\r\n    envirMesh: THREE.Mesh;\r\n\r\n    geometry: THREE.SphereGeometry | any;\r\n    mesh: THREE.Mesh;\r\n    meshCloud: THREE.Mesh;\r\n\r\n    pixelMapGlobe: PixelMapGlobe;\r\n\r\n    vec: NVector3;\r\n    radius: number = 1;\r\n    xSeg: number = 360;\r\n    ySeg: number = 180;\r\n\r\n    t: number = 0.0;\r\n\r\n    material: THREE.MeshPhongMaterial | any;\r\n    isDone: boolean = false;\r\n\r\n    meshSpot: THREE.Mesh[] = [];\r\n    scene: THREE.Scene;\r\n\r\n    mapNight: HTMLImageElement;\r\n    mapDay: HTMLImageElement;\r\n    numBaseMapShfit: number = 0;\r\n    bg: boolean;\r\n\r\n    constructor(scene: THREE.Scene, x: number = 0, y: number = 0, z: number = 0, radius: number = 1, xSeg: number = 36, ySeg: number = 18, bg: boolean = true) {\r\n        super();\r\n        this.scene = scene;\r\n        this.vec = new NVector3(x, y, z);\r\n        this.xSeg = xSeg; this.ySeg = ySeg; this.radius = radius;\r\n        this.bg = bg;\r\n\r\n        this.InitDataStructure();\r\n        this.ImportImage();\r\n\r\n        this.InitGlobe();\r\n        this.InitCloud();\r\n    }\r\n    InitGeometry(): void {\r\n        // // throw new Error('Method not implemented.');\r\n    }\r\n    InitMaterial(): void {\r\n        // // throw new Error('Method not implemented.');\r\n    }\r\n    async ImportData() {\r\n        // let url = 'http://services.arcgis.com/WQ9KVmV6xGGMnCiQ/arcgis/rest/services/earthquakes_over_6_since_1996_time/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pgeojson&token=';\r\n        let url = 'http://services.arcgis.com/As5CFN3ThbQpy8Ph/ArcGIS/rest/services/NaturalEvents_TEST/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnDistinctValues=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=';\r\n        // tslint:disable-next-line:no-any\r\n        EsriFeatureService.getDataFromFeatureService(url).then((json: any) => {\r\n            if (json) {\r\n                // tslint:disable-next-line:no-any\r\n                let d = new NGeoJSONFeatureService(json); (window as any).featureLayer = d;\r\n                // console.log(d);\r\n                this.InitDataStructure();\r\n                this.ImportImage();\r\n                this.InitGlobe();\r\n                this.InitCloud();\r\n\r\n            } else {\r\n                console.log('the URL is wrong');\r\n                // return undefined;\r\n            }\r\n        }).catch();\r\n    }\r\n    ImportImage() {\r\n        /* */\r\n    }\r\n    InitDataStructure() {\r\n        let s = 2;\r\n        this.pixelMapGlobe = new PixelMapGlobe(this.xSeg * s, this.ySeg * s, 1);\r\n    }\r\n    Dummy() {/* */ }\r\n    async InitGlobe() {\r\n        this.geometry = new THREE.SphereGeometry(this.radius, this.xSeg, this.ySeg);\r\n        this.geometry.rotateY(MathUtility.Radians(-180));\r\n\r\n        this.mapDay = new Image();\r\n        this.mapDay.src = `njslabSandboxStatic/img/2_no_clouds_4k.jpg`; // earthNoclouds4k;\r\n\r\n        this.mapNight = new Image();\r\n        this.mapNight.src = `njslabSandboxStatic/img/night-dark-level2.jpg`; // nightDarkLevel2;\r\n\r\n        this.mapNight.onload = () => {\r\n            this.mapNight.crossOrigin = 'anonymous';\r\n            // let map = THREE.ImageUtils.loadTexture(\r\n            //     `njslabSandboxStatic/img/night-dark-level2.jpg`\r\n            //     // this.mapNight.src\r\n            // );\r\n            \r\n            let textureLoader = new THREE.TextureLoader();\r\n            let map = textureLoader.load('njslabSandboxStatic/img/night-dark-level2.jpg');\r\n\r\n            this.material = new THREE.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                specular: 0x050505,\r\n                shininess: 50,\r\n                map: map\r\n            });\r\n            this.material.bumpMap = map;\r\n            this.material.bumpScale = 0.01;\r\n\r\n            this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n\r\n            this.scene.add(this.mesh);\r\n            // }\r\n            this.material.needsUpdate = true;\r\n            this.geometry.uvsNeedUpdate = true;\r\n            // this.geometry.nee = true;\r\n            this.mesh.receiveShadow = true;\r\n            this.mesh.castShadow = true;\r\n\r\n            GeometryCommon.listMesh.push(this.mesh);\r\n        };\r\n    }\r\n    async InitCloud() {\r\n\r\n        let geo = new THREE.SphereGeometry(1.01, this.xSeg, this.ySeg);\r\n        // this.geometry = new THREE.SphereGeometry(1, this.xSeg, this.ySeg);\r\n        this.geometry.rotateY(MathUtility.Radians(-180));\r\n        // let image = document.createElement('img');\r\n        // var texture = new THREE.Texture(image);\r\n        // image.addEventListener('load', function (e: Event) { texture.needsUpdate = true; });\r\n\r\n        // let file = `${location.origin}/njslabSandboxStatic/img/fair_clouds_4k.png`;\r\n        let file = `njslabSandboxStatic/img/fair_clouds_4k.png`;\r\n\r\n        const theImg = new Image();\r\n        theImg.src = file;\r\n\r\n        theImg.onload = () => {\r\n            theImg.crossOrigin = 'anonymous';\r\n            // let map = THREE.ImageUtils.loadTexture(theImg.src);\r\n            let textureLoader = new THREE.TextureLoader();\r\n            let map = textureLoader.load(theImg.src);\r\n\r\n            let material = new THREE.MeshPhongMaterial({\r\n                map: map,\r\n                side: THREE.DoubleSide,\r\n                opacity: 0.2,\r\n                transparent: true,\r\n                depthWrite: false,\r\n            });\r\n            material.bumpMap = map;\r\n            material.bumpScale = 0.01;\r\n\r\n            console.log('working');\r\n            this.meshCloud = new THREE.Mesh(geo, material);\r\n\r\n            this.mesh.add(this.meshCloud);\r\n\r\n            if (this.bg) { this.InitEnviroment(); }\r\n        };\r\n\r\n    }\r\n    async InitEnviroment() {\r\n\r\n        let file = `njslabSandboxStatic/img/galaxy_starfield.png`;\r\n\r\n        const theImg = new Image();\r\n        theImg.src = file;\r\n\r\n        theImg.onload = () => {\r\n            theImg.crossOrigin = 'anonymous';\r\n            // let map = THREE.ImageUtils.loadTexture(theImg.src);\r\n\r\n            let textureLoader = new THREE.TextureLoader();\r\n            let map = textureLoader.load(theImg.src);\r\n\r\n            this.envirMat = new THREE.MeshPhongMaterial({\r\n                map: map,\r\n                side: THREE.DoubleSide,\r\n                // opacity: 0.2,\r\n                transparent: true,\r\n                depthWrite: false,\r\n            });\r\n            this.envirMat.bumpMap = map;\r\n            this.envirMat.bumpScale = 0.01;\r\n            this.envirGeometry = new THREE.SphereGeometry(100.01, this.xSeg, this.ySeg);\r\n            this.envirMesh = new THREE.Mesh(this.envirGeometry, this.envirMat);\r\n            // this.envirMesh.castShadow = false;\r\n            // this.envirMesh.receiveShadow = false;\r\n\r\n            this.scene.add(this.envirMesh);\r\n            // console.log('working');\r\n        };\r\n    }\r\n    InitPost() {\r\n        this.mesh.position.x = this.vec.x;\r\n        this.mesh.position.y = this.vec.y;\r\n        this.mesh.position.z = this.vec.z;\r\n        this.isDone = true;\r\n    }\r\n    Remove() {\r\n        // GlobeWrapperThreeDark.geo = undefined;\r\n        this.scene.remove(this.mesh);\r\n    }\r\n    ShiftShader() {\r\n        if (this.numBaseMapShfit++ % 2 === 0) {\r\n            // this.material.map = THREE.ImageUtils.loadTexture(this.mapDay.src);\r\n\r\n            let textureLoader = new THREE.TextureLoader();\r\n            this.material.map = textureLoader.load(this.mapDay.src);\r\n\r\n        } else {\r\n            // this.material.map = THREE.ImageUtils.loadTexture(this.mapNight.src);\r\n            let textureLoader = new THREE.TextureLoader();\r\n            this.material.map = textureLoader.load(this.mapNight.src);\r\n        }\r\n        this.material.needsUpdate = true;\r\n    }\r\n    UpdatePost() {\r\n        if (this.mesh && this.meshCloud) {\r\n            // this.mesh.rotation.y += 0.0143;\r\n            this.meshCloud.rotation.y += 0.00035;\r\n            this.t += 0.000001;\r\n\r\n            // for (let i = 0; i < this.meshSpot.length; ++i) {\r\n            //     // let scale = 1 + Math.cos(this.t);\r\n            //     // let scaleVec = new THREE.Vector3(scale, scale, scale);\r\n            //     // this.meshSpot[i].scale = scaleVec;\r\n            //     // console.log(this.meshSpot[i]);\r\n            //     if (typeof (this.meshSpot[i].material) === typeof (Array)) {\r\n            //         this.meshSpot[i].material[0].color = Math.random() * 0xffffff;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    ToEarth(long: number, lat: number, elevation: number) {\r\n        return NVectorUtility.GetLineVecProjectedToGlobe(new NVector3(long, lat, this.radius), elevation);\r\n    }\r\n    Dispose() {\r\n        this.geometry.dispose();\r\n        //    this.material.dispose();\r\n        this.scene.remove(this.mesh);\r\n        this.scene.remove(this.meshCloud);\r\n\r\n        if (this.bg) {\r\n            this.envirMat.dispose();\r\n            this.envirGeometry.dispose();\r\n            this.scene.remove(this.envirMesh);\r\n        }\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { AppThreeEnv } from '..';\r\n\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\n\r\nimport { WallPaperBase } from './Definition/Base/WallPaperBase';\r\n\r\nimport { GlobeWrapperThreeDark } from './Definition/Globe/GlobeWrapperThreeDark';\r\n// import { GlobeLowPoly } from './Definition/GlobeLowPoly';\r\n// import { GlobePixel } from './Definition/GlobePixel';\r\n\r\nexport class SceneWrapper {\r\n    app: AppThreeEnv;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n\r\n    definition: WallPaperBase | any;\r\n    numBasemap = 0;\r\n\r\n    constructor(app: AppThreeEnv, baseMap: string = 'map') {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this.app.graphicsCoreWrapper.canvasWrapper.canvasThree);\r\n        this.Init(baseMap);\r\n    }\r\n    Init(baseMap: string) {\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.shadowMap.enabled = true;\r\n\r\n        if (baseMap === 'map') { this.definition = new GlobeWrapperThreeDark(this.scene); return; }\r\n        // if (baseMap === 'low') { this.definition = new GlobeLowPoly(this.scene); return; }\r\n        // if (baseMap === 'pixel') { this.definition = new GlobePixel(this.scene); return; }\r\n    }\r\n    Update() {\r\n        this.definition.Update();\r\n    }\r\n    ShiftBasemap() {\r\n        this.definition.Dispose();\r\n        this.numBasemap++;\r\n\r\n        // if (this.numBasemap % 3 === 0) {\r\n        //     this.definition = new GlobeWrapperThreeDark(this.scene); return;\r\n        // } if (this.numBasemap % 3 === 1) {\r\n        //     this.definition = new GlobePixel(this.scene); return;\r\n        // } if (this.numBasemap % 3 === 2) {\r\n        //     this.definition = new GlobeLowPoly(this.scene); return;\r\n        // }\r\n\r\n    }\r\n    Dispose() {\r\n        this.lightingController.Dispose();\r\n        this.definition.Dispose();\r\n    }\r\n}","import { NUI } from '../lib';\r\nimport { AppThreeEnv } from '..';\r\n\r\nexport class NUIWrapper {\r\n    nUI: NUI;\r\n    app: AppThreeEnv;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        this.nUI = new NUI(app.divHost);\r\n        // this.nUI.BindingStoppropagation = this.StopPropagation.bind(this);\r\n        this.nUI.BindingStoppropagation = (v: boolean) => (this.BindingStoppropagation(v));\r\n        this.nUI.BindingActiveCommandController('appThreeEnv', this.app.sceneWrapper.activeCommandController);\r\n    }\r\n    BindingStoppropagation(v: boolean) {\r\n        // console.log(v);\r\n        // console.log('========================================');\r\n        this.app.stopPropagation = v;\r\n        // console.log(this);\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    PushUI(app: string, ac: any) {\r\n        this.nUI.BindingActiveCommandController(app, ac);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.nUI.Resize(width, height);\r\n    }\r\n}","import { MouseEventData } from './lib';\r\n\r\nimport { IO } from './IO';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { NUIWrapper } from './NUIWrapper';\r\n\r\nexport class AppThreeEnv {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    nUIWrapper: NUIWrapper;\r\n\r\n    isVR: boolean;\r\n    stopPropagation: boolean = false;\r\n    public static Init(id: string) {\r\n        new AppThreeEnv(id);\r\n    }\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n        if (divHost) { this.divHost = divHost; }\r\n        this.stopPropagation = false;\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n        this.nUIWrapper = new NUIWrapper(this);\r\n        // this.nUIWrapper.nUI.ShiftTheme(this.nUIWrapper.themeType);\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.nUIWrapper.nUI.MouseInteractionMenu(e);\r\n        if (!this.stopPropagation) { this.sceneWrapper.activeCommandController.MouseEventController(e); }\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n        this.nUIWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        AppThreeEnv.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}\r\n"],"names":["EsriFeatureService","url","fetch","then","response","json","catch","error","console","message","constructor","MouseEventData","model","x","y","z","preX","preY","preZ","yGLPicking","command","CLICK_TYPE","isDown","isDoubleClick","isMove","pressedShift","pressedAlt","pressedCtrl","lat","long","wheel","preWheel","isActive","native","undefined","this","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","e","_stopPropagation","InitNativeMouseEvent","div","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","MouseDoubleClick","onmousedown","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","addEventListener","MouseWheel","deltaY","CommonEventBuilder","MouseEvenEmitting","button","MouseDrag","buttons","v","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","graphicsCoreWrapper","app","MouseEventController","IO","mouseInteraction","isVR","divHost","rPoint","require","Asset","ViewWrapper","independentPanel","nUIWrapper","nUI","IndependentPanel","independentPanelWrapper","title","btnHam","isHidden","btnMini","setTopColorTheme","themeType","bodyDiv","RemovePost","Dispose","btnResize","ResizePropagation","width","height","Resize","CAMERA_TYPE","CameraControllerThree","canvas","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","factor","enableDamping","dampingFactor","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","dd","length","ShiftCamera","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","Init","clientWidth","clientHeight","antialias","alpha","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","canvasThree","ThemeWrapper","GraphicsCoreWrapper","themeWrapper","GeometryGlobeBase","RPointThreeGlobe","sceneWrapper","p","log","sx","sy","super","geometry","material","mesh","asset","vertices","Float32Array","flat","faces","Uint32Array","colors","setAttribute","setIndex","scaleMatrix","makeScale","applyMatrix4","computeVertexNormals","computeBoundingBox","color","vertexColors","castShadow","receiveShadow","geometryCommon","getMatrixAtScreenCoordinates","add","LineThreeGlobe","multiplyScalar","vs","push","m","setArc3D","sphere","static","pointStart","pointEnd","smoothness","clockWise","cb","ab","normal","subVectors","cross","copy","normalize","angle","angleTo","angleDelta","i","clone","applyAxisAngle","toArray","d","LineSpikeThreeGlobe","v1","v2","random","col","ColorUtility","LineSpike","ArcSpikeThreeGlobe","p0","p3","p1","p2","p9","addVectors","points","getPoints","setFromPoints","curveObject","CircleTrajectoryThreeGlobe","m0","m1","flatVertices","CircleThreeGlobe","setCircle3D","center","cos","sin","PolylineThreeGlobe","linewidth","ActiveCommandCommon","acs","num","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","ActiveCommandNone","ActiveCommandRPoint","Undo","ActiveCommandLine","ActiveCommandArcSpike","ActiveCommandLineSpike","ActiveCommandCircleTrajectory","ActiveCommandCircle","ActiveCommandPolyline","ActiveCommandController","commands","activeCommand","ACTIVECOMMAND_MODE","POINT_REGULAR","CIRCLE","LINE","LINE_SPIKE","ARC_SPIKE","CIRCLE_TRAJECTORY","POLYLINE","NONE","SetActiveCommand","theAC","CancelAC","ShiftMap","definition","ShiftShader","ShiftBasemap","PointInersection","vec","data","NVector3","GeometryCommon","raycaster","m3","point","capture","params","Points","threshold","Capture","Add","g","list","listMesh","dispose","splice","indexOf","Update","RaycastForVec","setFromCamera","intersects","intersectObjects","Raycast","geo","object","RemoveAllMesh","getPointAtScreenCoordinates","px0","px1","py0","py1","sub","crossVectors","tp","lookAt","setPosition","getIntersectionAtScreenCoordinates","vector","LightingController","hemiLight","dirLight","setHSL","groundColor","shadow","mapSize","left","right","top","bottom","bias","near","far","visible","WallPaperBase","uuid","isHover","isLeave","isSelected","isDrag","hasPopup","scale","t","tOver","tDown1","tDown2","tUp","IsMove","Dummy","UpdatePost","GlobeWrapperThreeDark","radius","xSeg","ySeg","envirGeometry","envirMat","envirMesh","meshCloud","pixelMapGlobe","isDone","meshSpot","mapNight","mapDay","numBaseMapShfit","InitDataStructure","ImportImage","InitGlobe","InitCloud","InitGeometry","InitMaterial","async","getDataFromFeatureService","NGeoJSONFeatureService","window","featureLayer","PixelMapGlobe","rotateY","MathUtility","Image","src","onload","crossOrigin","map","load","specular","shininess","bumpMap","bumpScale","needsUpdate","uvsNeedUpdate","theImg","side","opacity","transparent","depthWrite","InitEnviroment","InitPost","textureLoader","rotation","ToEarth","elevation","NVectorUtility","SceneWrapper","baseMap","activeCommandController","lightingController","numBasemap","shadowMap","enabled","NUIWrapper","NUI","BindingStoppropagation","BindingActiveCommandController","PushUI","ac","AppThreeEnv","viewWrapper","io","document","getElementById","MouseInteractionMenu","Solution","destroy","firstChild","removeChild","warn"],"sourceRoot":""}
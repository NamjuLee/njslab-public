"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[6326],{21857:(e,t,i)=>{i.d(t,{CS:()=>y,Cw:()=>g,Yu:()=>w,j5:()=>f,lm:()=>x});var s=i(42265),a=i(19545),r=i(44055),n=i(76200),o=i(84652),l=i(35995),h=i(78952),p=i(41414),c=i(376),d=i(9014),u=i(49818);const m={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function g(e){const t=e.folders||[],i=t.slice(),s=new Map,a=new Map,r=new Map,n=new Map,l=new Map,h={esriGeometryPoint:a,esriGeometryPolyline:r,esriGeometryPolygon:n};(e.featureCollection&&e.featureCollection.layers||[]).forEach((e=>{const t=(0,o.d9)(e);t.featureSet.features=[];const i=e.featureSet.geometryType;s.set(i,t);const l=e.layerDefinition.objectIdField;"esriGeometryPoint"===i?_(a,l,e.featureSet.features):"esriGeometryPolyline"===i?_(r,l,e.featureSet.features):"esriGeometryPolygon"===i&&_(n,l,e.featureSet.features)})),e.groundOverlays&&e.groundOverlays.forEach((e=>{l.set(e.id,e)})),t.forEach((t=>{t.networkLinkIds.forEach((s=>{const a=function(e,t,i){const s=function(e,t){let i;return t.some((t=>t.id===e&&(i=t,!0))),i}(e,i);return s&&(s.parentFolderId=t,s.networkLink=s),s}(s,t.id,e.networkLinks);a&&i.push(a)}))})),i.forEach((e=>{if(e.featureInfos){e.points=(0,o.d9)(s.get("esriGeometryPoint")),e.polylines=(0,o.d9)(s.get("esriGeometryPolyline")),e.polygons=(0,o.d9)(s.get("esriGeometryPolygon")),e.mapImages=[];for(const t of e.featureInfos)switch(t.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const i=h[t.type].get(t.id);i&&e[m[t.type]].featureSet.features.push(i);break}case"GroundOverlay":{const i=l.get(t.id);i&&e.mapImages.push(i);break}}e.fullExtent=x([e])}}));const p=x(i);return{folders:t,sublayers:i,extent:p}}function y(e,t,i,r){const o=a.id&&a.id.findCredential(e);e=(0,l.fl)(e,{token:o&&o.token});const h=s.Z.kmlServiceUrl;return(0,n.default)(h,{query:{url:e,model:"simple",folders:"",refresh:0!==i||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:r})}function f(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const a=[],r={},n=t.sublayers,o=t.folders.map((e=>e.id));return n.forEach((t=>{const n=new e;if(i?n.read(t,i):n.read(t),s.length&&o.includes(n.id)&&(n.visible=s.includes(n.id)),r[t.id]=n,null!=t.parentFolderId&&-1!==t.parentFolderId){const e=r[t.parentFolderId];e.sublayers||(e.sublayers=[]),e.sublayers.unshift(n)}else a.unshift(n)})),a}function _(e,t,i){i.forEach((i=>{e.set(i.attributes[t],i)}))}async function w(e){const t=u.default.fromJSON(e.featureSet).features,i=e.layerDefinition,s=(0,d.i)(i.drawingInfo.renderer),a=r.Z.fromJSON(e.popupInfo),n=[];for(const r of t){const e=await s.getSymbolAsync(r);r.symbol=e,r.popupTemplate=a,r.visible=!0,n.push(r)}return n}function x(e){const t=(0,p.Ue)(p.Gv),i=(0,p.Ue)(p.Gv);for(const s of e){if(s.polygons&&s.polygons.featureSet&&s.polygons.featureSet.features)for(const e of s.polygons.featureSet.features)(0,c.Yg)(t,e.geometry),(0,p.TC)(i,t);if(s.polylines&&s.polylines.featureSet&&s.polylines.featureSet.features)for(const e of s.polylines.featureSet.features)(0,c.Yg)(t,e.geometry),(0,p.TC)(i,t);if(s.points&&s.points.featureSet&&s.points.featureSet.features)for(const e of s.points.featureSet.features)(0,c.Yg)(t,e.geometry),(0,p.TC)(i,t);if(s.mapImages)for(const e of s.mapImages)(0,c.Yg)(t,e.extent),(0,p.TC)(i,t)}return(0,p.fS)(i,p.Gv)?null:{xmin:i[0],ymin:i[1],zmin:i[2],xmax:i[3],ymax:i[4],zmax:i[5],spatialReference:h.Z.WGS84}}},6326:(e,t,i)=>{i.r(t),i.d(t,{default:()=>A});var s=i(18489),a=i(27366),r=i(19545),n=i(40281),o=i(92026),l=i(94172),h=i(35995),p=i(49861),c=(i(63780),i(25243),i(69912)),d=i(53866),u=i(52587),m=i(78952),g=i(21857),y=i(23084),f=i(78983),_=i(45956),w=i(90110),x=i(95986),b=i(75391),S=i(34035),V=i(67581),v=i(76200),C=i(585),I=i(80394),P=i(25866),D=i(40658),k=i(8548),T=i(53634),M=i(48673),E=i(91945),R=i(51378);class G{constructor(e){if(e)this._ownsRctx=!1,this._rctx=e;else{if(G._instance)return G._instanceRefCount++,G._instance;G._instanceRefCount=1,G._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas").getContext("webgl");e.getExtension("OES_texture_float"),this._rctx=new E.x(e,{})}const t=(0,D.s)("raster/reproject","raster/reproject",new Map([["a_position",0]]),{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(t.shaders.vertexShader,t.shaders.fragmentShader,t.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new P.Z(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=(0,u.iV)(e.extent,t),a=new C.Z({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:r,y:n}=(0,I.VO)(a,t,e.extent);let o=(r+n)/2;const l=Math.round((s.xmax-s.xmin)/o),h=Math.round((s.ymax-s.ymin)/o);o=(s.width/l+s.height/h)/2;const p=new C.Z({x:o,y:o,spatialReference:s.spatialReference}),c=(0,I.Qp)({projectedExtent:s,srcBufferExtent:e.extent,pixelSize:p,hasWrapAround:!0,spacing:[16,16]}),d=(0,M.Br)(this._rctx,c),m=new R.x(this._rctx,{width:l,height:h,pixelFormat:k.VI.RGBA,dataType:k.Br.UNSIGNED_BYTE,wrapMode:k.e8.CLAMP_TO_EDGE,samplingMode:k.cw.LINEAR,hasMipmap:!1}),g=new T.X(this._rctx,{colorTarget:k.Lm.TEXTURE,depthStencilTarget:k.OU.NONE,width:l,height:h},m);if(this._rctx.bindFramebuffer(g),this._rctx.setViewport(0,0,l,h),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(d,1),this._quad.bind(),this._program.setUniform2f("u_srcImageSize",e.texture.descriptor.width,e.texture.descriptor.height),this._program.setUniform2fv("u_transformSpacing",c.spacing),this._program.setUniform2fv("u_transformGridSize",c.size),this._program.setUniform2f("u_targetImageSize",l,h),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),d.dispose(),i){const e=new ImageData(g.descriptor.width,g.descriptor.height);return g.readPixels(0,0,g.descriptor.width,g.descriptor.height,k.VI.RGBA,k.Br.UNSIGNED_BYTE,e.data),g.detachColorTexture(k.VY.COLOR_ATTACHMENT0),g.dispose(),{texture:m,extent:s,imageData:e}}return g.detachColorTexture(k.VY.COLOR_ATTACHMENT0),g.dispose(),{texture:m,extent:s}}reprojectBitmapData(e,t){const i=(0,_.JZ)(e.bitmapData)?(0,_.RL)(e.bitmapData):e.bitmapData,s=new R.x(this._rctx,{width:e.bitmapData.width,height:e.bitmapData.height,pixelFormat:k.VI.RGBA,dataType:k.Br.UNSIGNED_BYTE,wrapMode:k.e8.CLAMP_TO_EDGE,samplingMode:k.cw.LINEAR,hasMipmap:!1},i),a=this.reprojectTexture({texture:s,extent:e.extent},t,!0);a.texture.dispose();const r=document.createElement("canvas");return r.width=a.imageData.width,r.height=a.imageData.height,r.getContext("2d").putImageData(a.imageData,0,0),{bitmapData:r,extent:a.extent}}async loadAndReprojectBitmapData(e,t,i){const s=(await(0,v.default)(e,{responseType:"image"})).data,a=document.createElement("canvas");a.width=s.width,a.height=s.height;const r=a.getContext("2d");r.drawImage(s,0,0);const n=r.getImageData(0,0,a.width,a.height);if(t.spatialReference.equals(i))return{bitmapData:n,extent:t};const o=this.reprojectBitmapData({bitmapData:n,extent:t},i);return{bitmapData:o.bitmapData,extent:o.extent}}destroy(){this._ownsRctx?(G._instanceRefCount--,0===G._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),G._instance=null)):(this._quad.dispose(),this._program.dispose())}}G._instanceRefCount=0;class U{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let L=class extends((0,x.y)(V.Z)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new w.c,this._kmlVisualData=new U,this.allVisiblePoints=new f.J,this.allVisiblePolylines=new f.J,this.allVisiblePolygons=new f.J,this.allVisibleMapImages=new n.Z}async hitTest(e,t){var i,s,a;const r=this.layer;return[null===(i=this._pointsView)||void 0===i?void 0:i.hitTest(e),null===(s=this._polylinesView)||void 0===s?void 0:s.hitTest(e),null===(a=this._polygonsView)||void 0===a?void 0:a.hitTest(e)].flat().filter(Boolean).map((t=>(t.layer=r,t.sourceLayer=r,{type:"graphic",graphic:t,layer:r,mapPoint:e})))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new S.Z({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new b.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new S.Z({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new b.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new S.Z({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new b.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))})),(0,l.YP)((()=>this.layer.visibleSublayers),(e=>{for(const[t,i]of this._kmlVisualData.allSublayers)i.visibility=0;for(const t of e){const e=this._kmlVisualData.allSublayers.get(t.id);e&&(e.visibility=1)}this._refreshCollections()}))]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new G}detach(){this._fetchController.abort(),this._fetchController=null,this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null),this._imageReprojector&&(this._imageReprojector.destroy(),this._imageReprojector=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,d.Z.fromJSON(e.extent),this.view.spatialReference).then((t=>{const i=new _.eY(t.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});i.x=t.extent.xmin,i.y=t.extent.ymax,i.resolution=t.extent.width/t.bitmapData.width,i.rotation=e.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(e,i)}))}async _getViewDependentUrl(e,t){const{viewFormat:i,viewBoundScale:a,httpQuery:n}=e;if((0,o.pC)(i)){if((0,o.Wi)(t))throw new Error("Loading this network link requires a view state.");let l;if(await(0,u.zD)(),(0,o.pC)(a)&&1!==a){const e=new d.Z(t.extent);e.expand(a),l=e}else l=t.extent;l=(0,u.iV)(l,m.Z.WGS84);const p=(0,u.iV)(l,m.Z.WebMercator),c=l.xmin,g=l.xmax,f=l.ymin,_=l.ymax,w=t.size[0]*t.pixelRatio,x=t.size[1]*t.pixelRatio,b=Math.max(p.width,p.height),S={"[bboxWest]":c.toString(),"[bboxEast]":g.toString(),"[bboxSouth]":f.toString(),"[bboxNorth]":_.toString(),"[lookatLon]":l.center.x.toString(),"[lookatLat]":l.center.y.toString(),"[lookatRange]":b.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":l.center.x.toString(),"[lookatTerrainLat]":l.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":l.center.x.toString(),"[cameraLat]":l.center.y.toString(),"[cameraAlt]":b.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":w.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":r.i8,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},V=e=>{for(const t in e)for(const i in S)e[t]=e[t].replace(i,S[i])},v=(0,h.u0)(i);V(v);let C={};(0,o.pC)(n)&&(C=(0,h.u0)(n),V(C));const I=(0,y.en)(e.href);return I.query=(0,s.Z)((0,s.Z)((0,s.Z)({},I.query),v),C),"".concat(I.path,"?").concat((0,h.B7)(v))}return e.href}async _fetchService(e){const t=new U;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((e=>{let{item:t}=e;return t}))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((e=>{let{item:t}=e;return t}))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((e=>{let{item:t}=e;return t}))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((e=>{let{item:t}=e;return t})))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!t.visibility&&(-1===t.parentFolderId||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,i){return this._fetchParsedKML(e,i).then((async e=>{for(const s of e.sublayers){t.allSublayers.set(s.id,s);const e=s.points?await(0,g.Yu)(s.points):[],a=s.polylines?await(0,g.Yu)(s.polylines):[],r=s.polygons?await(0,g.Yu)(s.polygons):[],n=s.mapImages||[];if(t.allPoints.push(...e.map((e=>({item:e,sublayerId:s.id})))),t.allPolylines.push(...a.map((e=>({item:e,sublayerId:s.id})))),t.allPolygons.push(...r.map((e=>({item:e,sublayerId:s.id})))),t.allMapImages.push(...n.map((e=>({item:e,sublayerId:s.id})))),s.networkLink){const e=await this._getViewDependentUrl(s.networkLink,this.view.state);await this._loadVisualData(e,t,i)}}}))}_fetchParsedKML(e,t){return(0,g.CS)(e,this.layer.spatialReference,this.layer.refreshInterval,t).then((e=>(0,g.Cw)(e.data)))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};(0,a._)([(0,p.Cb)()],L.prototype,"_pointsView",void 0),(0,a._)([(0,p.Cb)()],L.prototype,"_polylinesView",void 0),(0,a._)([(0,p.Cb)()],L.prototype,"_polygonsView",void 0),(0,a._)([(0,p.Cb)()],L.prototype,"updating",void 0),L=(0,a._)([(0,c.j)("esri.views.2d.layers.KMLLayerView2D")],L);const A=L}}]);
//# sourceMappingURL=6326.b13543cc.chunk.js.map
{"version":3,"file":"static/js/66561.cc91d086.chunk.js","mappings":"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","sources":["njslab/LabStarter/Starter-Mapbox-React/Layer/MPoint.ts","njslab/LabStarter/Starter-Mapbox-React/Layer/MPolygon.ts","njslab/LabStarter/Starter-Mapbox-React/Scene/index.ts","webpack://NJS-Lab/./src/njslab/LabStarter/Starter-Mapbox-React/style.module.css?1aae","njslab/LabStarter/Starter-Mapbox-React/App.tsx","njslab/LabStarter/Starter-Mapbox-React/index.tsx"],"sourcesContent":["import mapboxgl from 'mapbox-gl'\n\n// create a custom style layer to implement the WebGL content\n// https://docs.mapbox.com/mapbox-gl-js/api/properties/#customlayerinterface#render\n\nexport class MPoint {\n\n    type: string = 'custom';\n    id: string;\n\n    vertexSource = `\n    precision highp float;\n    uniform mat4 u_matrix;\n    uniform float u_size;\n    attribute vec2 aPos;\n\n    varying vec2 position;\n    \n    void main() {\n        gl_Position = u_matrix * vec4(aPos, 0.0, 1.0);\n        gl_PointSize = u_size; \n        position = vec2(aPos.xy);\n    }`;\n\n    fragmentSource = `\n    precision mediump float;\n\n    uniform vec4 u_color;\n    uniform vec4 u_stroke;\n\n    varying vec2 position;\n\n    void main() {\n        \n        float aRadius = 2.0;\n        float dist = distance(position, gl_FragCoord.xy);\n\n        // https://stackoverflow.com/questions/7237086/opengl-es-2-0-equivalent-for-es-1-0-circles-using-gl-point-smooth\n        float len = length(gl_PointCoord - vec2(0.5)) * 1.0;\n        float radius = 0.3;\n        float strokeWidth = 0.2;\n\n        if (len < radius) {\n            gl_FragColor = u_color;\n        } else if (len < radius + strokeWidth) {\n            gl_FragColor = u_stroke;\n        } else {\n            discard;\n        }\n    }`;\n\n    program: WebGLProgram;\n    buffer: WebGLBuffer;\n    aPos: number;\n\n    data: Float32Array;\n    map: mapboxgl.Map;\n    constructor(id = 'custom', data: Float32Array) {\n        this.id = id;\n        this.data = data;\n    }\n\n    // method called when the layer is added to the map\n    // https://docs.mapbox.com/mapbox-gl-js/api/#styleimageinterface#onadd\n    public onAdd(map: mapboxgl.Map, gl: WebGL2RenderingContext) {\n        this.map = map;\n        // create a vertex shader\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this.vertexSource);\n        gl.compileShader(vertexShader);\n\n        // create a fragment shader\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this.fragmentSource);\n        gl.compileShader(fragmentShader);\n\n        // link the two shaders into a WebGL program\n        this.program = gl.createProgram() as WebGLProgram;\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n\n        this.aPos = gl.getAttribLocation(this.program, 'aPos');\n\n        // create and initialize a WebGLBuffer to store vertex and color data\n        this.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\n    }\n    // method fired on each animation frame\n    // https://docs.mapbox.com/mapbox-gl-js/api/#map.event:render\n    public render(gl: WebGL2RenderingContext, matrix) {\n        // console.log(matrix)\n        gl.useProgram(this.program);\n\n        // @ts-ignore\n        // console.log(this.map.transform)\n        // console.log(Math.pow(2.0, this.map.transform.zoom))\n\n        // @ts-ignore\n        gl.uniform1f(gl.getUniformLocation(this.program, 'u_size'), 5 * Math.pow(2.0, this.map.transform.zoom));\n        gl.uniform4fv(gl.getUniformLocation(this.program, 'u_color'), [1.0, 1.0, 0.0, 1.0]);\n        gl.uniform4fv(gl.getUniformLocation(this.program, 'u_stroke'), [1.0, 0.0, 0.0, 1.0]);\n\n\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.program, 'u_matrix'), false, matrix);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.enableVertexAttribArray(this.aPos);\n        gl.vertexAttribPointer(this.aPos, 2, gl.FLOAT, false, 0, 0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.drawArrays(gl.POINTS, 0, this.data.length * 0.5);\n    }\n}","import mapboxgl from 'mapbox-gl'\nimport { mat4 } from 'gl-matrix';\n\n// create a custom style layer to implement the WebGL content\n// https://docs.mapbox.com/mapbox-gl-js/api/properties/#customlayerinterface#render\n\nexport class MPolygon {\n\n    type: string = 'custom';\n    id: string;\n\n    vertexSource = `\n    uniform mat4 u_matrix;\n    attribute vec2 aPos;\n    \n    uniform vec4 u_color;\n    // out vec4 vertexColor;\n\n    void main() {\n        gl_Position = u_matrix * vec4(aPos, 0.0, 1.0);\n        gl_PointSize = 5.0; \n    }`;\n\n    // create GLSL source for fragment shader\n    fragmentSource = `\n    \n    // uniform vec4 u_color;\n\n    void main() {\n        gl_FragColor = vec4(1.0, 1.0, 0.0, 0.25);\n    }`;\n\n    program: WebGLProgram;\n    buffer: WebGLBuffer;\n    aPos: number;\n\n    constructor(id = 'custom') {\n        this.id = id;\n    }\n\n    // method called when the layer is added to the map\n    // https://docs.mapbox.com/mapbox-gl-js/api/#styleimageinterface#onadd\n    public onAdd(map: mapboxgl.Map, gl) {\n        // create GLSL source for vertex shader\n\n        // create a vertex shader\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this.vertexSource);\n        gl.compileShader(vertexShader);\n\n        // create a fragment shader\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this.fragmentSource);\n        gl.compileShader(fragmentShader);\n\n        // link the two shaders into a WebGL program\n        this.program = gl.createProgram() as WebGLProgram;\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n\n        this.aPos = gl.getAttribLocation(this.program, 'aPos');\n\n        // define vertices of the triangle to be rendered in the custom style layer\n        const helsinki = mapboxgl.MercatorCoordinate.fromLngLat({\n            lng: 25.004,\n            lat: 60.239\n        });\n        const berlin = mapboxgl.MercatorCoordinate.fromLngLat({\n            lng: 13.403,\n            lat: 52.562\n        });\n        const kyiv = mapboxgl.MercatorCoordinate.fromLngLat({\n            lng: 30.498,\n            lat: 50.541\n        });\n\n        // create and initialize a WebGLBuffer to store vertex and color data\n        this.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(\n            gl.ARRAY_BUFFER,\n            new Float32Array([helsinki.x, helsinki.y, berlin.x, berlin.y, kyiv.x, kyiv.y]),\n            gl.STATIC_DRAW\n        );\n    }\n    // method fired on each animation frame\n    // https://docs.mapbox.com/mapbox-gl-js/api/#map.event:render\n    public render(gl: WebGL2RenderingContext, matrix) {\n        // console.log(matrix)\n\n        // const rotationMatrix = calculateRotationMatrix();\n        // mat4.multiply(matrix, matrix, rotationMatrix);\n\n        gl.useProgram(this.program);\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.program, 'u_matrix'), false, matrix);\n\n        gl.uniform4fv(gl.getUniformLocation(this.program, \"u_color\"), [1.0, 0.0, 0.0, 1.0]);\n        \n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.enableVertexAttribArray(this.aPos);\n        gl.vertexAttribPointer(this.aPos, 2, gl.FLOAT, false, 0, 0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\n    }\n}\n\nconst calculateRotationMatrix = () => {\n    const rotationMatrix = mat4.create();\n    // Get the current time in seconds\n    const currentTime = Date.now() / 1000;\n\n    // Rotate the cube around the y-axis\n    mat4.rotate(\n        rotationMatrix,  // Destination matrix\n        rotationMatrix,  // Matrix to rotate\n        currentTime,     // Amount to rotate (in radians)\n        [0, 0, 1]         // Axis to rotate around (y-axis)\n    );\n    return rotationMatrix;\n}","\nimport mapboxgl from 'mapbox-gl'\n\nimport { MPoint } from '../Layer/MPoint';\nimport { MPolygon } from '../Layer/MPolygon';\n\nexport class Scene {\n    public map: mapboxgl.Map;\n    constructor(map: mapboxgl.Map) {\n        this.map = map;\n\n        // console.log(this)\n\n    }\n    public init() {\n        // console.log('init')\n        // const customLayer = new CustomWebGLLayer()\n        // // @ts-ignore\n        // this.map.addLayer(customLayer, 'some-existing-layer-id');\n        // console.log(this.map)\n        // console.log(this.map.transform)\n\n        // @ts-ignore\n        // this.map.addLayer(highlightLayer, 'building');\n        // @ts-ignore\n        this.map.addLayer(new MPolygon('custom-01'), 'building');\n        \n        const dataPoint = this.toMercators([25.004, 60.239, 0, 0, 1, 1, 2, 2, 3, 3])\n        // console.log(dataPoint);\n        // @ts-ignore\n        this.map.addLayer(new MPoint('custom-02', dataPoint), 'building');\n\n        // this.map.on('mousemove', 'custom-01', (e) =>{\n        //     console.log('customlayer click', e);\n        //     });\n\n        this.map.on('click', (e) => {\n            // console.log(e)\n            // const bbox = [[e.point.x - 20, e.point.y - 20], [e.point.x + 20, e.point.y + 20]];\n            // // @ts-ignore\n            // const features =this.map.queryRenderedFeatures(bbox, { layers: ['custom-01', 'custom-02'] });\n            \n            \n            const features = this.map.queryRenderedFeatures(e.point, { layers: ['custom-01'] });\n            // console.log(features);\n\n            if (features.length > 0) {\n              const clickedFeature = features[0];\n              // Do something with the clicked feature\n              console.log(clickedFeature.properties);\n            }\n        });\n\n    }\n\n    public dispose() {\n        // console.log('dispose', this)\n    }\n    public toMercator(lng: number, lat: number) {\n        return mapboxgl.MercatorCoordinate.fromLngLat({lng, lat})\n    }\n    public toMercators(data: number[]) {\n        const outData = new Float32Array(data.length)\n        for(let i = 0 ; i < data.length; i +=2) {\n            const projected = this.toMercator(data[i], data[i+1])\n            outData[i] = projected.x\n            outData[i+1] = projected.y\n        }\n        return outData;\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"mapContainer\":\"style_mapContainer__BkMw2\"};","import mapboxgl from 'mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { useEffect, useRef } from 'react';\nimport { Scene } from './Scene';\nimport styles from './style.module.css'\n\nconst SubApp = () => {\n    const mapContainer = useRef(null);\n    const map = useRef(null)\n    const sceneRef = useRef(null)\n\n    const createMap = () => {\n        if (map.current) return\n        // mapboxgl.accessToken = process.env.REACT_APP_MAPBOX\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX\n        map.current = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/dark-v11',\n            center: [0, 38],\n            // @ts-ignore\n            projection: 'mercator',\n            zoom: 2,\n            attributionControl: false\n        })\n        sceneRef.current = new Scene(map.current);\n\n\n        map.current.on('load', () => {\n            sceneRef.current.init()\n        });\n\n        map.current.on('move', () => {\n            // customLayer.render(gl, this.map.getGL().transform.matrix);\n        });\n\n    }\n\n    useEffect(() => {\n        // console.log('init', mapContainer.current);\n        createMap();\n        return () => {\n            sceneRef.current.dispose();\n        }\n    }, []);\n\n    return (\n        <div ref={mapContainer} className={styles.mapContainer} />\n    )\n}\n\nexport default SubApp;","'use client'\r\n\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App'\r\nimport React from 'react';\r\n\r\nexport class Solution {\r\n  divHost\r\n  constructor(id: string) {\r\n    this.divHost = document.getElementById(id) as HTMLDivElement;\r\n    const div = document.createElement('div');\r\n    div.style.height = '100%';\r\n    this.divHost.appendChild(div);\r\n\r\n    const root = ReactDOM.createRoot(div);\r\n\r\n    root.render(\r\n      // <React.StrictMode>\r\n      // <HelleApp /> syntax sugar\r\n      React.createElement(App, {})\r\n      // </React.StrictMode>\r\n    );\r\n  }\r\n  public destroy() {\r\n    while (this.divHost.lastElementChild) {\r\n      this.divHost.removeChild(this.divHost.lastElementChild);\r\n    }\r\n  }\r\n}"],"names":["MPoint","constructor","id","data","type","vertexSource","fragmentSource","program","buffer","aPos","map","this","onAdd","gl","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getAttribLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","render","matrix","useProgram","uniform1f","getUniformLocation","Math","pow","transform","zoom","uniform4fv","uniformMatrix4fv","enableVertexAttribArray","vertexAttribPointer","FLOAT","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","drawArrays","POINTS","length","MPolygon","helsinki","mapboxgl","lng","lat","berlin","kyiv","Float32Array","x","y","TRIANGLES","Scene","init","addLayer","dataPoint","toMercators","on","e","features","queryRenderedFeatures","point","layers","clickedFeature","console","log","properties","dispose","toMercator","outData","i","projected","mapContainer","useRef","sceneRef","useEffect","current","process","container","style","center","projection","attributionControl","ref","className","styles","Solution","divHost","document","getElementById","div","createElement","height","appendChild","ReactDOM","React","App","destroy","lastElementChild","removeChild"],"sourceRoot":""}
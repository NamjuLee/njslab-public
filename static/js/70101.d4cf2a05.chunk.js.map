{"version":3,"file":"static/js/70101.d4cf2a05.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-vector/baseWireFrame/Canvas3DWireframeLine.ts","njslab/Workshop/workshop-vector/workshop-vector-3d-2-grid-line-01.ts"],"sourcesContent":["export class Canvas3DWireframeLine {\n  public div: HTMLElement;\n  public renderer: RendererCanvas3DWireframe;\n  public pts = [];\n  public lns = [];\n  public t = 0.0;\n  constructor(id: string) {\n    this.div = document.getElementById(id);\n    this.renderer = new RendererCanvas3DWireframe(id);\n    this.renderer.pts = this.pts;\n    this.renderer.lns = this.lns\n\n    this.init();\n    this.update();\n    this.render();\n  }\n  public init() {\n    // TODO\n  }\n  public update() {\n    // TODO\n  }\n  public render() {\n    requestAnimationFrame(() => {\n      this.render();\n    });\n    this.update();\n    this.renderer.render();\n  }\n  public destroy() {\n    // this.renderer.destroy();\n    try {\n      while (this.div && this.div.lastElementChild) {\n        const lastChild = this.div.lastElementChild as Node;\n        this.div.removeChild(lastChild);\n      }\n    } catch (error) {\n      console.error(\"Error removing child elements:\", error);\n    }\n  }\n}\n\nexport class RendererCanvas3DWireframe {\n  public render: () => void;\n\n  public pts = [];\n  public lns = [];\n  constructor(id) {\n    const div = document.getElementById(id);\n    const bounding = div.getBoundingClientRect();\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = bounding.width;\n    canvas.height = bounding.height;\n    div.appendChild(canvas);\n\n    const ctx = canvas.getContext(\"2d\");\n\n    let angleX = -Math.PI / 2;\n    let angleY = 0;\n    let dragging = false;\n    let panning = false;\n    let zoom = 1;\n    let lastMouseX = 0;\n    let lastMouseY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n    let panStartX = 0;\n    let panStartY = 0;\n    let fov = 500;\n\n    const rotate = (point, angleX, angleY) => {\n      const cosX = Math.cos(angleX);\n      const sinX = Math.sin(angleX);\n      const cosY = Math.cos(angleY);\n      const sinY = Math.sin(angleY);\n\n      // (swap Y and Z for Z-up)\n      let x = point.x * cosY - point.y * sinY;\n      let y = point.x * sinY + point.y * cosY;\n\n      let z = point.z * cosX - y * sinX;\n      y = point.z * sinX + y * cosX;\n\n      return { x, y, z };\n    };\n\n    const project = (point) => {\n      const scale = (fov / (fov + point.y)) * zoom; // Z-axis is now vertical\n      return {\n        x: point.x * scale + canvas.width / 2 + offsetX,\n        y: -point.z * scale + canvas.height / 2 + offsetY, // Invert Z for canvas Y-axis\n      };\n    };\n\n    const rendering = () => {\n      // requestAnimationFrame(() => {\n      //   rendering();\n      // });\n      // console.log('rendering...', this.pts)\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let rotated;\n      let projected;\n\n      this.lns.forEach((lines) => {\n        if (lines.length < 2) return;\n\n        rotated = rotate(this.pts[lines[0]], angleX, angleY);\n        projected = project(rotated);\n\n        ctx.beginPath();\n        ctx.moveTo(projected.x , projected.y)\n        for(let i = 1; i < lines.length; i++) {\n\n          rotated = rotate(this.pts[lines[i]], angleX, angleY);\n          projected = project(rotated);\n\n          ctx.lineTo(projected.x , projected.y)\n\n        }\n\n        const depthScale = (fov / (fov + rotated.y)) * zoom;\n        let radius = 0.5 * depthScale;\n        radius = radius < 0.1 ? 0.1 : radius;\n\n        ctx.strokeStyle = '#000'\n        ctx.lineWidth = radius\n        ctx.stroke()\n      })\n\n      this.pts.forEach((point) => {\n        rotated = rotate(point, angleX, angleY);\n        projected = project(rotated);\n\n        const depthScale = (fov / (fov + rotated.y)) * zoom;\n        let radius = 2 * depthScale;\n        radius = radius < 0.1 ? 0.1 : radius;\n\n        ctx.beginPath();\n        ctx.arc(projected.x, projected.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = point.color ? point.color : \"#f00\";\n        ctx.fill();\n      });\n    };\n    this.render = () => rendering();\n\n    canvas.addEventListener(\"mousedown\", (e) => {\n      if (e.button === 2) {\n        dragging = true;\n      } else if (e.button === 0) {\n        if (e.altKey) {\n          dragging = true;\n        } else {\n          panning = true;\n          panStartX = e.clientX - offsetX;\n          panStartY = e.clientY - offsetY;\n        }\n      }\n      lastMouseX = e.clientX;\n      lastMouseY = e.clientY;\n    });\n\n    canvas.addEventListener(\"mousemove\", (e) => {\n      if (dragging) {\n        const dx = e.clientX - lastMouseX;\n        const dy = e.clientY - lastMouseY;\n        angleX -= dy * 0.01;\n        angleY += dx * 0.01;\n        lastMouseX = e.clientX;\n        lastMouseY = e.clientY;\n        //   rendering();\n      } else if (panning) {\n        offsetX = e.clientX - panStartX;\n        offsetY = e.clientY - panStartY;\n        //   rendering();\n      }\n    });\n\n    canvas.addEventListener(\"mouseup\", () => {\n      dragging = false;\n      panning = false;\n    });\n\n    canvas.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n\n    canvas.addEventListener(\"wheel\", (e) => {\n      const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n      const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n      const prevZoom = zoom;\n      const zoomSpeed = Math.max(0.001, zoom * 0.02); // zoom speed based on zoom level\n\n      zoom += e.deltaY * -zoomSpeed;\n      zoom = Math.min(Math.max(zoom, 0.1), 50);\n\n      const scaleChange = zoom / prevZoom;\n\n      offsetX -= (mouseX - canvas.width / 2 - offsetX) * (scaleChange - 1);\n      offsetY -= (mouseY - canvas.height / 2 - offsetY) * (scaleChange - 1);\n\n      // rendering();\n    });\n\n    rendering();\n  }\n}\n","import { Canvas3DWireframeLine  } from './baseWireFrame/Canvas3DWireframeLine';\r\n\r\nexport class Solution extends Canvas3DWireframeLine {\r\n  grid: GridSystem\r\n\r\n  constructor(id: string) {\r\n    super(id)\r\n  }\r\n  public init () {\r\n    this.t = 0.0;\r\n\r\n    this.grid = new GridSystem(new Vector3(-80, -80, 0), new Vector3(80, 80, 0), 10, 10)\r\n    this.pts.push(...this.grid.vs);\r\n\r\n\r\n    for (let i = 0; i < this.pts.length - 1; ++i) {\r\n        for (let j = i + 1; j < this.pts.length; ++j) {\r\n            const dis = distance(this.pts[j],(this.pts[i]))\r\n            if (dis < 30) {\r\n                this.lns.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n  }\r\n  public update() {\r\n\r\n    for (let i = 0; i < this.pts.length; ++i) {\r\n      // const offset = Math.cos((this.pts[i].x + this.pts[i].y) * this.t) * 2\r\n      // this.pts[i].z+= offset\r\n      this.pts[i].z = Math.cos(i * this.t * 0.1)\r\n    }\r\n\r\n    this.t += 0.01;\r\n  }\r\n\r\n}\r\n\r\nclass Vector3 {\r\n  public x: number = 0.0;\r\n  public y: number = 0.0;\r\n  public z: number = 0.0;\r\n  public r: number = 10\r\n  public color = '#f0f'\r\n  constructor(x, y, z) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n  }\r\n  public render(ctx: CanvasRenderingContext2D) {\r\n      ctx.fillStyle = this.color;\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2.0);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n  }\r\n}\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}\r\n\r\nconst genRandomPt = (numPoints = 100) => {\r\n  const pts = [];\r\n  for (let i = 0; i < numPoints; i++) {\r\n    // const p = {\r\n    //   x: (Math.random() - 0.5) * 500,\r\n    //   y: (Math.random() - 0.5) * 500,\r\n    //   z: (Math.random() - 0.5) * 500,\r\n    // }\r\n    const p = new Vector3((Math.random() - 0.5) * 500, (Math.random() - 0.5) * 500, (Math.random() - 0.5) * 500)\r\n    pts.push(p);\r\n  }\r\n  return pts;\r\n};\r\n\r\nconst genGridPt = (numPoints = 5) => {\r\n  const scale = 20;\r\n  const pts = [];\r\n  for (let j = -numPoints; j < numPoints; j++) {\r\n    for (let i = -numPoints; i < numPoints; i++) {\r\n      // pts.push({\r\n      //   x: i * scale,\r\n      //   y: j * scale,\r\n      //   z: 0.0,\r\n      // });\r\n      const p = new Vector3(i * scale, j * scale, 0.0)\r\n      pts.push(p);\r\n    }\r\n  }\r\n  return pts;\r\n};\r\n\r\n\r\n\r\n\r\nexport class GetGrid {\r\n    public static GetGrid(xNum: number, yNum: number, x0: number = -1, y0: number = -1, x1: number = 1, y1: number = 1, mode: number = 0) {\r\n        return new GridSystem(new Vector3(x0, y0, 0), new Vector3(x1, y1, 0), xNum, yNum, mode);\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\nexport class GridSystem {\r\n    rx: number; ry: number;\r\n    ddx: number; ddy: number;\r\n    v0: Vector3; v1: Vector3;\r\n\r\n    vs: Vector3[] = [];\r\n    mode: number = 0;\r\n\r\n    constructor(v0: Vector3, v1: Vector3, rx: number = 10, ry: number = 10, mode: number = 0) {\r\n        this.mode = mode;\r\n        this.v0 = new Vector3(v0.x, v0.y, v0.z);\r\n        this.v1 = new Vector3(v1.x, v1.y, v1.z);\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n        this.InitGrid();\r\n    }\r\n    public InitGrid() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                let y = this.v0.y + j * this.ddy;\r\n\r\n                switch (this.mode) {\r\n                    case 0:\r\n                        this.vs.push(new Vector3(x, y, 0));\r\n                        break;\r\n                    case 1:\r\n                        if (((i + j) % 2) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        if (((i * j) % 2) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        if (((i * j) % 3) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        if ((i % 2) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        if ((i % 3) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        if ((j % 2) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        if ((j % 3) === 0) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        if ((j % 3) === 0 && (i % 3)) {\r\n                            this.vs.push(new Vector3(x, y, 0));\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // this.vs.push(new Vector3(x, y, 0));\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public Update() {\r\n        // console.log('update');\r\n    }\r\n    public Render() {\r\n        //\r\n    }\r\n}"],"names":["Canvas3DWireframeLine","constructor","id","div","renderer","pts","lns","t","this","document","getElementById","RendererCanvas3DWireframe","init","update","render","requestAnimationFrame","destroy","lastElementChild","lastChild","removeChild","error","console","bounding","getBoundingClientRect","canvas","createElement","width","height","appendChild","ctx","getContext","angleX","Math","PI","angleY","dragging","panning","zoom","lastMouseX","lastMouseY","offsetX","offsetY","panStartX","panStartY","fov","rotate","point","cosX","cos","sinX","sin","cosY","sinY","x","y","z","project","scale","rendering","rotated","projected","clearRect","forEach","lines","length","beginPath","moveTo","i","lineTo","radius","strokeStyle","lineWidth","stroke","arc","fillStyle","color","fill","addEventListener","e","button","altKey","clientX","clientY","dx","dy","preventDefault","mouseX","left","mouseY","top","prevZoom","zoomSpeed","max","deltaY","min","scaleChange","Solution","super","grid","GridSystem","Vector3","push","vs","j","distance","r","closePath","v0","v1","sqrt","distance2","GetGrid","xNum","yNum","x1","y1","mode","rx","ry","ddx","ddy","Init","InitGrid","Update","Render"],"sourceRoot":""}
{"version":3,"file":"static/js/72243.9a2f81c0.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-vector/base/RendererCanvas.ts","njslab/Workshop/workshop-vector/workshop-vector-01.ts"],"sourcesContent":["export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost && this.divHost.lastElementChild) {\r\n                const lastChild = this.divHost.lastElementChild as Node;\r\n                this.divHost.removeChild(lastChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}","import { RendererCanvas } from './base/RendererCanvas';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    \r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n\r\n        const v0 = new Vector3(0, 0, 0);\r\n        v0.render(ctx);\r\n\r\n        const v1 = new Vector3(0, 100, 0);\r\n        v1.render(ctx);\r\n\r\n        const v2 = new Vector3(100, 0, 0);\r\n        v2.render(ctx);\r\n\r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    public r: number = 10\r\n    constructor(x,y,z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#333';\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\n"],"names":["RendererCanvas","constructor","div","divHost","canvas","ctx","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","this","getBoundingClientRect","width","height","document","createElement","appendChild","getContext","onclick","e","setTimeout","mouseClick","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","mouseMove","window","addEventListener","start","loop","destroy","removeEventListener","lastElementChild","lastChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","render","renderPost","renderMouse","x","y","console","log","v","fillStyle","beginPath","arc","Math","PI","fillText","closePath","fill","floor","Solution","id","super","getElementById","translate","init","Vector3","z","r"],"sourceRoot":""}
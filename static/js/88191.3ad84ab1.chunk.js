"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[88191],{88191:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var i=r(18489),n=r(78808),a=r(64299),s=r(94452),o=r(51654),c=r(90754),l=(r(83194),r(75476),r(90825)),d=r(90967),p=r(37926),u=r(99538);function h(e,t){if((0,s.Wi)(e)&&(0,s.Wi)(t))return null;const r={};return(0,s.pC)(t)&&(r.geometry=t.toJSON()),(0,s.pC)(e)&&(r.where=e),r}let y=class extends p.default{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([(0,o.YP)((()=>{var e;return null===(e=this.layer)||void 0===e?void 0:e.purgeOptions}),(()=>this._update())),(0,o.YP)((()=>this.suspended),(e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()}))])}get connectionError(){if(this.errorString)return new a.Z("stream-controller",this.errorString)}on(e,t){"data-received"===e&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),"data-received"===e&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!this.layer.timeInfo.endField&&!this.layer.timeInfo.startField)throw new a.Z("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then((e=>{const t=d.default.fromJSON(e);return t.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),t}))}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return(0,i.Z)((0,i.Z)({},super._createClientOptions()),{},{setProperty:e=>{this.set(e.propertyName,e.value)}})}_createTileRendererHash(e){const t="".concat(JSON.stringify(this.layer.purgeOptions),".").concat(JSON.stringify(h(this.layer.definitionExpression,this.layer.geometryDefinition)),")");return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map((e=>e.toJSON())),i=(0,u.oq)(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,a=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:n,source:this.layer.parsedUrl,serviceFilter:h(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:a,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};(0,n._)([(0,c.Cb)()],y.prototype,"errorString",void 0),(0,n._)([(0,c.Cb)({readOnly:!0})],y.prototype,"connectionError",null),(0,n._)([(0,c.Cb)()],y.prototype,"connectionStatus",void 0),y=(0,n._)([(0,l.j)("esri.views.2d.layers.StreamLayerView2D")],y);const m=y}}]);
//# sourceMappingURL=88191.3ad84ab1.chunk.js.map
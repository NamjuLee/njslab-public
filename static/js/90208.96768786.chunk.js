"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[90208],{90208:(e,t,s)=>{s.r(t),s.d(t,{default:()=>m});var r=s(70409),a=s(64299),n=s(92249),i=s(94452),o=s(3341),u=s(95985),h=s(55211),l=s(47643),y=s(29585),p=s(18308),c=s(12106),g=s(93189),_=s(90142),d=s(19030);class m{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{var t;const{objectIdField:s}=this._queryEngine,r=await(0,_.Bm)(null!==(t=this._getFeatureUrl)&&void 0!==t?t:"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await(0,c.O3)(r),(0,o.k_)(e);const a=(0,c.lG)(r,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:s});if(!(0,u.fS)(this._queryEngine.spatialReference,u.Zn))for(const o of a)(0,i.pC)(o.geometry)&&(o.geometry=(0,h.GH)((0,y.iV)((0,h.di)(o.geometry,this._queryEngine.geometryType,!1,!1),u.Zn,this._queryEngine.spatialReference)));let n=1;for(const i of a){const e={};(0,g.O0)(this._fieldsIndex,e,i.attributes,!0),i.attributes=e,null==i.attributes[s]&&(i.objectId=i.attributes[s]=n++)}return a}}destroy(){var e;null!==(e=this._queryEngine)&&void 0!==e&&e.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:s,getFeatureOutputFormat:r,spatialReference:a,fields:n,geometryType:u,featureType:h,objectIdField:y,customParameters:c}=e;this._featureType=h,this._customParameters=c,this._getFeatureUrl=s,this._getFeatureOutputFormat=r,this._fieldsIndex=new d.Z(n),await this._checkProjection(a),(0,o.k_)(t),this._queryEngine=new p.q({fields:n,geometryType:u,hasM:!1,hasZ:!1,objectIdField:y,spatialReference:a,timeInfo:null,featureStore:new l.Z({geometryType:u,hasM:!1,hasZ:!1})});const g=await this._snapshotFeatures((0,i.Wg)(t.signal));return this._queryEngine.featureStore.addMany(g),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new a.Z("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this._customParameters=e,null!==(t=this._snapshotTask)&&void 0!==t&&t.abort(),this._snapshotTask=(0,r.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,o.D_)(e)||n.Z.getLogger("esri.layers.WFSLayer").error(new a.Z("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch(e){}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await(0,y._W)(u.Zn,e)}catch(t){throw new a.Z("unsupported-projection","Projection not supported",{spatialReference:e})}}}}}]);
//# sourceMappingURL=90208.96768786.chunk.js.map
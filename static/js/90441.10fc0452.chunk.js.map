{"version":3,"file":"static/js/90441.10fc0452.chunk.js","mappings":"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","sources":["njslab/Env/CanvasNavigation/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\n\nexport class Solution {\n    public divHost: HTMLElement;\n    public renderer: CanvasNavigation;\n    public div: HTMLElement;\n    constructor(id: string) {\n        this.divHost = document.getElementById(id);\n\n        // Center align\n        this.divHost.style.display = 'flex';\n        this.divHost.style.alignItems = 'center';\n\n        this.div = document.createElement('div');\n        this.div.style.marginLeft = 'auto';\n        this.div.style.marginRight = 'auto';\n        this.div.style.backgroundColor = '#555';\n        this.div.style.width = '1000px';\n        this.div.style.height = '600px';\n        this.divHost.appendChild(this.div);\n\n        // TODO\n        // You code goes here for one time operation\n\n        this.renderer = new CanvasNavigation(this);\n\n        // console.log(this.renderer);\n        // !! you should execute it for rendering\n        // this.start();\n    }\n    public destroy() {\n        this.renderer.destroy();\n        while (this.divHost.lastElementChild) {\n            this.divHost.removeChild(this.divHost.lastElementChild);\n        }\n    }\n}\n\n\nexport class CanvasNavigation {\n    solution: Solution;\n\n    canvas: HTMLCanvasElement;\n    statusRendering: Vector;\n    statusTarget: Vector = new Vector(200, 200, 4);\n\n    needInterpolation: boolean = false;\n\n    img: HTMLImageElement;\n    ctx: CanvasRenderingContext2D;\n\n    speedInterpolation: number = 0.1;\n    easingInterpolation: boolean = true;\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n        // https://gist.github.com/dzhang123/2a3a611b3d75a45a3f41\n        // refer: https://codepen.io/NJStudio/pen/poZoEgY?editors=0010\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.background = '#555';\n        // this.canvas.style.width = '100%';\n        // this.canvas.style.height = '100%';\n        this.canvas.width = 1000;\n        this.canvas.height = 600;\n        solution.div.appendChild(this.canvas);\n        this.ctx = this.canvas.getContext('2d')\n\n\n        this.statusRendering = new Vector(0, 0, 1)\n        let statusPre = new Vector(0, 0, 1)\n        let status = new Vector(0, 0, 1)\n        let isDrag = false\n\n        this.canvas.addEventListener('mousedown', (e) => {\n            const { offsetX, offsetY } = e\n            status.x = offsetX\n            status.y = offsetY\n            isDrag = true\n            // if (status.z > 2) isDrag = true\n        });\n        this.canvas.addEventListener('mouseup', (e) => {\n            if (!isDrag) return\n            const { offsetX, offsetY } = e\n            const dx = offsetX - status.x\n            const dy = offsetY - status.y\n            statusPre.x += dx\n            statusPre.y += dy\n            isDrag = false\n        });\n        this.canvas.addEventListener('wheel', (e) => {\n            const { offsetX, offsetY, deltaY } = e\n\n            const oy = deltaY < 0 ? 1 : -1\n            status.z += (0.2 * oy)\n\n            if (status.z < 0.2) {\n                status.z = 0.2\n            } else if (status.z > 2) {\n                status.z = 2\n            }\n\n            const { x: zx, y: zy } = zoomOffset(this.canvas, status.z, { x: offsetX, y: offsetY }, statusPre)\n            statusPre.x = zx;\n            statusPre.y = zy;\n            statusPre.z = status.z;\n\n            this.statusRendering.x = zx;\n            this.statusRendering.y = zy;\n            this.statusRendering.z = status.z;\n\n            // draw(ctx, image, this.statusRendering);\n        });\n        this.canvas.addEventListener('mousemove', (e) => {\n            if (!isDrag) return\n            const { offsetX, offsetY } = e\n            const x = statusPre.x + (offsetX - status.x)\n            const y = statusPre.y + (offsetY - status.y)\n            const { x: zx, y: zy } = applyBoundaries(this.canvas, statusPre.z, { x, y })\n\n            console.log('dddd');\n\n            this.statusRendering.x = zx;\n            this.statusRendering.y = zy;\n            this.statusRendering.z = statusPre.z;\n            // draw(ctx, image, this.statusRendering)\n        });\n\n\n        this.render(this.ctx);\n\n    }\n    public destroy() {\n\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        requestAnimationFrame(() => { this.render(ctx); });\n\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        ctx.save();\n        ctx.translate(this.statusRendering.x, this.statusRendering.y);\n        \n        // console.log(this.statusRendering.x, this.statusRendering.y)\n        // ctx.scale(this.statusRendering.z, this.statusRendering.z)\n\n        // ctx.restore();\n\n        ctx.beginPath();\n        ctx.arc(100, 100, 100, 0, Math.PI * 2.0);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.restore()\n    }\n}\nexport class Vector {\n    static add(v0: Vector, v1: Vector) {\n        return new Vector(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\n    }\n    static subtract(v0: Vector, v1: Vector) {\n        return new Vector(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\n    }\n    public static distance(v0: Vector, v1: Vector): number {\n        return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n    }\n    public static deepCopy(v: Vector): Vector {\n        return new Vector(v.x, v.y, v.z);\n    }\n    public x: number\n    public y: number\n    public z: number\n    constructor(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    public normalize() {\n        let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        this.x /= len;\n        this.y /= len;\n        this.z /= len;\n    }\n};\nexport const zoomOffset = (canvas, scale, { x, y }, statusPre) => {\n    const isZooming = scale !== 1\n    const newX = isZooming ? (x + Math.abs(statusPre.x)) / statusPre.z : x\n    const newY = isZooming ? (y + Math.abs(statusPre.y)) / statusPre.z : y\n    const dx = newX - (newX * scale) + (x - newX)\n    const dy = newY - (newY * scale) + (y - newY)\n    return { ...applyBoundaries(canvas, scale, { x: dx, y: dy }) }\n};\nexport const applyBoundaries = (canvas, scale, { x, y }) => {\n    const scaleMargin = 1 - scale;\n    const maxOffsetX = scaleMargin * canvas.width;\n    const maxOffsetY = scaleMargin * canvas.height;\n    if (x > 0) {\n        x = 0\n    } else if (x < maxOffsetX) {\n        x = maxOffsetX;\n    }\n    if (y > 0) {\n        y = 0\n    } else if (y < maxOffsetY) {\n        y = maxOffsetY;\n    }\n    return { x, y }\n};\n"],"names":["Solution","constructor","id","divHost","renderer","div","this","document","getElementById","style","display","alignItems","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","CanvasNavigation","destroy","lastElementChild","removeChild","solution","canvas","statusRendering","statusTarget","Vector","needInterpolation","img","ctx","speedInterpolation","easingInterpolation","background","getContext","statusPre","status","isDrag","addEventListener","e","offsetX","offsetY","x","y","dx","dy","deltaY","oy","z","zx","zy","zoomOffset","applyBoundaries","console","log","render","requestAnimationFrame","clearRect","save","translate","beginPath","arc","Math","PI","closePath","fill","restore","static","v0","v1","sqrt","v","length","normalize","len","scale","isZooming","newX","abs","newY","scaleMargin","maxOffsetX","maxOffsetY"],"sourceRoot":""}